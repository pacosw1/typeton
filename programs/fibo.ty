func fib_r(n: Int) -> Int {
  if (n <= 1) {
      return n
  }
  return fib_r(n - 1) + fib_r(n - 2)
}

func fibo_array(n: Int) -> Int {

  if (n > 100) {
      print("n is too big")
      return -1
  }

  var arr: Int[101]
  var i: Int

  i = 2
  arr[0] = 0
  arr[1] = 1

  while (i <= n) {
        arr[i] = arr[i - 1] + arr[i - 2]
        i += 1
  }

  return arr[n]

}
// test fact
func factorial_r(n: Int) -> Int {
    if (n == 0) {
        return 1
    }
    return n * factorial_r(n - 1)
}

func factorial_i(n: Int) -> Int {
    // show me the way
    print("hello")
    var res: Int
    var i: Int
    i = 2
    res = 1
    while (i <= n) {
        res *= i
        i += 1
    }
    return res
}


func duck() -> Int {
    return 2
}



func fib_i(n: Int) -> Int {
    var curr: Int
    var prev: Int
    var temp: Int
    var count: Int

    count = 2
    curr = 1
    prev = 1

    if (n < 2) {
        return n
    }

    while (count < n) {
        temp = curr + prev
        prev = curr
        curr = temp
        count += 1
    }

    return curr
}

func main() -> {
    var x : Int
    var y: Float
    var z: Int
    var a: Int
    var f: Int

    //z = factorial_r(10)
    //a = factorial_i(10)

    // y = fib_r(20)
    f = fibo_array(20)
    x = fib_i(20)

    // print(z)
    // print(f)
    // print(a)
    // duck()

    print(x)
    print(f)
}
