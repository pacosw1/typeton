var x: Int[10]

func fib_r(n: Int) -> Int {
  if (n <= 1) {
      return n
  }
  return fib_r(n-1) + fib_r(n-2)
}

func factorial_r(n: Int) -> Int {
    if (n == 0) {
        return 1
    }
    return n * factorial_r(n - 1)
}

func factorial_i(n: Int) -> Int {
    var res: Int
    var i: Int
    i = 2
    res = 1
    while (i <= n) {
        res *= i
        i += 1
    }
    return res
}



func fib_i(n: Int) -> Int {
    var curr: Int
    var prev: Int
    var temp: Int
    var count: Int

    count = 2
    curr = 1
    prev = 1

    if (n < 2) {
        return n
    }

    while (count < n) {
        temp = curr + prev
        prev = curr
        curr = temp
        count += 1
    }

    return curr
}

func duck()  {
    
}



func main() {
    var x: Int
    var y: Int
    var z: Int
    var a: Int

    z = factorial_r(10)
    a = factorial_i(10)

    y = fib_r(20)
    x = fib_i(20)

    print(z)
    print(a)

    print(x)
    print(y)
   

 
}
