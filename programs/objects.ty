class Name {
    first: String
    last: String
}


class Dog {
    parent: Dog
    name: String
    age: Int
}

// var d : Int
// var y: Int
// var global_dog: Dog

// func test_array_with_delete() -> {
//   var heapArray: Int[100]
//   heapArray[0] = 1
//   delete heapArray
// }

// func test_array_with_memory_leak() -> {
//   var heapArray: Int[100]
//   heapArray[0] = 1
// }


func main() -> {
  var son: Dog
  var dad: Dog
  var grandpa: Dog

  son = new Dog()
  var name: Name
  name = new Name()
  son.name = "Son"
  son.age = 500

  grandpa = new Dog()
  grandpa.name = "grandpa"
  grandpa.age = 5000

  dad = new Dog()
  dad.age = 1000
  dad.name = "Dad"


  son.parent = dad
  dad.parent = grandpa

  

  print(son.age) //should be son age(500)
  print(son.parent.age) //should be dad age(1000)
  print(son.parent.parent.age) //should be grandpa age(5000)

  // parent now points back to son dad->son
  dad.parent = son

  // son->dad->son
  print(dad.parent.age) //should be son age(500)

  // son->dad->son->dad
  print(son.parent.parent.parent.age) //should be dad age (1000)
  son.parent.parent.parent.name = "Still dad"

  print(son.parent.name) //Still Dad

  print(son.parent.parent.name) //Son
  print(dad.parent.name) //Son


  // type validation done by compiler
  // son.parent = "hello"
  // son.name = 20
  // son.age = "hello"
  // dad.parent = "hello"
  son.age = 100


  // this shouldn't run (Dog != Name)
  // son = name

  // this shouldn't run either (Dog != Name)
  son.parent = grandpa


  // print(son.name)

}
