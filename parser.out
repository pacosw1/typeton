Created by PLY (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> program1 program
Rule 2     program -> program1
Rule 3     program1 -> body NLINE
Rule 4     program1 -> NLINE
Rule 5     body -> class
Rule 6     body -> function
Rule 7     body -> declaration
Rule 8     class -> CLASS ID class_block
Rule 9     class -> CLASS ID COLON ID class_block
Rule 10    function -> FUNC ID add_function params set_void init_block end_function
Rule 11    function -> FUNC ID add_function params ARROW variable_primitive init_block end_function
Rule 12    function -> FUNC ID error init_block
Rule 13    declaration -> variable ASSIGN push_operator bool_expr execute_priority_0
Rule 14    declaration -> variable ASSIGN array
Rule 15    declaration -> variable
Rule 16    declaration -> variable error NLINE
Rule 17    array -> LBRACK array1 RBRACK
Rule 18    array1 -> expression COMMA array1
Rule 19    array1 -> expression
Rule 20    params -> LPAREN params1 RPAREN
Rule 21    params -> LPAREN RPAREN
Rule 22    params -> LPAREN error RPAREN
Rule 23    params1 -> param
Rule 24    params1 -> param COMMA params1
Rule 25    params1 -> error COMMA params1
Rule 26    param -> ID add_param COLON variable_primitive
Rule 27    param -> ID error variable_primitive
Rule 28    param -> error COLON variable_primitive
Rule 29    class_block -> LCURLY class_block1 RCURLY
Rule 30    class_block1 -> class_block2
Rule 31    class_block1 -> class_block3 class_block2
Rule 32    class_block2 -> NLINE class_block1
Rule 33    class_block2 -> NLINE
Rule 34    class_block3 -> function
Rule 35    class_block3 -> declaration
Rule 36    init_block -> LCURLY init_block1 RCURLY
Rule 37    init_block1 -> init_block2
Rule 38    init_block1 -> init_block3 init_block2
Rule 39    init_block2 -> NLINE init_block1
Rule 40    init_block2 -> NLINE
Rule 41    init_block3 -> statement
Rule 42    init_block3 -> declaration
Rule 43    block -> LCURLY block1 RCURLY
Rule 44    block1 -> block2
Rule 45    block1 -> statement block2
Rule 46    block2 -> NLINE block1
Rule 47    block2 -> NLINE
Rule 48    statement -> display
Rule 49    statement -> if
Rule 50    statement -> while
Rule 51    statement -> input
Rule 52    statement -> assign
Rule 53    statement -> call
Rule 54    statement -> return
Rule 55    statement -> error
Rule 56    while -> WHILE LPAREN save_loop_start bool_expr set_loop_condition RPAREN block fill_and_reset_loop
Rule 57    input -> variable ASSIGN INPUT LPAREN string RPAREN
Rule 58    display -> PRINT push_operator LPAREN bool_expr RPAREN execute_builtin_call
Rule 59    return -> RETURN
Rule 60    return -> RETURN push_operator bool_expr set_return
Rule 61    assign -> ID push_variable assign1 bool_expr execute_priority_0
Rule 62    assign -> ID push_variable error execute_priority_0
Rule 63    assign -> ID push_variable assign1 error execute_priority_0
Rule 64    assign1 -> ASSIGN push_operator
Rule 65    assign1 -> PASSIGN
Rule 66    assign1 -> LASSIGN
Rule 67    assign1 -> MASSIGN
Rule 68    assign1 -> DASSIGN
Rule 69    call -> ID LPAREN call1 RPAREN
Rule 70    call1 -> expression
Rule 71    call1 -> expression COMMA call1
Rule 72    if -> if_single
Rule 73    if -> if_multiple
Rule 74    if_single -> IF LPAREN bool_expr RPAREN get_conditional block fill_end_single
Rule 75    if_multiple -> IF LPAREN bool_expr RPAREN get_conditional block if_multiple_2
Rule 76    if_multiple_2 -> fill_and_goto ELSE if_multiple
Rule 77    if_multiple_2 -> fill_and_goto ELSE block fill_end
Rule 78    bool_expr -> relational_exp execute_priority_1
Rule 79    bool_expr -> relational_exp execute_priority_1 AND push_operator bool_expr
Rule 80    bool_expr -> relational_exp execute_priority_1 OR push_operator bool_expr
Rule 81    relational_exp -> expression execute_priority_2 comp relational_exp
Rule 82    relational_exp -> expression execute_priority_2
Rule 83    expression -> term execute_priority_3
Rule 84    expression -> term execute_priority_3 PLUS push_operator expression
Rule 85    expression -> term execute_priority_3 MINUS push_operator expression
Rule 86    term -> factor execute_priority_4
Rule 87    term -> factor execute_priority_4 TIMES push_operator term
Rule 88    term -> factor execute_priority_4 DIVIDE push_operator term
Rule 89    term -> factor execute_priority_4 TIMES error push_operator term
Rule 90    term -> factor execute_priority_4 DIVIDE error push_operator term
Rule 91    factor -> constant
Rule 92    factor -> LPAREN push_operator bool_expr RPAREN push_operator
Rule 93    factor -> LPAREN push_operator error RPAREN push_operator
Rule 94    call_array -> ID LBRACK expression RBRACK
Rule 95    constant -> INTLIT add_constant
Rule 96    constant -> FLOATLIT add_constant
Rule 97    constant -> BOOLLIT add_constant
Rule 98    constant -> string
Rule 99    constant -> call
Rule 100   constant -> call_array
Rule 101   constant -> constant2
Rule 102   constant2 -> ID push_variable
Rule 103   constant2 -> ID PERIOD constant2
Rule 104   comp -> LESS push_operator
Rule 105   comp -> MORE push_operator
Rule 106   comp -> EQUALS push_operator
Rule 107   comp -> NEQUALS push_operator
Rule 108   comp -> LEQUALS push_operator
Rule 109   comp -> MEQUALS push_operator
Rule 110   variable -> VAR ID add_var COLON type
Rule 111   variable -> VAR ID error type
Rule 112   variable -> VAR ID add_var COLON error NLINE
Rule 113   type -> variable_primitive
Rule 114   type -> LBRACK variable_primitive RBRACK
Rule 115   type -> LBRACK ID RBRACK
Rule 116   variable_primitive -> INT set_variable_type
Rule 117   variable_primitive -> FLOAT set_variable_type
Rule 118   variable_primitive -> STRING set_variable_type
Rule 119   variable_primitive -> BOOL set_variable_type
Rule 120   string -> string_expr
Rule 121   string -> string_expr string
Rule 122   string_expr -> STRINGLIT add_constant
Rule 123   string_expr -> BSLASH LPAREN expression RPAREN
Rule 124   add_function -> <empty>
Rule 125   set_void -> <empty>
Rule 126   set_return -> <empty>
Rule 127   end_function -> <empty>
Rule 128   add_constant -> <empty>
Rule 129   add_param -> <empty>
Rule 130   add_var -> <empty>
Rule 131   execute_priority_0 -> <empty>
Rule 132   execute_builtin_call -> <empty>
Rule 133   execute_priority_1 -> <empty>
Rule 134   execute_priority_2 -> <empty>
Rule 135   execute_priority_3 -> <empty>
Rule 136   execute_priority_4 -> <empty>
Rule 137   get_conditional -> <empty>
Rule 138   fill_and_goto -> <empty>
Rule 139   fill_end -> <empty>
Rule 140   fill_end_single -> <empty>
Rule 141   save_loop_start -> <empty>
Rule 142   set_loop_condition -> <empty>
Rule 143   fill_and_reset_loop -> <empty>
Rule 144   push_operator -> <empty>
Rule 145   push_variable -> <empty>
Rule 146   set_variable_type -> <empty>

Terminals, with rules where they appear

AND                  : 79
ARROW                : 11
ASSIGN               : 13 14 57 64
BOOL                 : 119
BOOLLIT              : 97
BSLASH               : 123
CLASS                : 8 9
COLON                : 9 26 28 110 112
COMMA                : 18 24 25 71
DASSIGN              : 68
DIVIDE               : 88 90
ELSE                 : 76 77
EQUALS               : 106
FLOAT                : 117
FLOATLIT             : 96
FUNC                 : 10 11 12
ID                   : 8 9 9 10 11 12 26 27 61 62 63 69 94 102 103 110 111 112 115
IF                   : 74 75
INPUT                : 57
INT                  : 116
INTLIT               : 95
LASSIGN              : 66
LBRACK               : 17 94 114 115
LCURLY               : 29 36 43
LEQUALS              : 108
LESS                 : 104
LPAREN               : 20 21 22 56 57 58 69 74 75 92 93 123
MASSIGN              : 67
MEQUALS              : 109
MINUS                : 85
MORE                 : 105
NEQUALS              : 107
NLINE                : 3 4 16 32 33 39 40 46 47 112
OR                   : 80
PASSIGN              : 65
PERIOD               : 103
PLUS                 : 84
PRINT                : 58
RBRACK               : 17 94 114 115
RCURLY               : 29 36 43
RETURN               : 59 60
RPAREN               : 20 21 22 56 57 58 69 74 75 92 93 123
STRING               : 118
STRINGLIT            : 122
TIMES                : 87 89
VAR                  : 110 111 112
WHILE                : 56
error                : 12 16 22 25 27 28 55 62 63 89 90 93 111 112

Nonterminals, with rules where they appear

add_constant         : 95 96 97 122
add_function         : 10 11
add_param            : 26
add_var              : 110 112
array                : 14
array1               : 17 18
assign               : 52
assign1              : 61 63
block                : 56 74 75 77
block1               : 43 46
block2               : 44 45
body                 : 3
bool_expr            : 13 56 58 60 61 74 75 79 80 92
call                 : 53 99
call1                : 69 71
call_array           : 100
class                : 5
class_block          : 8 9
class_block1         : 29 32
class_block2         : 30 31
class_block3         : 31
comp                 : 81
constant             : 91
constant2            : 101 103
declaration          : 7 35 42
display              : 48
end_function         : 10 11
execute_builtin_call : 58
execute_priority_0   : 13 61 62 63
execute_priority_1   : 78 79 80
execute_priority_2   : 81 82
execute_priority_3   : 83 84 85
execute_priority_4   : 86 87 88 89 90
expression           : 18 19 70 71 81 82 84 85 94 123
factor               : 86 87 88 89 90
fill_and_goto        : 76 77
fill_and_reset_loop  : 56
fill_end             : 77
fill_end_single      : 74
function             : 6 34
get_conditional      : 74 75
if                   : 49
if_multiple          : 73 76
if_multiple_2        : 75
if_single            : 72
init_block           : 10 11 12
init_block1          : 36 39
init_block2          : 37 38
init_block3          : 38
input                : 51
param                : 23 24
params               : 10 11
params1              : 20 24 25
program              : 1 0
program1             : 1 2
push_operator        : 13 58 60 64 79 80 84 85 87 88 89 90 92 92 93 93 104 105 106 107 108 109
push_variable        : 61 62 63 102
relational_exp       : 78 79 80 81
return               : 54
save_loop_start      : 56
set_loop_condition   : 56
set_return           : 60
set_variable_type    : 116 117 118 119
set_void             : 10
statement            : 41 45
string               : 57 98 121
string_expr          : 120 121
term                 : 83 84 85 87 88 89 90
type                 : 110 111
variable             : 13 14 15 16 57
variable_primitive   : 11 26 27 28 113 114
while                : 50


state 0

    (0) S' -> . program
    (1) program -> . program1 program
    (2) program -> . program1
    (3) program1 -> . body NLINE
    (4) program1 -> . NLINE
    (5) body -> . class
    (6) body -> . function
    (7) body -> . declaration
    (8) class -> . CLASS ID class_block
    (9) class -> . CLASS ID COLON ID class_block
    (10) function -> . FUNC ID add_function params set_void init_block end_function
    (11) function -> . FUNC ID add_function params ARROW variable_primitive init_block end_function
    (12) function -> . FUNC ID error init_block
    (13) declaration -> . variable ASSIGN push_operator bool_expr execute_priority_0
    (14) declaration -> . variable ASSIGN array
    (15) declaration -> . variable
    (16) declaration -> . variable error NLINE
    (110) variable -> . VAR ID add_var COLON type
    (111) variable -> . VAR ID error type
    (112) variable -> . VAR ID add_var COLON error NLINE

    NLINE           shift and go to state 4
    CLASS           shift and go to state 8
    FUNC            shift and go to state 9
    VAR             shift and go to state 11

    program                        shift and go to state 1
    program1                       shift and go to state 2
    body                           shift and go to state 3
    class                          shift and go to state 5
    function                       shift and go to state 6
    declaration                    shift and go to state 7
    variable                       shift and go to state 10

state 1

    (0) S' -> program .



state 2

    (1) program -> program1 . program
    (2) program -> program1 .
    (1) program -> . program1 program
    (2) program -> . program1
    (3) program1 -> . body NLINE
    (4) program1 -> . NLINE
    (5) body -> . class
    (6) body -> . function
    (7) body -> . declaration
    (8) class -> . CLASS ID class_block
    (9) class -> . CLASS ID COLON ID class_block
    (10) function -> . FUNC ID add_function params set_void init_block end_function
    (11) function -> . FUNC ID add_function params ARROW variable_primitive init_block end_function
    (12) function -> . FUNC ID error init_block
    (13) declaration -> . variable ASSIGN push_operator bool_expr execute_priority_0
    (14) declaration -> . variable ASSIGN array
    (15) declaration -> . variable
    (16) declaration -> . variable error NLINE
    (110) variable -> . VAR ID add_var COLON type
    (111) variable -> . VAR ID error type
    (112) variable -> . VAR ID add_var COLON error NLINE

    $end            reduce using rule 2 (program -> program1 .)
    NLINE           shift and go to state 4
    CLASS           shift and go to state 8
    FUNC            shift and go to state 9
    VAR             shift and go to state 11

    program1                       shift and go to state 2
    program                        shift and go to state 12
    body                           shift and go to state 3
    class                          shift and go to state 5
    function                       shift and go to state 6
    declaration                    shift and go to state 7
    variable                       shift and go to state 10

state 3

    (3) program1 -> body . NLINE

    NLINE           shift and go to state 13


state 4

    (4) program1 -> NLINE .

    NLINE           reduce using rule 4 (program1 -> NLINE .)
    CLASS           reduce using rule 4 (program1 -> NLINE .)
    FUNC            reduce using rule 4 (program1 -> NLINE .)
    VAR             reduce using rule 4 (program1 -> NLINE .)
    $end            reduce using rule 4 (program1 -> NLINE .)


state 5

    (5) body -> class .

    NLINE           reduce using rule 5 (body -> class .)


state 6

    (6) body -> function .

    NLINE           reduce using rule 6 (body -> function .)


state 7

    (7) body -> declaration .

    NLINE           reduce using rule 7 (body -> declaration .)


state 8

    (8) class -> CLASS . ID class_block
    (9) class -> CLASS . ID COLON ID class_block

    ID              shift and go to state 14


state 9

    (10) function -> FUNC . ID add_function params set_void init_block end_function
    (11) function -> FUNC . ID add_function params ARROW variable_primitive init_block end_function
    (12) function -> FUNC . ID error init_block

    ID              shift and go to state 15


state 10

    (13) declaration -> variable . ASSIGN push_operator bool_expr execute_priority_0
    (14) declaration -> variable . ASSIGN array
    (15) declaration -> variable .
    (16) declaration -> variable . error NLINE

    ASSIGN          shift and go to state 16
    NLINE           reduce using rule 15 (declaration -> variable .)
    error           shift and go to state 17


state 11

    (110) variable -> VAR . ID add_var COLON type
    (111) variable -> VAR . ID error type
    (112) variable -> VAR . ID add_var COLON error NLINE

    ID              shift and go to state 18


state 12

    (1) program -> program1 program .

    $end            reduce using rule 1 (program -> program1 program .)


state 13

    (3) program1 -> body NLINE .

    NLINE           reduce using rule 3 (program1 -> body NLINE .)
    CLASS           reduce using rule 3 (program1 -> body NLINE .)
    FUNC            reduce using rule 3 (program1 -> body NLINE .)
    VAR             reduce using rule 3 (program1 -> body NLINE .)
    $end            reduce using rule 3 (program1 -> body NLINE .)


state 14

    (8) class -> CLASS ID . class_block
    (9) class -> CLASS ID . COLON ID class_block
    (29) class_block -> . LCURLY class_block1 RCURLY

    COLON           shift and go to state 20
    LCURLY          shift and go to state 21

    class_block                    shift and go to state 19

state 15

    (10) function -> FUNC ID . add_function params set_void init_block end_function
    (11) function -> FUNC ID . add_function params ARROW variable_primitive init_block end_function
    (12) function -> FUNC ID . error init_block
    (124) add_function -> .

    error           shift and go to state 23
    LPAREN          reduce using rule 124 (add_function -> .)

    add_function                   shift and go to state 22

state 16

    (13) declaration -> variable ASSIGN . push_operator bool_expr execute_priority_0
    (14) declaration -> variable ASSIGN . array
    (144) push_operator -> .
    (17) array -> . LBRACK array1 RBRACK

    LPAREN          reduce using rule 144 (push_operator -> .)
    INTLIT          reduce using rule 144 (push_operator -> .)
    FLOATLIT        reduce using rule 144 (push_operator -> .)
    BOOLLIT         reduce using rule 144 (push_operator -> .)
    ID              reduce using rule 144 (push_operator -> .)
    STRINGLIT       reduce using rule 144 (push_operator -> .)
    BSLASH          reduce using rule 144 (push_operator -> .)
    LBRACK          shift and go to state 26

    push_operator                  shift and go to state 24
    array                          shift and go to state 25

state 17

    (16) declaration -> variable error . NLINE

    NLINE           shift and go to state 27


state 18

    (110) variable -> VAR ID . add_var COLON type
    (111) variable -> VAR ID . error type
    (112) variable -> VAR ID . add_var COLON error NLINE
    (130) add_var -> .

    error           shift and go to state 29
    COLON           reduce using rule 130 (add_var -> .)

    add_var                        shift and go to state 28

state 19

    (8) class -> CLASS ID class_block .

    NLINE           reduce using rule 8 (class -> CLASS ID class_block .)


state 20

    (9) class -> CLASS ID COLON . ID class_block

    ID              shift and go to state 30


state 21

    (29) class_block -> LCURLY . class_block1 RCURLY
    (30) class_block1 -> . class_block2
    (31) class_block1 -> . class_block3 class_block2
    (32) class_block2 -> . NLINE class_block1
    (33) class_block2 -> . NLINE
    (34) class_block3 -> . function
    (35) class_block3 -> . declaration
    (10) function -> . FUNC ID add_function params set_void init_block end_function
    (11) function -> . FUNC ID add_function params ARROW variable_primitive init_block end_function
    (12) function -> . FUNC ID error init_block
    (13) declaration -> . variable ASSIGN push_operator bool_expr execute_priority_0
    (14) declaration -> . variable ASSIGN array
    (15) declaration -> . variable
    (16) declaration -> . variable error NLINE
    (110) variable -> . VAR ID add_var COLON type
    (111) variable -> . VAR ID error type
    (112) variable -> . VAR ID add_var COLON error NLINE

    NLINE           shift and go to state 34
    FUNC            shift and go to state 9
    VAR             shift and go to state 11

    class_block1                   shift and go to state 31
    class_block2                   shift and go to state 32
    class_block3                   shift and go to state 33
    function                       shift and go to state 35
    declaration                    shift and go to state 36
    variable                       shift and go to state 10

state 22

    (10) function -> FUNC ID add_function . params set_void init_block end_function
    (11) function -> FUNC ID add_function . params ARROW variable_primitive init_block end_function
    (20) params -> . LPAREN params1 RPAREN
    (21) params -> . LPAREN RPAREN
    (22) params -> . LPAREN error RPAREN

    LPAREN          shift and go to state 38

    params                         shift and go to state 37

state 23

    (12) function -> FUNC ID error . init_block
    (36) init_block -> . LCURLY init_block1 RCURLY

    LCURLY          shift and go to state 40

    init_block                     shift and go to state 39

state 24

    (13) declaration -> variable ASSIGN push_operator . bool_expr execute_priority_0
    (78) bool_expr -> . relational_exp execute_priority_1
    (79) bool_expr -> . relational_exp execute_priority_1 AND push_operator bool_expr
    (80) bool_expr -> . relational_exp execute_priority_1 OR push_operator bool_expr
    (81) relational_exp -> . expression execute_priority_2 comp relational_exp
    (82) relational_exp -> . expression execute_priority_2
    (83) expression -> . term execute_priority_3
    (84) expression -> . term execute_priority_3 PLUS push_operator expression
    (85) expression -> . term execute_priority_3 MINUS push_operator expression
    (86) term -> . factor execute_priority_4
    (87) term -> . factor execute_priority_4 TIMES push_operator term
    (88) term -> . factor execute_priority_4 DIVIDE push_operator term
    (89) term -> . factor execute_priority_4 TIMES error push_operator term
    (90) term -> . factor execute_priority_4 DIVIDE error push_operator term
    (91) factor -> . constant
    (92) factor -> . LPAREN push_operator bool_expr RPAREN push_operator
    (93) factor -> . LPAREN push_operator error RPAREN push_operator
    (95) constant -> . INTLIT add_constant
    (96) constant -> . FLOATLIT add_constant
    (97) constant -> . BOOLLIT add_constant
    (98) constant -> . string
    (99) constant -> . call
    (100) constant -> . call_array
    (101) constant -> . constant2
    (120) string -> . string_expr
    (121) string -> . string_expr string
    (69) call -> . ID LPAREN call1 RPAREN
    (94) call_array -> . ID LBRACK expression RBRACK
    (102) constant2 -> . ID push_variable
    (103) constant2 -> . ID PERIOD constant2
    (122) string_expr -> . STRINGLIT add_constant
    (123) string_expr -> . BSLASH LPAREN expression RPAREN

    LPAREN          shift and go to state 47
    INTLIT          shift and go to state 48
    FLOATLIT        shift and go to state 49
    BOOLLIT         shift and go to state 50
    ID              shift and go to state 56
    STRINGLIT       shift and go to state 57
    BSLASH          shift and go to state 58

    bool_expr                      shift and go to state 41
    relational_exp                 shift and go to state 42
    expression                     shift and go to state 43
    term                           shift and go to state 44
    factor                         shift and go to state 45
    constant                       shift and go to state 46
    string                         shift and go to state 51
    call                           shift and go to state 52
    call_array                     shift and go to state 53
    constant2                      shift and go to state 54
    string_expr                    shift and go to state 55

state 25

    (14) declaration -> variable ASSIGN array .

    NLINE           reduce using rule 14 (declaration -> variable ASSIGN array .)


state 26

    (17) array -> LBRACK . array1 RBRACK
    (18) array1 -> . expression COMMA array1
    (19) array1 -> . expression
    (83) expression -> . term execute_priority_3
    (84) expression -> . term execute_priority_3 PLUS push_operator expression
    (85) expression -> . term execute_priority_3 MINUS push_operator expression
    (86) term -> . factor execute_priority_4
    (87) term -> . factor execute_priority_4 TIMES push_operator term
    (88) term -> . factor execute_priority_4 DIVIDE push_operator term
    (89) term -> . factor execute_priority_4 TIMES error push_operator term
    (90) term -> . factor execute_priority_4 DIVIDE error push_operator term
    (91) factor -> . constant
    (92) factor -> . LPAREN push_operator bool_expr RPAREN push_operator
    (93) factor -> . LPAREN push_operator error RPAREN push_operator
    (95) constant -> . INTLIT add_constant
    (96) constant -> . FLOATLIT add_constant
    (97) constant -> . BOOLLIT add_constant
    (98) constant -> . string
    (99) constant -> . call
    (100) constant -> . call_array
    (101) constant -> . constant2
    (120) string -> . string_expr
    (121) string -> . string_expr string
    (69) call -> . ID LPAREN call1 RPAREN
    (94) call_array -> . ID LBRACK expression RBRACK
    (102) constant2 -> . ID push_variable
    (103) constant2 -> . ID PERIOD constant2
    (122) string_expr -> . STRINGLIT add_constant
    (123) string_expr -> . BSLASH LPAREN expression RPAREN

    LPAREN          shift and go to state 47
    INTLIT          shift and go to state 48
    FLOATLIT        shift and go to state 49
    BOOLLIT         shift and go to state 50
    ID              shift and go to state 56
    STRINGLIT       shift and go to state 57
    BSLASH          shift and go to state 58

    array1                         shift and go to state 59
    expression                     shift and go to state 60
    term                           shift and go to state 44
    factor                         shift and go to state 45
    constant                       shift and go to state 46
    string                         shift and go to state 51
    call                           shift and go to state 52
    call_array                     shift and go to state 53
    constant2                      shift and go to state 54
    string_expr                    shift and go to state 55

state 27

    (16) declaration -> variable error NLINE .

    NLINE           reduce using rule 16 (declaration -> variable error NLINE .)


state 28

    (110) variable -> VAR ID add_var . COLON type
    (112) variable -> VAR ID add_var . COLON error NLINE

    COLON           shift and go to state 61


state 29

    (111) variable -> VAR ID error . type
    (113) type -> . variable_primitive
    (114) type -> . LBRACK variable_primitive RBRACK
    (115) type -> . LBRACK ID RBRACK
    (116) variable_primitive -> . INT set_variable_type
    (117) variable_primitive -> . FLOAT set_variable_type
    (118) variable_primitive -> . STRING set_variable_type
    (119) variable_primitive -> . BOOL set_variable_type

    LBRACK          shift and go to state 64
    INT             shift and go to state 65
    FLOAT           shift and go to state 66
    STRING          shift and go to state 67
    BOOL            shift and go to state 68

    type                           shift and go to state 62
    variable_primitive             shift and go to state 63

state 30

    (9) class -> CLASS ID COLON ID . class_block
    (29) class_block -> . LCURLY class_block1 RCURLY

    LCURLY          shift and go to state 21

    class_block                    shift and go to state 69

state 31

    (29) class_block -> LCURLY class_block1 . RCURLY

    RCURLY          shift and go to state 70


state 32

    (30) class_block1 -> class_block2 .

    RCURLY          reduce using rule 30 (class_block1 -> class_block2 .)


state 33

    (31) class_block1 -> class_block3 . class_block2
    (32) class_block2 -> . NLINE class_block1
    (33) class_block2 -> . NLINE

    NLINE           shift and go to state 34

    class_block2                   shift and go to state 71

state 34

    (32) class_block2 -> NLINE . class_block1
    (33) class_block2 -> NLINE .
    (30) class_block1 -> . class_block2
    (31) class_block1 -> . class_block3 class_block2
    (32) class_block2 -> . NLINE class_block1
    (33) class_block2 -> . NLINE
    (34) class_block3 -> . function
    (35) class_block3 -> . declaration
    (10) function -> . FUNC ID add_function params set_void init_block end_function
    (11) function -> . FUNC ID add_function params ARROW variable_primitive init_block end_function
    (12) function -> . FUNC ID error init_block
    (13) declaration -> . variable ASSIGN push_operator bool_expr execute_priority_0
    (14) declaration -> . variable ASSIGN array
    (15) declaration -> . variable
    (16) declaration -> . variable error NLINE
    (110) variable -> . VAR ID add_var COLON type
    (111) variable -> . VAR ID error type
    (112) variable -> . VAR ID add_var COLON error NLINE

    RCURLY          reduce using rule 33 (class_block2 -> NLINE .)
    NLINE           shift and go to state 34
    FUNC            shift and go to state 9
    VAR             shift and go to state 11

    class_block1                   shift and go to state 72
    class_block2                   shift and go to state 32
    class_block3                   shift and go to state 33
    function                       shift and go to state 35
    declaration                    shift and go to state 36
    variable                       shift and go to state 10

state 35

    (34) class_block3 -> function .

    NLINE           reduce using rule 34 (class_block3 -> function .)


state 36

    (35) class_block3 -> declaration .

    NLINE           reduce using rule 35 (class_block3 -> declaration .)


state 37

    (10) function -> FUNC ID add_function params . set_void init_block end_function
    (11) function -> FUNC ID add_function params . ARROW variable_primitive init_block end_function
    (125) set_void -> .

    ARROW           shift and go to state 74
    LCURLY          reduce using rule 125 (set_void -> .)

    set_void                       shift and go to state 73

state 38

    (20) params -> LPAREN . params1 RPAREN
    (21) params -> LPAREN . RPAREN
    (22) params -> LPAREN . error RPAREN
    (23) params1 -> . param
    (24) params1 -> . param COMMA params1
    (25) params1 -> . error COMMA params1
    (26) param -> . ID add_param COLON variable_primitive
    (27) param -> . ID error variable_primitive
    (28) param -> . error COLON variable_primitive

    RPAREN          shift and go to state 76
    error           shift and go to state 77
    ID              shift and go to state 79

    params1                        shift and go to state 75
    param                          shift and go to state 78

state 39

    (12) function -> FUNC ID error init_block .

    NLINE           reduce using rule 12 (function -> FUNC ID error init_block .)


state 40

    (36) init_block -> LCURLY . init_block1 RCURLY
    (37) init_block1 -> . init_block2
    (38) init_block1 -> . init_block3 init_block2
    (39) init_block2 -> . NLINE init_block1
    (40) init_block2 -> . NLINE
    (41) init_block3 -> . statement
    (42) init_block3 -> . declaration
    (48) statement -> . display
    (49) statement -> . if
    (50) statement -> . while
    (51) statement -> . input
    (52) statement -> . assign
    (53) statement -> . call
    (54) statement -> . return
    (55) statement -> . error
    (13) declaration -> . variable ASSIGN push_operator bool_expr execute_priority_0
    (14) declaration -> . variable ASSIGN array
    (15) declaration -> . variable
    (16) declaration -> . variable error NLINE
    (58) display -> . PRINT push_operator LPAREN bool_expr RPAREN execute_builtin_call
    (72) if -> . if_single
    (73) if -> . if_multiple
    (56) while -> . WHILE LPAREN save_loop_start bool_expr set_loop_condition RPAREN block fill_and_reset_loop
    (57) input -> . variable ASSIGN INPUT LPAREN string RPAREN
    (61) assign -> . ID push_variable assign1 bool_expr execute_priority_0
    (62) assign -> . ID push_variable error execute_priority_0
    (63) assign -> . ID push_variable assign1 error execute_priority_0
    (69) call -> . ID LPAREN call1 RPAREN
    (59) return -> . RETURN
    (60) return -> . RETURN push_operator bool_expr set_return
    (110) variable -> . VAR ID add_var COLON type
    (111) variable -> . VAR ID error type
    (112) variable -> . VAR ID add_var COLON error NLINE
    (74) if_single -> . IF LPAREN bool_expr RPAREN get_conditional block fill_end_single
    (75) if_multiple -> . IF LPAREN bool_expr RPAREN get_conditional block if_multiple_2

    NLINE           shift and go to state 83
    error           shift and go to state 93
    PRINT           shift and go to state 95
    WHILE           shift and go to state 98
    ID              shift and go to state 99
    RETURN          shift and go to state 100
    VAR             shift and go to state 11
    IF              shift and go to state 101

    init_block1                    shift and go to state 80
    init_block2                    shift and go to state 81
    init_block3                    shift and go to state 82
    statement                      shift and go to state 84
    declaration                    shift and go to state 85
    display                        shift and go to state 86
    if                             shift and go to state 87
    while                          shift and go to state 88
    input                          shift and go to state 89
    assign                         shift and go to state 90
    call                           shift and go to state 91
    return                         shift and go to state 92
    variable                       shift and go to state 94
    if_single                      shift and go to state 96
    if_multiple                    shift and go to state 97

state 41

    (13) declaration -> variable ASSIGN push_operator bool_expr . execute_priority_0
    (131) execute_priority_0 -> .

    NLINE           reduce using rule 131 (execute_priority_0 -> .)

    execute_priority_0             shift and go to state 102

state 42

    (78) bool_expr -> relational_exp . execute_priority_1
    (79) bool_expr -> relational_exp . execute_priority_1 AND push_operator bool_expr
    (80) bool_expr -> relational_exp . execute_priority_1 OR push_operator bool_expr
    (133) execute_priority_1 -> .

    AND             reduce using rule 133 (execute_priority_1 -> .)
    OR              reduce using rule 133 (execute_priority_1 -> .)
    NLINE           reduce using rule 133 (execute_priority_1 -> .)
    RPAREN          reduce using rule 133 (execute_priority_1 -> .)

    execute_priority_1             shift and go to state 103

state 43

    (81) relational_exp -> expression . execute_priority_2 comp relational_exp
    (82) relational_exp -> expression . execute_priority_2
    (134) execute_priority_2 -> .

    LESS            reduce using rule 134 (execute_priority_2 -> .)
    MORE            reduce using rule 134 (execute_priority_2 -> .)
    EQUALS          reduce using rule 134 (execute_priority_2 -> .)
    NEQUALS         reduce using rule 134 (execute_priority_2 -> .)
    LEQUALS         reduce using rule 134 (execute_priority_2 -> .)
    MEQUALS         reduce using rule 134 (execute_priority_2 -> .)
    AND             reduce using rule 134 (execute_priority_2 -> .)
    OR              reduce using rule 134 (execute_priority_2 -> .)
    NLINE           reduce using rule 134 (execute_priority_2 -> .)
    RPAREN          reduce using rule 134 (execute_priority_2 -> .)

    execute_priority_2             shift and go to state 104

state 44

    (83) expression -> term . execute_priority_3
    (84) expression -> term . execute_priority_3 PLUS push_operator expression
    (85) expression -> term . execute_priority_3 MINUS push_operator expression
    (135) execute_priority_3 -> .

    PLUS            reduce using rule 135 (execute_priority_3 -> .)
    MINUS           reduce using rule 135 (execute_priority_3 -> .)
    LESS            reduce using rule 135 (execute_priority_3 -> .)
    MORE            reduce using rule 135 (execute_priority_3 -> .)
    EQUALS          reduce using rule 135 (execute_priority_3 -> .)
    NEQUALS         reduce using rule 135 (execute_priority_3 -> .)
    LEQUALS         reduce using rule 135 (execute_priority_3 -> .)
    MEQUALS         reduce using rule 135 (execute_priority_3 -> .)
    AND             reduce using rule 135 (execute_priority_3 -> .)
    OR              reduce using rule 135 (execute_priority_3 -> .)
    NLINE           reduce using rule 135 (execute_priority_3 -> .)
    COMMA           reduce using rule 135 (execute_priority_3 -> .)
    RBRACK          reduce using rule 135 (execute_priority_3 -> .)
    RPAREN          reduce using rule 135 (execute_priority_3 -> .)

    execute_priority_3             shift and go to state 105

state 45

    (86) term -> factor . execute_priority_4
    (87) term -> factor . execute_priority_4 TIMES push_operator term
    (88) term -> factor . execute_priority_4 DIVIDE push_operator term
    (89) term -> factor . execute_priority_4 TIMES error push_operator term
    (90) term -> factor . execute_priority_4 DIVIDE error push_operator term
    (136) execute_priority_4 -> .

    TIMES           reduce using rule 136 (execute_priority_4 -> .)
    DIVIDE          reduce using rule 136 (execute_priority_4 -> .)
    PLUS            reduce using rule 136 (execute_priority_4 -> .)
    MINUS           reduce using rule 136 (execute_priority_4 -> .)
    LESS            reduce using rule 136 (execute_priority_4 -> .)
    MORE            reduce using rule 136 (execute_priority_4 -> .)
    EQUALS          reduce using rule 136 (execute_priority_4 -> .)
    NEQUALS         reduce using rule 136 (execute_priority_4 -> .)
    LEQUALS         reduce using rule 136 (execute_priority_4 -> .)
    MEQUALS         reduce using rule 136 (execute_priority_4 -> .)
    AND             reduce using rule 136 (execute_priority_4 -> .)
    OR              reduce using rule 136 (execute_priority_4 -> .)
    NLINE           reduce using rule 136 (execute_priority_4 -> .)
    COMMA           reduce using rule 136 (execute_priority_4 -> .)
    RBRACK          reduce using rule 136 (execute_priority_4 -> .)
    RPAREN          reduce using rule 136 (execute_priority_4 -> .)

    execute_priority_4             shift and go to state 106

state 46

    (91) factor -> constant .

    TIMES           reduce using rule 91 (factor -> constant .)
    DIVIDE          reduce using rule 91 (factor -> constant .)
    PLUS            reduce using rule 91 (factor -> constant .)
    MINUS           reduce using rule 91 (factor -> constant .)
    LESS            reduce using rule 91 (factor -> constant .)
    MORE            reduce using rule 91 (factor -> constant .)
    EQUALS          reduce using rule 91 (factor -> constant .)
    NEQUALS         reduce using rule 91 (factor -> constant .)
    LEQUALS         reduce using rule 91 (factor -> constant .)
    MEQUALS         reduce using rule 91 (factor -> constant .)
    AND             reduce using rule 91 (factor -> constant .)
    OR              reduce using rule 91 (factor -> constant .)
    NLINE           reduce using rule 91 (factor -> constant .)
    COMMA           reduce using rule 91 (factor -> constant .)
    RBRACK          reduce using rule 91 (factor -> constant .)
    RPAREN          reduce using rule 91 (factor -> constant .)


state 47

    (92) factor -> LPAREN . push_operator bool_expr RPAREN push_operator
    (93) factor -> LPAREN . push_operator error RPAREN push_operator
    (144) push_operator -> .

    error           reduce using rule 144 (push_operator -> .)
    LPAREN          reduce using rule 144 (push_operator -> .)
    INTLIT          reduce using rule 144 (push_operator -> .)
    FLOATLIT        reduce using rule 144 (push_operator -> .)
    BOOLLIT         reduce using rule 144 (push_operator -> .)
    ID              reduce using rule 144 (push_operator -> .)
    STRINGLIT       reduce using rule 144 (push_operator -> .)
    BSLASH          reduce using rule 144 (push_operator -> .)

    push_operator                  shift and go to state 107

state 48

    (95) constant -> INTLIT . add_constant
    (128) add_constant -> .

    TIMES           reduce using rule 128 (add_constant -> .)
    DIVIDE          reduce using rule 128 (add_constant -> .)
    PLUS            reduce using rule 128 (add_constant -> .)
    MINUS           reduce using rule 128 (add_constant -> .)
    LESS            reduce using rule 128 (add_constant -> .)
    MORE            reduce using rule 128 (add_constant -> .)
    EQUALS          reduce using rule 128 (add_constant -> .)
    NEQUALS         reduce using rule 128 (add_constant -> .)
    LEQUALS         reduce using rule 128 (add_constant -> .)
    MEQUALS         reduce using rule 128 (add_constant -> .)
    AND             reduce using rule 128 (add_constant -> .)
    OR              reduce using rule 128 (add_constant -> .)
    NLINE           reduce using rule 128 (add_constant -> .)
    COMMA           reduce using rule 128 (add_constant -> .)
    RBRACK          reduce using rule 128 (add_constant -> .)
    RPAREN          reduce using rule 128 (add_constant -> .)

    add_constant                   shift and go to state 108

state 49

    (96) constant -> FLOATLIT . add_constant
    (128) add_constant -> .

    TIMES           reduce using rule 128 (add_constant -> .)
    DIVIDE          reduce using rule 128 (add_constant -> .)
    PLUS            reduce using rule 128 (add_constant -> .)
    MINUS           reduce using rule 128 (add_constant -> .)
    LESS            reduce using rule 128 (add_constant -> .)
    MORE            reduce using rule 128 (add_constant -> .)
    EQUALS          reduce using rule 128 (add_constant -> .)
    NEQUALS         reduce using rule 128 (add_constant -> .)
    LEQUALS         reduce using rule 128 (add_constant -> .)
    MEQUALS         reduce using rule 128 (add_constant -> .)
    AND             reduce using rule 128 (add_constant -> .)
    OR              reduce using rule 128 (add_constant -> .)
    NLINE           reduce using rule 128 (add_constant -> .)
    COMMA           reduce using rule 128 (add_constant -> .)
    RBRACK          reduce using rule 128 (add_constant -> .)
    RPAREN          reduce using rule 128 (add_constant -> .)

    add_constant                   shift and go to state 109

state 50

    (97) constant -> BOOLLIT . add_constant
    (128) add_constant -> .

    TIMES           reduce using rule 128 (add_constant -> .)
    DIVIDE          reduce using rule 128 (add_constant -> .)
    PLUS            reduce using rule 128 (add_constant -> .)
    MINUS           reduce using rule 128 (add_constant -> .)
    LESS            reduce using rule 128 (add_constant -> .)
    MORE            reduce using rule 128 (add_constant -> .)
    EQUALS          reduce using rule 128 (add_constant -> .)
    NEQUALS         reduce using rule 128 (add_constant -> .)
    LEQUALS         reduce using rule 128 (add_constant -> .)
    MEQUALS         reduce using rule 128 (add_constant -> .)
    AND             reduce using rule 128 (add_constant -> .)
    OR              reduce using rule 128 (add_constant -> .)
    NLINE           reduce using rule 128 (add_constant -> .)
    COMMA           reduce using rule 128 (add_constant -> .)
    RBRACK          reduce using rule 128 (add_constant -> .)
    RPAREN          reduce using rule 128 (add_constant -> .)

    add_constant                   shift and go to state 110

state 51

    (98) constant -> string .

    TIMES           reduce using rule 98 (constant -> string .)
    DIVIDE          reduce using rule 98 (constant -> string .)
    PLUS            reduce using rule 98 (constant -> string .)
    MINUS           reduce using rule 98 (constant -> string .)
    LESS            reduce using rule 98 (constant -> string .)
    MORE            reduce using rule 98 (constant -> string .)
    EQUALS          reduce using rule 98 (constant -> string .)
    NEQUALS         reduce using rule 98 (constant -> string .)
    LEQUALS         reduce using rule 98 (constant -> string .)
    MEQUALS         reduce using rule 98 (constant -> string .)
    AND             reduce using rule 98 (constant -> string .)
    OR              reduce using rule 98 (constant -> string .)
    NLINE           reduce using rule 98 (constant -> string .)
    COMMA           reduce using rule 98 (constant -> string .)
    RBRACK          reduce using rule 98 (constant -> string .)
    RPAREN          reduce using rule 98 (constant -> string .)


state 52

    (99) constant -> call .

    TIMES           reduce using rule 99 (constant -> call .)
    DIVIDE          reduce using rule 99 (constant -> call .)
    PLUS            reduce using rule 99 (constant -> call .)
    MINUS           reduce using rule 99 (constant -> call .)
    LESS            reduce using rule 99 (constant -> call .)
    MORE            reduce using rule 99 (constant -> call .)
    EQUALS          reduce using rule 99 (constant -> call .)
    NEQUALS         reduce using rule 99 (constant -> call .)
    LEQUALS         reduce using rule 99 (constant -> call .)
    MEQUALS         reduce using rule 99 (constant -> call .)
    AND             reduce using rule 99 (constant -> call .)
    OR              reduce using rule 99 (constant -> call .)
    NLINE           reduce using rule 99 (constant -> call .)
    COMMA           reduce using rule 99 (constant -> call .)
    RBRACK          reduce using rule 99 (constant -> call .)
    RPAREN          reduce using rule 99 (constant -> call .)


state 53

    (100) constant -> call_array .

    TIMES           reduce using rule 100 (constant -> call_array .)
    DIVIDE          reduce using rule 100 (constant -> call_array .)
    PLUS            reduce using rule 100 (constant -> call_array .)
    MINUS           reduce using rule 100 (constant -> call_array .)
    LESS            reduce using rule 100 (constant -> call_array .)
    MORE            reduce using rule 100 (constant -> call_array .)
    EQUALS          reduce using rule 100 (constant -> call_array .)
    NEQUALS         reduce using rule 100 (constant -> call_array .)
    LEQUALS         reduce using rule 100 (constant -> call_array .)
    MEQUALS         reduce using rule 100 (constant -> call_array .)
    AND             reduce using rule 100 (constant -> call_array .)
    OR              reduce using rule 100 (constant -> call_array .)
    NLINE           reduce using rule 100 (constant -> call_array .)
    COMMA           reduce using rule 100 (constant -> call_array .)
    RBRACK          reduce using rule 100 (constant -> call_array .)
    RPAREN          reduce using rule 100 (constant -> call_array .)


state 54

    (101) constant -> constant2 .

    TIMES           reduce using rule 101 (constant -> constant2 .)
    DIVIDE          reduce using rule 101 (constant -> constant2 .)
    PLUS            reduce using rule 101 (constant -> constant2 .)
    MINUS           reduce using rule 101 (constant -> constant2 .)
    LESS            reduce using rule 101 (constant -> constant2 .)
    MORE            reduce using rule 101 (constant -> constant2 .)
    EQUALS          reduce using rule 101 (constant -> constant2 .)
    NEQUALS         reduce using rule 101 (constant -> constant2 .)
    LEQUALS         reduce using rule 101 (constant -> constant2 .)
    MEQUALS         reduce using rule 101 (constant -> constant2 .)
    AND             reduce using rule 101 (constant -> constant2 .)
    OR              reduce using rule 101 (constant -> constant2 .)
    NLINE           reduce using rule 101 (constant -> constant2 .)
    COMMA           reduce using rule 101 (constant -> constant2 .)
    RBRACK          reduce using rule 101 (constant -> constant2 .)
    RPAREN          reduce using rule 101 (constant -> constant2 .)


state 55

    (120) string -> string_expr .
    (121) string -> string_expr . string
    (120) string -> . string_expr
    (121) string -> . string_expr string
    (122) string_expr -> . STRINGLIT add_constant
    (123) string_expr -> . BSLASH LPAREN expression RPAREN

    TIMES           reduce using rule 120 (string -> string_expr .)
    DIVIDE          reduce using rule 120 (string -> string_expr .)
    PLUS            reduce using rule 120 (string -> string_expr .)
    MINUS           reduce using rule 120 (string -> string_expr .)
    LESS            reduce using rule 120 (string -> string_expr .)
    MORE            reduce using rule 120 (string -> string_expr .)
    EQUALS          reduce using rule 120 (string -> string_expr .)
    NEQUALS         reduce using rule 120 (string -> string_expr .)
    LEQUALS         reduce using rule 120 (string -> string_expr .)
    MEQUALS         reduce using rule 120 (string -> string_expr .)
    AND             reduce using rule 120 (string -> string_expr .)
    OR              reduce using rule 120 (string -> string_expr .)
    NLINE           reduce using rule 120 (string -> string_expr .)
    COMMA           reduce using rule 120 (string -> string_expr .)
    RBRACK          reduce using rule 120 (string -> string_expr .)
    RPAREN          reduce using rule 120 (string -> string_expr .)
    STRINGLIT       shift and go to state 57
    BSLASH          shift and go to state 58

    string_expr                    shift and go to state 55
    string                         shift and go to state 111

state 56

    (69) call -> ID . LPAREN call1 RPAREN
    (94) call_array -> ID . LBRACK expression RBRACK
    (102) constant2 -> ID . push_variable
    (103) constant2 -> ID . PERIOD constant2
    (145) push_variable -> .

    LPAREN          shift and go to state 112
    LBRACK          shift and go to state 113
    PERIOD          shift and go to state 115
    TIMES           reduce using rule 145 (push_variable -> .)
    DIVIDE          reduce using rule 145 (push_variable -> .)
    PLUS            reduce using rule 145 (push_variable -> .)
    MINUS           reduce using rule 145 (push_variable -> .)
    LESS            reduce using rule 145 (push_variable -> .)
    MORE            reduce using rule 145 (push_variable -> .)
    EQUALS          reduce using rule 145 (push_variable -> .)
    NEQUALS         reduce using rule 145 (push_variable -> .)
    LEQUALS         reduce using rule 145 (push_variable -> .)
    MEQUALS         reduce using rule 145 (push_variable -> .)
    AND             reduce using rule 145 (push_variable -> .)
    OR              reduce using rule 145 (push_variable -> .)
    NLINE           reduce using rule 145 (push_variable -> .)
    COMMA           reduce using rule 145 (push_variable -> .)
    RBRACK          reduce using rule 145 (push_variable -> .)
    RPAREN          reduce using rule 145 (push_variable -> .)

    push_variable                  shift and go to state 114

state 57

    (122) string_expr -> STRINGLIT . add_constant
    (128) add_constant -> .

    STRINGLIT       reduce using rule 128 (add_constant -> .)
    BSLASH          reduce using rule 128 (add_constant -> .)
    TIMES           reduce using rule 128 (add_constant -> .)
    DIVIDE          reduce using rule 128 (add_constant -> .)
    PLUS            reduce using rule 128 (add_constant -> .)
    MINUS           reduce using rule 128 (add_constant -> .)
    LESS            reduce using rule 128 (add_constant -> .)
    MORE            reduce using rule 128 (add_constant -> .)
    EQUALS          reduce using rule 128 (add_constant -> .)
    NEQUALS         reduce using rule 128 (add_constant -> .)
    LEQUALS         reduce using rule 128 (add_constant -> .)
    MEQUALS         reduce using rule 128 (add_constant -> .)
    AND             reduce using rule 128 (add_constant -> .)
    OR              reduce using rule 128 (add_constant -> .)
    NLINE           reduce using rule 128 (add_constant -> .)
    COMMA           reduce using rule 128 (add_constant -> .)
    RBRACK          reduce using rule 128 (add_constant -> .)
    RPAREN          reduce using rule 128 (add_constant -> .)

    add_constant                   shift and go to state 116

state 58

    (123) string_expr -> BSLASH . LPAREN expression RPAREN

    LPAREN          shift and go to state 117


state 59

    (17) array -> LBRACK array1 . RBRACK

    RBRACK          shift and go to state 118


state 60

    (18) array1 -> expression . COMMA array1
    (19) array1 -> expression .

    COMMA           shift and go to state 119
    RBRACK          reduce using rule 19 (array1 -> expression .)


state 61

    (110) variable -> VAR ID add_var COLON . type
    (112) variable -> VAR ID add_var COLON . error NLINE
    (113) type -> . variable_primitive
    (114) type -> . LBRACK variable_primitive RBRACK
    (115) type -> . LBRACK ID RBRACK
    (116) variable_primitive -> . INT set_variable_type
    (117) variable_primitive -> . FLOAT set_variable_type
    (118) variable_primitive -> . STRING set_variable_type
    (119) variable_primitive -> . BOOL set_variable_type

    error           shift and go to state 121
    LBRACK          shift and go to state 64
    INT             shift and go to state 65
    FLOAT           shift and go to state 66
    STRING          shift and go to state 67
    BOOL            shift and go to state 68

    type                           shift and go to state 120
    variable_primitive             shift and go to state 63

state 62

    (111) variable -> VAR ID error type .

    ASSIGN          reduce using rule 111 (variable -> VAR ID error type .)
    error           reduce using rule 111 (variable -> VAR ID error type .)
    NLINE           reduce using rule 111 (variable -> VAR ID error type .)


state 63

    (113) type -> variable_primitive .

    ASSIGN          reduce using rule 113 (type -> variable_primitive .)
    error           reduce using rule 113 (type -> variable_primitive .)
    NLINE           reduce using rule 113 (type -> variable_primitive .)


state 64

    (114) type -> LBRACK . variable_primitive RBRACK
    (115) type -> LBRACK . ID RBRACK
    (116) variable_primitive -> . INT set_variable_type
    (117) variable_primitive -> . FLOAT set_variable_type
    (118) variable_primitive -> . STRING set_variable_type
    (119) variable_primitive -> . BOOL set_variable_type

    ID              shift and go to state 123
    INT             shift and go to state 65
    FLOAT           shift and go to state 66
    STRING          shift and go to state 67
    BOOL            shift and go to state 68

    variable_primitive             shift and go to state 122

state 65

    (116) variable_primitive -> INT . set_variable_type
    (146) set_variable_type -> .

    ASSIGN          reduce using rule 146 (set_variable_type -> .)
    error           reduce using rule 146 (set_variable_type -> .)
    NLINE           reduce using rule 146 (set_variable_type -> .)
    RBRACK          reduce using rule 146 (set_variable_type -> .)
    LCURLY          reduce using rule 146 (set_variable_type -> .)
    COMMA           reduce using rule 146 (set_variable_type -> .)
    RPAREN          reduce using rule 146 (set_variable_type -> .)

    set_variable_type              shift and go to state 124

state 66

    (117) variable_primitive -> FLOAT . set_variable_type
    (146) set_variable_type -> .

    ASSIGN          reduce using rule 146 (set_variable_type -> .)
    error           reduce using rule 146 (set_variable_type -> .)
    NLINE           reduce using rule 146 (set_variable_type -> .)
    RBRACK          reduce using rule 146 (set_variable_type -> .)
    LCURLY          reduce using rule 146 (set_variable_type -> .)
    COMMA           reduce using rule 146 (set_variable_type -> .)
    RPAREN          reduce using rule 146 (set_variable_type -> .)

    set_variable_type              shift and go to state 125

state 67

    (118) variable_primitive -> STRING . set_variable_type
    (146) set_variable_type -> .

    ASSIGN          reduce using rule 146 (set_variable_type -> .)
    error           reduce using rule 146 (set_variable_type -> .)
    NLINE           reduce using rule 146 (set_variable_type -> .)
    RBRACK          reduce using rule 146 (set_variable_type -> .)
    LCURLY          reduce using rule 146 (set_variable_type -> .)
    COMMA           reduce using rule 146 (set_variable_type -> .)
    RPAREN          reduce using rule 146 (set_variable_type -> .)

    set_variable_type              shift and go to state 126

state 68

    (119) variable_primitive -> BOOL . set_variable_type
    (146) set_variable_type -> .

    ASSIGN          reduce using rule 146 (set_variable_type -> .)
    error           reduce using rule 146 (set_variable_type -> .)
    NLINE           reduce using rule 146 (set_variable_type -> .)
    RBRACK          reduce using rule 146 (set_variable_type -> .)
    LCURLY          reduce using rule 146 (set_variable_type -> .)
    COMMA           reduce using rule 146 (set_variable_type -> .)
    RPAREN          reduce using rule 146 (set_variable_type -> .)

    set_variable_type              shift and go to state 127

state 69

    (9) class -> CLASS ID COLON ID class_block .

    NLINE           reduce using rule 9 (class -> CLASS ID COLON ID class_block .)


state 70

    (29) class_block -> LCURLY class_block1 RCURLY .

    NLINE           reduce using rule 29 (class_block -> LCURLY class_block1 RCURLY .)


state 71

    (31) class_block1 -> class_block3 class_block2 .

    RCURLY          reduce using rule 31 (class_block1 -> class_block3 class_block2 .)


state 72

    (32) class_block2 -> NLINE class_block1 .

    RCURLY          reduce using rule 32 (class_block2 -> NLINE class_block1 .)


state 73

    (10) function -> FUNC ID add_function params set_void . init_block end_function
    (36) init_block -> . LCURLY init_block1 RCURLY

    LCURLY          shift and go to state 40

    init_block                     shift and go to state 128

state 74

    (11) function -> FUNC ID add_function params ARROW . variable_primitive init_block end_function
    (116) variable_primitive -> . INT set_variable_type
    (117) variable_primitive -> . FLOAT set_variable_type
    (118) variable_primitive -> . STRING set_variable_type
    (119) variable_primitive -> . BOOL set_variable_type

    INT             shift and go to state 65
    FLOAT           shift and go to state 66
    STRING          shift and go to state 67
    BOOL            shift and go to state 68

    variable_primitive             shift and go to state 129

state 75

    (20) params -> LPAREN params1 . RPAREN

    RPAREN          shift and go to state 130


state 76

    (21) params -> LPAREN RPAREN .

    ARROW           reduce using rule 21 (params -> LPAREN RPAREN .)
    LCURLY          reduce using rule 21 (params -> LPAREN RPAREN .)


state 77

    (22) params -> LPAREN error . RPAREN
    (25) params1 -> error . COMMA params1
    (28) param -> error . COLON variable_primitive

    RPAREN          shift and go to state 131
    COMMA           shift and go to state 132
    COLON           shift and go to state 133


state 78

    (23) params1 -> param .
    (24) params1 -> param . COMMA params1

    RPAREN          reduce using rule 23 (params1 -> param .)
    COMMA           shift and go to state 134


state 79

    (26) param -> ID . add_param COLON variable_primitive
    (27) param -> ID . error variable_primitive
    (129) add_param -> .

    error           shift and go to state 136
    COLON           reduce using rule 129 (add_param -> .)

    add_param                      shift and go to state 135

state 80

    (36) init_block -> LCURLY init_block1 . RCURLY

    RCURLY          shift and go to state 137


state 81

    (37) init_block1 -> init_block2 .

    RCURLY          reduce using rule 37 (init_block1 -> init_block2 .)


state 82

    (38) init_block1 -> init_block3 . init_block2
    (39) init_block2 -> . NLINE init_block1
    (40) init_block2 -> . NLINE

    NLINE           shift and go to state 83

    init_block2                    shift and go to state 138

state 83

    (39) init_block2 -> NLINE . init_block1
    (40) init_block2 -> NLINE .
    (37) init_block1 -> . init_block2
    (38) init_block1 -> . init_block3 init_block2
    (39) init_block2 -> . NLINE init_block1
    (40) init_block2 -> . NLINE
    (41) init_block3 -> . statement
    (42) init_block3 -> . declaration
    (48) statement -> . display
    (49) statement -> . if
    (50) statement -> . while
    (51) statement -> . input
    (52) statement -> . assign
    (53) statement -> . call
    (54) statement -> . return
    (55) statement -> . error
    (13) declaration -> . variable ASSIGN push_operator bool_expr execute_priority_0
    (14) declaration -> . variable ASSIGN array
    (15) declaration -> . variable
    (16) declaration -> . variable error NLINE
    (58) display -> . PRINT push_operator LPAREN bool_expr RPAREN execute_builtin_call
    (72) if -> . if_single
    (73) if -> . if_multiple
    (56) while -> . WHILE LPAREN save_loop_start bool_expr set_loop_condition RPAREN block fill_and_reset_loop
    (57) input -> . variable ASSIGN INPUT LPAREN string RPAREN
    (61) assign -> . ID push_variable assign1 bool_expr execute_priority_0
    (62) assign -> . ID push_variable error execute_priority_0
    (63) assign -> . ID push_variable assign1 error execute_priority_0
    (69) call -> . ID LPAREN call1 RPAREN
    (59) return -> . RETURN
    (60) return -> . RETURN push_operator bool_expr set_return
    (110) variable -> . VAR ID add_var COLON type
    (111) variable -> . VAR ID error type
    (112) variable -> . VAR ID add_var COLON error NLINE
    (74) if_single -> . IF LPAREN bool_expr RPAREN get_conditional block fill_end_single
    (75) if_multiple -> . IF LPAREN bool_expr RPAREN get_conditional block if_multiple_2

    RCURLY          reduce using rule 40 (init_block2 -> NLINE .)
    NLINE           shift and go to state 83
    error           shift and go to state 93
    PRINT           shift and go to state 95
    WHILE           shift and go to state 98
    ID              shift and go to state 99
    RETURN          shift and go to state 100
    VAR             shift and go to state 11
    IF              shift and go to state 101

    init_block1                    shift and go to state 139
    init_block2                    shift and go to state 81
    init_block3                    shift and go to state 82
    statement                      shift and go to state 84
    declaration                    shift and go to state 85
    display                        shift and go to state 86
    if                             shift and go to state 87
    while                          shift and go to state 88
    input                          shift and go to state 89
    assign                         shift and go to state 90
    call                           shift and go to state 91
    return                         shift and go to state 92
    variable                       shift and go to state 94
    if_single                      shift and go to state 96
    if_multiple                    shift and go to state 97

state 84

    (41) init_block3 -> statement .

    NLINE           reduce using rule 41 (init_block3 -> statement .)


state 85

    (42) init_block3 -> declaration .

    NLINE           reduce using rule 42 (init_block3 -> declaration .)


state 86

    (48) statement -> display .

    NLINE           reduce using rule 48 (statement -> display .)


state 87

    (49) statement -> if .

    NLINE           reduce using rule 49 (statement -> if .)


state 88

    (50) statement -> while .

    NLINE           reduce using rule 50 (statement -> while .)


state 89

    (51) statement -> input .

    NLINE           reduce using rule 51 (statement -> input .)


state 90

    (52) statement -> assign .

    NLINE           reduce using rule 52 (statement -> assign .)


state 91

    (53) statement -> call .

    NLINE           reduce using rule 53 (statement -> call .)


state 92

    (54) statement -> return .

    NLINE           reduce using rule 54 (statement -> return .)


state 93

    (55) statement -> error .

    NLINE           reduce using rule 55 (statement -> error .)


state 94

    (13) declaration -> variable . ASSIGN push_operator bool_expr execute_priority_0
    (14) declaration -> variable . ASSIGN array
    (15) declaration -> variable .
    (16) declaration -> variable . error NLINE
    (57) input -> variable . ASSIGN INPUT LPAREN string RPAREN

    ASSIGN          shift and go to state 140
    NLINE           reduce using rule 15 (declaration -> variable .)
    error           shift and go to state 17


state 95

    (58) display -> PRINT . push_operator LPAREN bool_expr RPAREN execute_builtin_call
    (144) push_operator -> .

    LPAREN          reduce using rule 144 (push_operator -> .)

    push_operator                  shift and go to state 141

state 96

    (72) if -> if_single .

    NLINE           reduce using rule 72 (if -> if_single .)


state 97

    (73) if -> if_multiple .

    NLINE           reduce using rule 73 (if -> if_multiple .)


state 98

    (56) while -> WHILE . LPAREN save_loop_start bool_expr set_loop_condition RPAREN block fill_and_reset_loop

    LPAREN          shift and go to state 142


state 99

    (61) assign -> ID . push_variable assign1 bool_expr execute_priority_0
    (62) assign -> ID . push_variable error execute_priority_0
    (63) assign -> ID . push_variable assign1 error execute_priority_0
    (69) call -> ID . LPAREN call1 RPAREN
    (145) push_variable -> .

    LPAREN          shift and go to state 112
    error           reduce using rule 145 (push_variable -> .)
    ASSIGN          reduce using rule 145 (push_variable -> .)
    PASSIGN         reduce using rule 145 (push_variable -> .)
    LASSIGN         reduce using rule 145 (push_variable -> .)
    MASSIGN         reduce using rule 145 (push_variable -> .)
    DASSIGN         reduce using rule 145 (push_variable -> .)

    push_variable                  shift and go to state 143

state 100

    (59) return -> RETURN .
    (60) return -> RETURN . push_operator bool_expr set_return
    (144) push_operator -> .

    NLINE           reduce using rule 59 (return -> RETURN .)
    LPAREN          reduce using rule 144 (push_operator -> .)
    INTLIT          reduce using rule 144 (push_operator -> .)
    FLOATLIT        reduce using rule 144 (push_operator -> .)
    BOOLLIT         reduce using rule 144 (push_operator -> .)
    ID              reduce using rule 144 (push_operator -> .)
    STRINGLIT       reduce using rule 144 (push_operator -> .)
    BSLASH          reduce using rule 144 (push_operator -> .)

    push_operator                  shift and go to state 144

state 101

    (74) if_single -> IF . LPAREN bool_expr RPAREN get_conditional block fill_end_single
    (75) if_multiple -> IF . LPAREN bool_expr RPAREN get_conditional block if_multiple_2

    LPAREN          shift and go to state 145


state 102

    (13) declaration -> variable ASSIGN push_operator bool_expr execute_priority_0 .

    NLINE           reduce using rule 13 (declaration -> variable ASSIGN push_operator bool_expr execute_priority_0 .)


state 103

    (78) bool_expr -> relational_exp execute_priority_1 .
    (79) bool_expr -> relational_exp execute_priority_1 . AND push_operator bool_expr
    (80) bool_expr -> relational_exp execute_priority_1 . OR push_operator bool_expr

    NLINE           reduce using rule 78 (bool_expr -> relational_exp execute_priority_1 .)
    RPAREN          reduce using rule 78 (bool_expr -> relational_exp execute_priority_1 .)
    AND             shift and go to state 146
    OR              shift and go to state 147


state 104

    (81) relational_exp -> expression execute_priority_2 . comp relational_exp
    (82) relational_exp -> expression execute_priority_2 .
    (104) comp -> . LESS push_operator
    (105) comp -> . MORE push_operator
    (106) comp -> . EQUALS push_operator
    (107) comp -> . NEQUALS push_operator
    (108) comp -> . LEQUALS push_operator
    (109) comp -> . MEQUALS push_operator

    AND             reduce using rule 82 (relational_exp -> expression execute_priority_2 .)
    OR              reduce using rule 82 (relational_exp -> expression execute_priority_2 .)
    NLINE           reduce using rule 82 (relational_exp -> expression execute_priority_2 .)
    RPAREN          reduce using rule 82 (relational_exp -> expression execute_priority_2 .)
    LESS            shift and go to state 149
    MORE            shift and go to state 150
    EQUALS          shift and go to state 151
    NEQUALS         shift and go to state 152
    LEQUALS         shift and go to state 153
    MEQUALS         shift and go to state 154

    comp                           shift and go to state 148

state 105

    (83) expression -> term execute_priority_3 .
    (84) expression -> term execute_priority_3 . PLUS push_operator expression
    (85) expression -> term execute_priority_3 . MINUS push_operator expression

    LESS            reduce using rule 83 (expression -> term execute_priority_3 .)
    MORE            reduce using rule 83 (expression -> term execute_priority_3 .)
    EQUALS          reduce using rule 83 (expression -> term execute_priority_3 .)
    NEQUALS         reduce using rule 83 (expression -> term execute_priority_3 .)
    LEQUALS         reduce using rule 83 (expression -> term execute_priority_3 .)
    MEQUALS         reduce using rule 83 (expression -> term execute_priority_3 .)
    AND             reduce using rule 83 (expression -> term execute_priority_3 .)
    OR              reduce using rule 83 (expression -> term execute_priority_3 .)
    NLINE           reduce using rule 83 (expression -> term execute_priority_3 .)
    COMMA           reduce using rule 83 (expression -> term execute_priority_3 .)
    RBRACK          reduce using rule 83 (expression -> term execute_priority_3 .)
    RPAREN          reduce using rule 83 (expression -> term execute_priority_3 .)
    PLUS            shift and go to state 155
    MINUS           shift and go to state 156


state 106

    (86) term -> factor execute_priority_4 .
    (87) term -> factor execute_priority_4 . TIMES push_operator term
    (88) term -> factor execute_priority_4 . DIVIDE push_operator term
    (89) term -> factor execute_priority_4 . TIMES error push_operator term
    (90) term -> factor execute_priority_4 . DIVIDE error push_operator term

    PLUS            reduce using rule 86 (term -> factor execute_priority_4 .)
    MINUS           reduce using rule 86 (term -> factor execute_priority_4 .)
    LESS            reduce using rule 86 (term -> factor execute_priority_4 .)
    MORE            reduce using rule 86 (term -> factor execute_priority_4 .)
    EQUALS          reduce using rule 86 (term -> factor execute_priority_4 .)
    NEQUALS         reduce using rule 86 (term -> factor execute_priority_4 .)
    LEQUALS         reduce using rule 86 (term -> factor execute_priority_4 .)
    MEQUALS         reduce using rule 86 (term -> factor execute_priority_4 .)
    AND             reduce using rule 86 (term -> factor execute_priority_4 .)
    OR              reduce using rule 86 (term -> factor execute_priority_4 .)
    NLINE           reduce using rule 86 (term -> factor execute_priority_4 .)
    COMMA           reduce using rule 86 (term -> factor execute_priority_4 .)
    RBRACK          reduce using rule 86 (term -> factor execute_priority_4 .)
    RPAREN          reduce using rule 86 (term -> factor execute_priority_4 .)
    TIMES           shift and go to state 157
    DIVIDE          shift and go to state 158


state 107

    (92) factor -> LPAREN push_operator . bool_expr RPAREN push_operator
    (93) factor -> LPAREN push_operator . error RPAREN push_operator
    (78) bool_expr -> . relational_exp execute_priority_1
    (79) bool_expr -> . relational_exp execute_priority_1 AND push_operator bool_expr
    (80) bool_expr -> . relational_exp execute_priority_1 OR push_operator bool_expr
    (81) relational_exp -> . expression execute_priority_2 comp relational_exp
    (82) relational_exp -> . expression execute_priority_2
    (83) expression -> . term execute_priority_3
    (84) expression -> . term execute_priority_3 PLUS push_operator expression
    (85) expression -> . term execute_priority_3 MINUS push_operator expression
    (86) term -> . factor execute_priority_4
    (87) term -> . factor execute_priority_4 TIMES push_operator term
    (88) term -> . factor execute_priority_4 DIVIDE push_operator term
    (89) term -> . factor execute_priority_4 TIMES error push_operator term
    (90) term -> . factor execute_priority_4 DIVIDE error push_operator term
    (91) factor -> . constant
    (92) factor -> . LPAREN push_operator bool_expr RPAREN push_operator
    (93) factor -> . LPAREN push_operator error RPAREN push_operator
    (95) constant -> . INTLIT add_constant
    (96) constant -> . FLOATLIT add_constant
    (97) constant -> . BOOLLIT add_constant
    (98) constant -> . string
    (99) constant -> . call
    (100) constant -> . call_array
    (101) constant -> . constant2
    (120) string -> . string_expr
    (121) string -> . string_expr string
    (69) call -> . ID LPAREN call1 RPAREN
    (94) call_array -> . ID LBRACK expression RBRACK
    (102) constant2 -> . ID push_variable
    (103) constant2 -> . ID PERIOD constant2
    (122) string_expr -> . STRINGLIT add_constant
    (123) string_expr -> . BSLASH LPAREN expression RPAREN

    error           shift and go to state 160
    LPAREN          shift and go to state 47
    INTLIT          shift and go to state 48
    FLOATLIT        shift and go to state 49
    BOOLLIT         shift and go to state 50
    ID              shift and go to state 56
    STRINGLIT       shift and go to state 57
    BSLASH          shift and go to state 58

    bool_expr                      shift and go to state 159
    relational_exp                 shift and go to state 42
    expression                     shift and go to state 43
    term                           shift and go to state 44
    factor                         shift and go to state 45
    constant                       shift and go to state 46
    string                         shift and go to state 51
    call                           shift and go to state 52
    call_array                     shift and go to state 53
    constant2                      shift and go to state 54
    string_expr                    shift and go to state 55

state 108

    (95) constant -> INTLIT add_constant .

    TIMES           reduce using rule 95 (constant -> INTLIT add_constant .)
    DIVIDE          reduce using rule 95 (constant -> INTLIT add_constant .)
    PLUS            reduce using rule 95 (constant -> INTLIT add_constant .)
    MINUS           reduce using rule 95 (constant -> INTLIT add_constant .)
    LESS            reduce using rule 95 (constant -> INTLIT add_constant .)
    MORE            reduce using rule 95 (constant -> INTLIT add_constant .)
    EQUALS          reduce using rule 95 (constant -> INTLIT add_constant .)
    NEQUALS         reduce using rule 95 (constant -> INTLIT add_constant .)
    LEQUALS         reduce using rule 95 (constant -> INTLIT add_constant .)
    MEQUALS         reduce using rule 95 (constant -> INTLIT add_constant .)
    AND             reduce using rule 95 (constant -> INTLIT add_constant .)
    OR              reduce using rule 95 (constant -> INTLIT add_constant .)
    NLINE           reduce using rule 95 (constant -> INTLIT add_constant .)
    COMMA           reduce using rule 95 (constant -> INTLIT add_constant .)
    RBRACK          reduce using rule 95 (constant -> INTLIT add_constant .)
    RPAREN          reduce using rule 95 (constant -> INTLIT add_constant .)


state 109

    (96) constant -> FLOATLIT add_constant .

    TIMES           reduce using rule 96 (constant -> FLOATLIT add_constant .)
    DIVIDE          reduce using rule 96 (constant -> FLOATLIT add_constant .)
    PLUS            reduce using rule 96 (constant -> FLOATLIT add_constant .)
    MINUS           reduce using rule 96 (constant -> FLOATLIT add_constant .)
    LESS            reduce using rule 96 (constant -> FLOATLIT add_constant .)
    MORE            reduce using rule 96 (constant -> FLOATLIT add_constant .)
    EQUALS          reduce using rule 96 (constant -> FLOATLIT add_constant .)
    NEQUALS         reduce using rule 96 (constant -> FLOATLIT add_constant .)
    LEQUALS         reduce using rule 96 (constant -> FLOATLIT add_constant .)
    MEQUALS         reduce using rule 96 (constant -> FLOATLIT add_constant .)
    AND             reduce using rule 96 (constant -> FLOATLIT add_constant .)
    OR              reduce using rule 96 (constant -> FLOATLIT add_constant .)
    NLINE           reduce using rule 96 (constant -> FLOATLIT add_constant .)
    COMMA           reduce using rule 96 (constant -> FLOATLIT add_constant .)
    RBRACK          reduce using rule 96 (constant -> FLOATLIT add_constant .)
    RPAREN          reduce using rule 96 (constant -> FLOATLIT add_constant .)


state 110

    (97) constant -> BOOLLIT add_constant .

    TIMES           reduce using rule 97 (constant -> BOOLLIT add_constant .)
    DIVIDE          reduce using rule 97 (constant -> BOOLLIT add_constant .)
    PLUS            reduce using rule 97 (constant -> BOOLLIT add_constant .)
    MINUS           reduce using rule 97 (constant -> BOOLLIT add_constant .)
    LESS            reduce using rule 97 (constant -> BOOLLIT add_constant .)
    MORE            reduce using rule 97 (constant -> BOOLLIT add_constant .)
    EQUALS          reduce using rule 97 (constant -> BOOLLIT add_constant .)
    NEQUALS         reduce using rule 97 (constant -> BOOLLIT add_constant .)
    LEQUALS         reduce using rule 97 (constant -> BOOLLIT add_constant .)
    MEQUALS         reduce using rule 97 (constant -> BOOLLIT add_constant .)
    AND             reduce using rule 97 (constant -> BOOLLIT add_constant .)
    OR              reduce using rule 97 (constant -> BOOLLIT add_constant .)
    NLINE           reduce using rule 97 (constant -> BOOLLIT add_constant .)
    COMMA           reduce using rule 97 (constant -> BOOLLIT add_constant .)
    RBRACK          reduce using rule 97 (constant -> BOOLLIT add_constant .)
    RPAREN          reduce using rule 97 (constant -> BOOLLIT add_constant .)


state 111

    (121) string -> string_expr string .

    TIMES           reduce using rule 121 (string -> string_expr string .)
    DIVIDE          reduce using rule 121 (string -> string_expr string .)
    PLUS            reduce using rule 121 (string -> string_expr string .)
    MINUS           reduce using rule 121 (string -> string_expr string .)
    LESS            reduce using rule 121 (string -> string_expr string .)
    MORE            reduce using rule 121 (string -> string_expr string .)
    EQUALS          reduce using rule 121 (string -> string_expr string .)
    NEQUALS         reduce using rule 121 (string -> string_expr string .)
    LEQUALS         reduce using rule 121 (string -> string_expr string .)
    MEQUALS         reduce using rule 121 (string -> string_expr string .)
    AND             reduce using rule 121 (string -> string_expr string .)
    OR              reduce using rule 121 (string -> string_expr string .)
    NLINE           reduce using rule 121 (string -> string_expr string .)
    COMMA           reduce using rule 121 (string -> string_expr string .)
    RBRACK          reduce using rule 121 (string -> string_expr string .)
    RPAREN          reduce using rule 121 (string -> string_expr string .)


state 112

    (69) call -> ID LPAREN . call1 RPAREN
    (70) call1 -> . expression
    (71) call1 -> . expression COMMA call1
    (83) expression -> . term execute_priority_3
    (84) expression -> . term execute_priority_3 PLUS push_operator expression
    (85) expression -> . term execute_priority_3 MINUS push_operator expression
    (86) term -> . factor execute_priority_4
    (87) term -> . factor execute_priority_4 TIMES push_operator term
    (88) term -> . factor execute_priority_4 DIVIDE push_operator term
    (89) term -> . factor execute_priority_4 TIMES error push_operator term
    (90) term -> . factor execute_priority_4 DIVIDE error push_operator term
    (91) factor -> . constant
    (92) factor -> . LPAREN push_operator bool_expr RPAREN push_operator
    (93) factor -> . LPAREN push_operator error RPAREN push_operator
    (95) constant -> . INTLIT add_constant
    (96) constant -> . FLOATLIT add_constant
    (97) constant -> . BOOLLIT add_constant
    (98) constant -> . string
    (99) constant -> . call
    (100) constant -> . call_array
    (101) constant -> . constant2
    (120) string -> . string_expr
    (121) string -> . string_expr string
    (69) call -> . ID LPAREN call1 RPAREN
    (94) call_array -> . ID LBRACK expression RBRACK
    (102) constant2 -> . ID push_variable
    (103) constant2 -> . ID PERIOD constant2
    (122) string_expr -> . STRINGLIT add_constant
    (123) string_expr -> . BSLASH LPAREN expression RPAREN

    LPAREN          shift and go to state 47
    INTLIT          shift and go to state 48
    FLOATLIT        shift and go to state 49
    BOOLLIT         shift and go to state 50
    ID              shift and go to state 56
    STRINGLIT       shift and go to state 57
    BSLASH          shift and go to state 58

    call1                          shift and go to state 161
    expression                     shift and go to state 162
    term                           shift and go to state 44
    factor                         shift and go to state 45
    constant                       shift and go to state 46
    string                         shift and go to state 51
    call                           shift and go to state 52
    call_array                     shift and go to state 53
    constant2                      shift and go to state 54
    string_expr                    shift and go to state 55

state 113

    (94) call_array -> ID LBRACK . expression RBRACK
    (83) expression -> . term execute_priority_3
    (84) expression -> . term execute_priority_3 PLUS push_operator expression
    (85) expression -> . term execute_priority_3 MINUS push_operator expression
    (86) term -> . factor execute_priority_4
    (87) term -> . factor execute_priority_4 TIMES push_operator term
    (88) term -> . factor execute_priority_4 DIVIDE push_operator term
    (89) term -> . factor execute_priority_4 TIMES error push_operator term
    (90) term -> . factor execute_priority_4 DIVIDE error push_operator term
    (91) factor -> . constant
    (92) factor -> . LPAREN push_operator bool_expr RPAREN push_operator
    (93) factor -> . LPAREN push_operator error RPAREN push_operator
    (95) constant -> . INTLIT add_constant
    (96) constant -> . FLOATLIT add_constant
    (97) constant -> . BOOLLIT add_constant
    (98) constant -> . string
    (99) constant -> . call
    (100) constant -> . call_array
    (101) constant -> . constant2
    (120) string -> . string_expr
    (121) string -> . string_expr string
    (69) call -> . ID LPAREN call1 RPAREN
    (94) call_array -> . ID LBRACK expression RBRACK
    (102) constant2 -> . ID push_variable
    (103) constant2 -> . ID PERIOD constant2
    (122) string_expr -> . STRINGLIT add_constant
    (123) string_expr -> . BSLASH LPAREN expression RPAREN

    LPAREN          shift and go to state 47
    INTLIT          shift and go to state 48
    FLOATLIT        shift and go to state 49
    BOOLLIT         shift and go to state 50
    ID              shift and go to state 56
    STRINGLIT       shift and go to state 57
    BSLASH          shift and go to state 58

    expression                     shift and go to state 163
    term                           shift and go to state 44
    factor                         shift and go to state 45
    constant                       shift and go to state 46
    string                         shift and go to state 51
    call                           shift and go to state 52
    call_array                     shift and go to state 53
    constant2                      shift and go to state 54
    string_expr                    shift and go to state 55

state 114

    (102) constant2 -> ID push_variable .

    TIMES           reduce using rule 102 (constant2 -> ID push_variable .)
    DIVIDE          reduce using rule 102 (constant2 -> ID push_variable .)
    PLUS            reduce using rule 102 (constant2 -> ID push_variable .)
    MINUS           reduce using rule 102 (constant2 -> ID push_variable .)
    LESS            reduce using rule 102 (constant2 -> ID push_variable .)
    MORE            reduce using rule 102 (constant2 -> ID push_variable .)
    EQUALS          reduce using rule 102 (constant2 -> ID push_variable .)
    NEQUALS         reduce using rule 102 (constant2 -> ID push_variable .)
    LEQUALS         reduce using rule 102 (constant2 -> ID push_variable .)
    MEQUALS         reduce using rule 102 (constant2 -> ID push_variable .)
    AND             reduce using rule 102 (constant2 -> ID push_variable .)
    OR              reduce using rule 102 (constant2 -> ID push_variable .)
    NLINE           reduce using rule 102 (constant2 -> ID push_variable .)
    COMMA           reduce using rule 102 (constant2 -> ID push_variable .)
    RBRACK          reduce using rule 102 (constant2 -> ID push_variable .)
    RPAREN          reduce using rule 102 (constant2 -> ID push_variable .)


state 115

    (103) constant2 -> ID PERIOD . constant2
    (102) constant2 -> . ID push_variable
    (103) constant2 -> . ID PERIOD constant2

    ID              shift and go to state 164

    constant2                      shift and go to state 165

state 116

    (122) string_expr -> STRINGLIT add_constant .

    STRINGLIT       reduce using rule 122 (string_expr -> STRINGLIT add_constant .)
    BSLASH          reduce using rule 122 (string_expr -> STRINGLIT add_constant .)
    TIMES           reduce using rule 122 (string_expr -> STRINGLIT add_constant .)
    DIVIDE          reduce using rule 122 (string_expr -> STRINGLIT add_constant .)
    PLUS            reduce using rule 122 (string_expr -> STRINGLIT add_constant .)
    MINUS           reduce using rule 122 (string_expr -> STRINGLIT add_constant .)
    LESS            reduce using rule 122 (string_expr -> STRINGLIT add_constant .)
    MORE            reduce using rule 122 (string_expr -> STRINGLIT add_constant .)
    EQUALS          reduce using rule 122 (string_expr -> STRINGLIT add_constant .)
    NEQUALS         reduce using rule 122 (string_expr -> STRINGLIT add_constant .)
    LEQUALS         reduce using rule 122 (string_expr -> STRINGLIT add_constant .)
    MEQUALS         reduce using rule 122 (string_expr -> STRINGLIT add_constant .)
    AND             reduce using rule 122 (string_expr -> STRINGLIT add_constant .)
    OR              reduce using rule 122 (string_expr -> STRINGLIT add_constant .)
    NLINE           reduce using rule 122 (string_expr -> STRINGLIT add_constant .)
    COMMA           reduce using rule 122 (string_expr -> STRINGLIT add_constant .)
    RBRACK          reduce using rule 122 (string_expr -> STRINGLIT add_constant .)
    RPAREN          reduce using rule 122 (string_expr -> STRINGLIT add_constant .)


state 117

    (123) string_expr -> BSLASH LPAREN . expression RPAREN
    (83) expression -> . term execute_priority_3
    (84) expression -> . term execute_priority_3 PLUS push_operator expression
    (85) expression -> . term execute_priority_3 MINUS push_operator expression
    (86) term -> . factor execute_priority_4
    (87) term -> . factor execute_priority_4 TIMES push_operator term
    (88) term -> . factor execute_priority_4 DIVIDE push_operator term
    (89) term -> . factor execute_priority_4 TIMES error push_operator term
    (90) term -> . factor execute_priority_4 DIVIDE error push_operator term
    (91) factor -> . constant
    (92) factor -> . LPAREN push_operator bool_expr RPAREN push_operator
    (93) factor -> . LPAREN push_operator error RPAREN push_operator
    (95) constant -> . INTLIT add_constant
    (96) constant -> . FLOATLIT add_constant
    (97) constant -> . BOOLLIT add_constant
    (98) constant -> . string
    (99) constant -> . call
    (100) constant -> . call_array
    (101) constant -> . constant2
    (120) string -> . string_expr
    (121) string -> . string_expr string
    (69) call -> . ID LPAREN call1 RPAREN
    (94) call_array -> . ID LBRACK expression RBRACK
    (102) constant2 -> . ID push_variable
    (103) constant2 -> . ID PERIOD constant2
    (122) string_expr -> . STRINGLIT add_constant
    (123) string_expr -> . BSLASH LPAREN expression RPAREN

    LPAREN          shift and go to state 47
    INTLIT          shift and go to state 48
    FLOATLIT        shift and go to state 49
    BOOLLIT         shift and go to state 50
    ID              shift and go to state 56
    STRINGLIT       shift and go to state 57
    BSLASH          shift and go to state 58

    expression                     shift and go to state 166
    term                           shift and go to state 44
    factor                         shift and go to state 45
    constant                       shift and go to state 46
    string                         shift and go to state 51
    call                           shift and go to state 52
    call_array                     shift and go to state 53
    constant2                      shift and go to state 54
    string_expr                    shift and go to state 55

state 118

    (17) array -> LBRACK array1 RBRACK .

    NLINE           reduce using rule 17 (array -> LBRACK array1 RBRACK .)


state 119

    (18) array1 -> expression COMMA . array1
    (18) array1 -> . expression COMMA array1
    (19) array1 -> . expression
    (83) expression -> . term execute_priority_3
    (84) expression -> . term execute_priority_3 PLUS push_operator expression
    (85) expression -> . term execute_priority_3 MINUS push_operator expression
    (86) term -> . factor execute_priority_4
    (87) term -> . factor execute_priority_4 TIMES push_operator term
    (88) term -> . factor execute_priority_4 DIVIDE push_operator term
    (89) term -> . factor execute_priority_4 TIMES error push_operator term
    (90) term -> . factor execute_priority_4 DIVIDE error push_operator term
    (91) factor -> . constant
    (92) factor -> . LPAREN push_operator bool_expr RPAREN push_operator
    (93) factor -> . LPAREN push_operator error RPAREN push_operator
    (95) constant -> . INTLIT add_constant
    (96) constant -> . FLOATLIT add_constant
    (97) constant -> . BOOLLIT add_constant
    (98) constant -> . string
    (99) constant -> . call
    (100) constant -> . call_array
    (101) constant -> . constant2
    (120) string -> . string_expr
    (121) string -> . string_expr string
    (69) call -> . ID LPAREN call1 RPAREN
    (94) call_array -> . ID LBRACK expression RBRACK
    (102) constant2 -> . ID push_variable
    (103) constant2 -> . ID PERIOD constant2
    (122) string_expr -> . STRINGLIT add_constant
    (123) string_expr -> . BSLASH LPAREN expression RPAREN

    LPAREN          shift and go to state 47
    INTLIT          shift and go to state 48
    FLOATLIT        shift and go to state 49
    BOOLLIT         shift and go to state 50
    ID              shift and go to state 56
    STRINGLIT       shift and go to state 57
    BSLASH          shift and go to state 58

    expression                     shift and go to state 60
    array1                         shift and go to state 167
    term                           shift and go to state 44
    factor                         shift and go to state 45
    constant                       shift and go to state 46
    string                         shift and go to state 51
    call                           shift and go to state 52
    call_array                     shift and go to state 53
    constant2                      shift and go to state 54
    string_expr                    shift and go to state 55

state 120

    (110) variable -> VAR ID add_var COLON type .

    ASSIGN          reduce using rule 110 (variable -> VAR ID add_var COLON type .)
    error           reduce using rule 110 (variable -> VAR ID add_var COLON type .)
    NLINE           reduce using rule 110 (variable -> VAR ID add_var COLON type .)


state 121

    (112) variable -> VAR ID add_var COLON error . NLINE

    NLINE           shift and go to state 168


state 122

    (114) type -> LBRACK variable_primitive . RBRACK

    RBRACK          shift and go to state 169


state 123

    (115) type -> LBRACK ID . RBRACK

    RBRACK          shift and go to state 170


state 124

    (116) variable_primitive -> INT set_variable_type .

    ASSIGN          reduce using rule 116 (variable_primitive -> INT set_variable_type .)
    error           reduce using rule 116 (variable_primitive -> INT set_variable_type .)
    NLINE           reduce using rule 116 (variable_primitive -> INT set_variable_type .)
    RBRACK          reduce using rule 116 (variable_primitive -> INT set_variable_type .)
    LCURLY          reduce using rule 116 (variable_primitive -> INT set_variable_type .)
    COMMA           reduce using rule 116 (variable_primitive -> INT set_variable_type .)
    RPAREN          reduce using rule 116 (variable_primitive -> INT set_variable_type .)


state 125

    (117) variable_primitive -> FLOAT set_variable_type .

    ASSIGN          reduce using rule 117 (variable_primitive -> FLOAT set_variable_type .)
    error           reduce using rule 117 (variable_primitive -> FLOAT set_variable_type .)
    NLINE           reduce using rule 117 (variable_primitive -> FLOAT set_variable_type .)
    RBRACK          reduce using rule 117 (variable_primitive -> FLOAT set_variable_type .)
    LCURLY          reduce using rule 117 (variable_primitive -> FLOAT set_variable_type .)
    COMMA           reduce using rule 117 (variable_primitive -> FLOAT set_variable_type .)
    RPAREN          reduce using rule 117 (variable_primitive -> FLOAT set_variable_type .)


state 126

    (118) variable_primitive -> STRING set_variable_type .

    ASSIGN          reduce using rule 118 (variable_primitive -> STRING set_variable_type .)
    error           reduce using rule 118 (variable_primitive -> STRING set_variable_type .)
    NLINE           reduce using rule 118 (variable_primitive -> STRING set_variable_type .)
    RBRACK          reduce using rule 118 (variable_primitive -> STRING set_variable_type .)
    LCURLY          reduce using rule 118 (variable_primitive -> STRING set_variable_type .)
    COMMA           reduce using rule 118 (variable_primitive -> STRING set_variable_type .)
    RPAREN          reduce using rule 118 (variable_primitive -> STRING set_variable_type .)


state 127

    (119) variable_primitive -> BOOL set_variable_type .

    ASSIGN          reduce using rule 119 (variable_primitive -> BOOL set_variable_type .)
    error           reduce using rule 119 (variable_primitive -> BOOL set_variable_type .)
    NLINE           reduce using rule 119 (variable_primitive -> BOOL set_variable_type .)
    RBRACK          reduce using rule 119 (variable_primitive -> BOOL set_variable_type .)
    LCURLY          reduce using rule 119 (variable_primitive -> BOOL set_variable_type .)
    COMMA           reduce using rule 119 (variable_primitive -> BOOL set_variable_type .)
    RPAREN          reduce using rule 119 (variable_primitive -> BOOL set_variable_type .)


state 128

    (10) function -> FUNC ID add_function params set_void init_block . end_function
    (127) end_function -> .

    NLINE           reduce using rule 127 (end_function -> .)

    end_function                   shift and go to state 171

state 129

    (11) function -> FUNC ID add_function params ARROW variable_primitive . init_block end_function
    (36) init_block -> . LCURLY init_block1 RCURLY

    LCURLY          shift and go to state 40

    init_block                     shift and go to state 172

state 130

    (20) params -> LPAREN params1 RPAREN .

    ARROW           reduce using rule 20 (params -> LPAREN params1 RPAREN .)
    LCURLY          reduce using rule 20 (params -> LPAREN params1 RPAREN .)


state 131

    (22) params -> LPAREN error RPAREN .

    ARROW           reduce using rule 22 (params -> LPAREN error RPAREN .)
    LCURLY          reduce using rule 22 (params -> LPAREN error RPAREN .)


state 132

    (25) params1 -> error COMMA . params1
    (23) params1 -> . param
    (24) params1 -> . param COMMA params1
    (25) params1 -> . error COMMA params1
    (26) param -> . ID add_param COLON variable_primitive
    (27) param -> . ID error variable_primitive
    (28) param -> . error COLON variable_primitive

    error           shift and go to state 173
    ID              shift and go to state 79

    params1                        shift and go to state 174
    param                          shift and go to state 78

state 133

    (28) param -> error COLON . variable_primitive
    (116) variable_primitive -> . INT set_variable_type
    (117) variable_primitive -> . FLOAT set_variable_type
    (118) variable_primitive -> . STRING set_variable_type
    (119) variable_primitive -> . BOOL set_variable_type

    INT             shift and go to state 65
    FLOAT           shift and go to state 66
    STRING          shift and go to state 67
    BOOL            shift and go to state 68

    variable_primitive             shift and go to state 175

state 134

    (24) params1 -> param COMMA . params1
    (23) params1 -> . param
    (24) params1 -> . param COMMA params1
    (25) params1 -> . error COMMA params1
    (26) param -> . ID add_param COLON variable_primitive
    (27) param -> . ID error variable_primitive
    (28) param -> . error COLON variable_primitive

    error           shift and go to state 173
    ID              shift and go to state 79

    param                          shift and go to state 78
    params1                        shift and go to state 176

state 135

    (26) param -> ID add_param . COLON variable_primitive

    COLON           shift and go to state 177


state 136

    (27) param -> ID error . variable_primitive
    (116) variable_primitive -> . INT set_variable_type
    (117) variable_primitive -> . FLOAT set_variable_type
    (118) variable_primitive -> . STRING set_variable_type
    (119) variable_primitive -> . BOOL set_variable_type

    INT             shift and go to state 65
    FLOAT           shift and go to state 66
    STRING          shift and go to state 67
    BOOL            shift and go to state 68

    variable_primitive             shift and go to state 178

state 137

    (36) init_block -> LCURLY init_block1 RCURLY .

    NLINE           reduce using rule 36 (init_block -> LCURLY init_block1 RCURLY .)


state 138

    (38) init_block1 -> init_block3 init_block2 .

    RCURLY          reduce using rule 38 (init_block1 -> init_block3 init_block2 .)


state 139

    (39) init_block2 -> NLINE init_block1 .

    RCURLY          reduce using rule 39 (init_block2 -> NLINE init_block1 .)


state 140

    (13) declaration -> variable ASSIGN . push_operator bool_expr execute_priority_0
    (14) declaration -> variable ASSIGN . array
    (57) input -> variable ASSIGN . INPUT LPAREN string RPAREN
    (144) push_operator -> .
    (17) array -> . LBRACK array1 RBRACK

    INPUT           shift and go to state 179
    LPAREN          reduce using rule 144 (push_operator -> .)
    INTLIT          reduce using rule 144 (push_operator -> .)
    FLOATLIT        reduce using rule 144 (push_operator -> .)
    BOOLLIT         reduce using rule 144 (push_operator -> .)
    ID              reduce using rule 144 (push_operator -> .)
    STRINGLIT       reduce using rule 144 (push_operator -> .)
    BSLASH          reduce using rule 144 (push_operator -> .)
    LBRACK          shift and go to state 26

    push_operator                  shift and go to state 24
    array                          shift and go to state 25

state 141

    (58) display -> PRINT push_operator . LPAREN bool_expr RPAREN execute_builtin_call

    LPAREN          shift and go to state 180


state 142

    (56) while -> WHILE LPAREN . save_loop_start bool_expr set_loop_condition RPAREN block fill_and_reset_loop
    (141) save_loop_start -> .

    LPAREN          reduce using rule 141 (save_loop_start -> .)
    INTLIT          reduce using rule 141 (save_loop_start -> .)
    FLOATLIT        reduce using rule 141 (save_loop_start -> .)
    BOOLLIT         reduce using rule 141 (save_loop_start -> .)
    ID              reduce using rule 141 (save_loop_start -> .)
    STRINGLIT       reduce using rule 141 (save_loop_start -> .)
    BSLASH          reduce using rule 141 (save_loop_start -> .)

    save_loop_start                shift and go to state 181

state 143

    (61) assign -> ID push_variable . assign1 bool_expr execute_priority_0
    (62) assign -> ID push_variable . error execute_priority_0
    (63) assign -> ID push_variable . assign1 error execute_priority_0
    (64) assign1 -> . ASSIGN push_operator
    (65) assign1 -> . PASSIGN
    (66) assign1 -> . LASSIGN
    (67) assign1 -> . MASSIGN
    (68) assign1 -> . DASSIGN

    error           shift and go to state 183
    ASSIGN          shift and go to state 184
    PASSIGN         shift and go to state 185
    LASSIGN         shift and go to state 186
    MASSIGN         shift and go to state 187
    DASSIGN         shift and go to state 188

    assign1                        shift and go to state 182

state 144

    (60) return -> RETURN push_operator . bool_expr set_return
    (78) bool_expr -> . relational_exp execute_priority_1
    (79) bool_expr -> . relational_exp execute_priority_1 AND push_operator bool_expr
    (80) bool_expr -> . relational_exp execute_priority_1 OR push_operator bool_expr
    (81) relational_exp -> . expression execute_priority_2 comp relational_exp
    (82) relational_exp -> . expression execute_priority_2
    (83) expression -> . term execute_priority_3
    (84) expression -> . term execute_priority_3 PLUS push_operator expression
    (85) expression -> . term execute_priority_3 MINUS push_operator expression
    (86) term -> . factor execute_priority_4
    (87) term -> . factor execute_priority_4 TIMES push_operator term
    (88) term -> . factor execute_priority_4 DIVIDE push_operator term
    (89) term -> . factor execute_priority_4 TIMES error push_operator term
    (90) term -> . factor execute_priority_4 DIVIDE error push_operator term
    (91) factor -> . constant
    (92) factor -> . LPAREN push_operator bool_expr RPAREN push_operator
    (93) factor -> . LPAREN push_operator error RPAREN push_operator
    (95) constant -> . INTLIT add_constant
    (96) constant -> . FLOATLIT add_constant
    (97) constant -> . BOOLLIT add_constant
    (98) constant -> . string
    (99) constant -> . call
    (100) constant -> . call_array
    (101) constant -> . constant2
    (120) string -> . string_expr
    (121) string -> . string_expr string
    (69) call -> . ID LPAREN call1 RPAREN
    (94) call_array -> . ID LBRACK expression RBRACK
    (102) constant2 -> . ID push_variable
    (103) constant2 -> . ID PERIOD constant2
    (122) string_expr -> . STRINGLIT add_constant
    (123) string_expr -> . BSLASH LPAREN expression RPAREN

    LPAREN          shift and go to state 47
    INTLIT          shift and go to state 48
    FLOATLIT        shift and go to state 49
    BOOLLIT         shift and go to state 50
    ID              shift and go to state 56
    STRINGLIT       shift and go to state 57
    BSLASH          shift and go to state 58

    bool_expr                      shift and go to state 189
    relational_exp                 shift and go to state 42
    expression                     shift and go to state 43
    term                           shift and go to state 44
    factor                         shift and go to state 45
    constant                       shift and go to state 46
    string                         shift and go to state 51
    call                           shift and go to state 52
    call_array                     shift and go to state 53
    constant2                      shift and go to state 54
    string_expr                    shift and go to state 55

state 145

    (74) if_single -> IF LPAREN . bool_expr RPAREN get_conditional block fill_end_single
    (75) if_multiple -> IF LPAREN . bool_expr RPAREN get_conditional block if_multiple_2
    (78) bool_expr -> . relational_exp execute_priority_1
    (79) bool_expr -> . relational_exp execute_priority_1 AND push_operator bool_expr
    (80) bool_expr -> . relational_exp execute_priority_1 OR push_operator bool_expr
    (81) relational_exp -> . expression execute_priority_2 comp relational_exp
    (82) relational_exp -> . expression execute_priority_2
    (83) expression -> . term execute_priority_3
    (84) expression -> . term execute_priority_3 PLUS push_operator expression
    (85) expression -> . term execute_priority_3 MINUS push_operator expression
    (86) term -> . factor execute_priority_4
    (87) term -> . factor execute_priority_4 TIMES push_operator term
    (88) term -> . factor execute_priority_4 DIVIDE push_operator term
    (89) term -> . factor execute_priority_4 TIMES error push_operator term
    (90) term -> . factor execute_priority_4 DIVIDE error push_operator term
    (91) factor -> . constant
    (92) factor -> . LPAREN push_operator bool_expr RPAREN push_operator
    (93) factor -> . LPAREN push_operator error RPAREN push_operator
    (95) constant -> . INTLIT add_constant
    (96) constant -> . FLOATLIT add_constant
    (97) constant -> . BOOLLIT add_constant
    (98) constant -> . string
    (99) constant -> . call
    (100) constant -> . call_array
    (101) constant -> . constant2
    (120) string -> . string_expr
    (121) string -> . string_expr string
    (69) call -> . ID LPAREN call1 RPAREN
    (94) call_array -> . ID LBRACK expression RBRACK
    (102) constant2 -> . ID push_variable
    (103) constant2 -> . ID PERIOD constant2
    (122) string_expr -> . STRINGLIT add_constant
    (123) string_expr -> . BSLASH LPAREN expression RPAREN

    LPAREN          shift and go to state 47
    INTLIT          shift and go to state 48
    FLOATLIT        shift and go to state 49
    BOOLLIT         shift and go to state 50
    ID              shift and go to state 56
    STRINGLIT       shift and go to state 57
    BSLASH          shift and go to state 58

    bool_expr                      shift and go to state 190
    relational_exp                 shift and go to state 42
    expression                     shift and go to state 43
    term                           shift and go to state 44
    factor                         shift and go to state 45
    constant                       shift and go to state 46
    string                         shift and go to state 51
    call                           shift and go to state 52
    call_array                     shift and go to state 53
    constant2                      shift and go to state 54
    string_expr                    shift and go to state 55

state 146

    (79) bool_expr -> relational_exp execute_priority_1 AND . push_operator bool_expr
    (144) push_operator -> .

    LPAREN          reduce using rule 144 (push_operator -> .)
    INTLIT          reduce using rule 144 (push_operator -> .)
    FLOATLIT        reduce using rule 144 (push_operator -> .)
    BOOLLIT         reduce using rule 144 (push_operator -> .)
    ID              reduce using rule 144 (push_operator -> .)
    STRINGLIT       reduce using rule 144 (push_operator -> .)
    BSLASH          reduce using rule 144 (push_operator -> .)

    push_operator                  shift and go to state 191

state 147

    (80) bool_expr -> relational_exp execute_priority_1 OR . push_operator bool_expr
    (144) push_operator -> .

    LPAREN          reduce using rule 144 (push_operator -> .)
    INTLIT          reduce using rule 144 (push_operator -> .)
    FLOATLIT        reduce using rule 144 (push_operator -> .)
    BOOLLIT         reduce using rule 144 (push_operator -> .)
    ID              reduce using rule 144 (push_operator -> .)
    STRINGLIT       reduce using rule 144 (push_operator -> .)
    BSLASH          reduce using rule 144 (push_operator -> .)

    push_operator                  shift and go to state 192

state 148

    (81) relational_exp -> expression execute_priority_2 comp . relational_exp
    (81) relational_exp -> . expression execute_priority_2 comp relational_exp
    (82) relational_exp -> . expression execute_priority_2
    (83) expression -> . term execute_priority_3
    (84) expression -> . term execute_priority_3 PLUS push_operator expression
    (85) expression -> . term execute_priority_3 MINUS push_operator expression
    (86) term -> . factor execute_priority_4
    (87) term -> . factor execute_priority_4 TIMES push_operator term
    (88) term -> . factor execute_priority_4 DIVIDE push_operator term
    (89) term -> . factor execute_priority_4 TIMES error push_operator term
    (90) term -> . factor execute_priority_4 DIVIDE error push_operator term
    (91) factor -> . constant
    (92) factor -> . LPAREN push_operator bool_expr RPAREN push_operator
    (93) factor -> . LPAREN push_operator error RPAREN push_operator
    (95) constant -> . INTLIT add_constant
    (96) constant -> . FLOATLIT add_constant
    (97) constant -> . BOOLLIT add_constant
    (98) constant -> . string
    (99) constant -> . call
    (100) constant -> . call_array
    (101) constant -> . constant2
    (120) string -> . string_expr
    (121) string -> . string_expr string
    (69) call -> . ID LPAREN call1 RPAREN
    (94) call_array -> . ID LBRACK expression RBRACK
    (102) constant2 -> . ID push_variable
    (103) constant2 -> . ID PERIOD constant2
    (122) string_expr -> . STRINGLIT add_constant
    (123) string_expr -> . BSLASH LPAREN expression RPAREN

    LPAREN          shift and go to state 47
    INTLIT          shift and go to state 48
    FLOATLIT        shift and go to state 49
    BOOLLIT         shift and go to state 50
    ID              shift and go to state 56
    STRINGLIT       shift and go to state 57
    BSLASH          shift and go to state 58

    expression                     shift and go to state 43
    relational_exp                 shift and go to state 193
    term                           shift and go to state 44
    factor                         shift and go to state 45
    constant                       shift and go to state 46
    string                         shift and go to state 51
    call                           shift and go to state 52
    call_array                     shift and go to state 53
    constant2                      shift and go to state 54
    string_expr                    shift and go to state 55

state 149

    (104) comp -> LESS . push_operator
    (144) push_operator -> .

    LPAREN          reduce using rule 144 (push_operator -> .)
    INTLIT          reduce using rule 144 (push_operator -> .)
    FLOATLIT        reduce using rule 144 (push_operator -> .)
    BOOLLIT         reduce using rule 144 (push_operator -> .)
    ID              reduce using rule 144 (push_operator -> .)
    STRINGLIT       reduce using rule 144 (push_operator -> .)
    BSLASH          reduce using rule 144 (push_operator -> .)

    push_operator                  shift and go to state 194

state 150

    (105) comp -> MORE . push_operator
    (144) push_operator -> .

    LPAREN          reduce using rule 144 (push_operator -> .)
    INTLIT          reduce using rule 144 (push_operator -> .)
    FLOATLIT        reduce using rule 144 (push_operator -> .)
    BOOLLIT         reduce using rule 144 (push_operator -> .)
    ID              reduce using rule 144 (push_operator -> .)
    STRINGLIT       reduce using rule 144 (push_operator -> .)
    BSLASH          reduce using rule 144 (push_operator -> .)

    push_operator                  shift and go to state 195

state 151

    (106) comp -> EQUALS . push_operator
    (144) push_operator -> .

    LPAREN          reduce using rule 144 (push_operator -> .)
    INTLIT          reduce using rule 144 (push_operator -> .)
    FLOATLIT        reduce using rule 144 (push_operator -> .)
    BOOLLIT         reduce using rule 144 (push_operator -> .)
    ID              reduce using rule 144 (push_operator -> .)
    STRINGLIT       reduce using rule 144 (push_operator -> .)
    BSLASH          reduce using rule 144 (push_operator -> .)

    push_operator                  shift and go to state 196

state 152

    (107) comp -> NEQUALS . push_operator
    (144) push_operator -> .

    LPAREN          reduce using rule 144 (push_operator -> .)
    INTLIT          reduce using rule 144 (push_operator -> .)
    FLOATLIT        reduce using rule 144 (push_operator -> .)
    BOOLLIT         reduce using rule 144 (push_operator -> .)
    ID              reduce using rule 144 (push_operator -> .)
    STRINGLIT       reduce using rule 144 (push_operator -> .)
    BSLASH          reduce using rule 144 (push_operator -> .)

    push_operator                  shift and go to state 197

state 153

    (108) comp -> LEQUALS . push_operator
    (144) push_operator -> .

    LPAREN          reduce using rule 144 (push_operator -> .)
    INTLIT          reduce using rule 144 (push_operator -> .)
    FLOATLIT        reduce using rule 144 (push_operator -> .)
    BOOLLIT         reduce using rule 144 (push_operator -> .)
    ID              reduce using rule 144 (push_operator -> .)
    STRINGLIT       reduce using rule 144 (push_operator -> .)
    BSLASH          reduce using rule 144 (push_operator -> .)

    push_operator                  shift and go to state 198

state 154

    (109) comp -> MEQUALS . push_operator
    (144) push_operator -> .

    LPAREN          reduce using rule 144 (push_operator -> .)
    INTLIT          reduce using rule 144 (push_operator -> .)
    FLOATLIT        reduce using rule 144 (push_operator -> .)
    BOOLLIT         reduce using rule 144 (push_operator -> .)
    ID              reduce using rule 144 (push_operator -> .)
    STRINGLIT       reduce using rule 144 (push_operator -> .)
    BSLASH          reduce using rule 144 (push_operator -> .)

    push_operator                  shift and go to state 199

state 155

    (84) expression -> term execute_priority_3 PLUS . push_operator expression
    (144) push_operator -> .

    LPAREN          reduce using rule 144 (push_operator -> .)
    INTLIT          reduce using rule 144 (push_operator -> .)
    FLOATLIT        reduce using rule 144 (push_operator -> .)
    BOOLLIT         reduce using rule 144 (push_operator -> .)
    ID              reduce using rule 144 (push_operator -> .)
    STRINGLIT       reduce using rule 144 (push_operator -> .)
    BSLASH          reduce using rule 144 (push_operator -> .)

    push_operator                  shift and go to state 200

state 156

    (85) expression -> term execute_priority_3 MINUS . push_operator expression
    (144) push_operator -> .

    LPAREN          reduce using rule 144 (push_operator -> .)
    INTLIT          reduce using rule 144 (push_operator -> .)
    FLOATLIT        reduce using rule 144 (push_operator -> .)
    BOOLLIT         reduce using rule 144 (push_operator -> .)
    ID              reduce using rule 144 (push_operator -> .)
    STRINGLIT       reduce using rule 144 (push_operator -> .)
    BSLASH          reduce using rule 144 (push_operator -> .)

    push_operator                  shift and go to state 201

state 157

    (87) term -> factor execute_priority_4 TIMES . push_operator term
    (89) term -> factor execute_priority_4 TIMES . error push_operator term
    (144) push_operator -> .

    error           shift and go to state 203
    LPAREN          reduce using rule 144 (push_operator -> .)
    INTLIT          reduce using rule 144 (push_operator -> .)
    FLOATLIT        reduce using rule 144 (push_operator -> .)
    BOOLLIT         reduce using rule 144 (push_operator -> .)
    ID              reduce using rule 144 (push_operator -> .)
    STRINGLIT       reduce using rule 144 (push_operator -> .)
    BSLASH          reduce using rule 144 (push_operator -> .)

    push_operator                  shift and go to state 202

state 158

    (88) term -> factor execute_priority_4 DIVIDE . push_operator term
    (90) term -> factor execute_priority_4 DIVIDE . error push_operator term
    (144) push_operator -> .

    error           shift and go to state 205
    LPAREN          reduce using rule 144 (push_operator -> .)
    INTLIT          reduce using rule 144 (push_operator -> .)
    FLOATLIT        reduce using rule 144 (push_operator -> .)
    BOOLLIT         reduce using rule 144 (push_operator -> .)
    ID              reduce using rule 144 (push_operator -> .)
    STRINGLIT       reduce using rule 144 (push_operator -> .)
    BSLASH          reduce using rule 144 (push_operator -> .)

    push_operator                  shift and go to state 204

state 159

    (92) factor -> LPAREN push_operator bool_expr . RPAREN push_operator

    RPAREN          shift and go to state 206


state 160

    (93) factor -> LPAREN push_operator error . RPAREN push_operator

    RPAREN          shift and go to state 207


state 161

    (69) call -> ID LPAREN call1 . RPAREN

    RPAREN          shift and go to state 208


state 162

    (70) call1 -> expression .
    (71) call1 -> expression . COMMA call1

    RPAREN          reduce using rule 70 (call1 -> expression .)
    COMMA           shift and go to state 209


state 163

    (94) call_array -> ID LBRACK expression . RBRACK

    RBRACK          shift and go to state 210


state 164

    (102) constant2 -> ID . push_variable
    (103) constant2 -> ID . PERIOD constant2
    (145) push_variable -> .

    PERIOD          shift and go to state 115
    TIMES           reduce using rule 145 (push_variable -> .)
    DIVIDE          reduce using rule 145 (push_variable -> .)
    PLUS            reduce using rule 145 (push_variable -> .)
    MINUS           reduce using rule 145 (push_variable -> .)
    LESS            reduce using rule 145 (push_variable -> .)
    MORE            reduce using rule 145 (push_variable -> .)
    EQUALS          reduce using rule 145 (push_variable -> .)
    NEQUALS         reduce using rule 145 (push_variable -> .)
    LEQUALS         reduce using rule 145 (push_variable -> .)
    MEQUALS         reduce using rule 145 (push_variable -> .)
    AND             reduce using rule 145 (push_variable -> .)
    OR              reduce using rule 145 (push_variable -> .)
    NLINE           reduce using rule 145 (push_variable -> .)
    COMMA           reduce using rule 145 (push_variable -> .)
    RBRACK          reduce using rule 145 (push_variable -> .)
    RPAREN          reduce using rule 145 (push_variable -> .)

    push_variable                  shift and go to state 114

state 165

    (103) constant2 -> ID PERIOD constant2 .

    TIMES           reduce using rule 103 (constant2 -> ID PERIOD constant2 .)
    DIVIDE          reduce using rule 103 (constant2 -> ID PERIOD constant2 .)
    PLUS            reduce using rule 103 (constant2 -> ID PERIOD constant2 .)
    MINUS           reduce using rule 103 (constant2 -> ID PERIOD constant2 .)
    LESS            reduce using rule 103 (constant2 -> ID PERIOD constant2 .)
    MORE            reduce using rule 103 (constant2 -> ID PERIOD constant2 .)
    EQUALS          reduce using rule 103 (constant2 -> ID PERIOD constant2 .)
    NEQUALS         reduce using rule 103 (constant2 -> ID PERIOD constant2 .)
    LEQUALS         reduce using rule 103 (constant2 -> ID PERIOD constant2 .)
    MEQUALS         reduce using rule 103 (constant2 -> ID PERIOD constant2 .)
    AND             reduce using rule 103 (constant2 -> ID PERIOD constant2 .)
    OR              reduce using rule 103 (constant2 -> ID PERIOD constant2 .)
    NLINE           reduce using rule 103 (constant2 -> ID PERIOD constant2 .)
    COMMA           reduce using rule 103 (constant2 -> ID PERIOD constant2 .)
    RBRACK          reduce using rule 103 (constant2 -> ID PERIOD constant2 .)
    RPAREN          reduce using rule 103 (constant2 -> ID PERIOD constant2 .)


state 166

    (123) string_expr -> BSLASH LPAREN expression . RPAREN

    RPAREN          shift and go to state 211


state 167

    (18) array1 -> expression COMMA array1 .

    RBRACK          reduce using rule 18 (array1 -> expression COMMA array1 .)


state 168

    (112) variable -> VAR ID add_var COLON error NLINE .

    ASSIGN          reduce using rule 112 (variable -> VAR ID add_var COLON error NLINE .)
    error           reduce using rule 112 (variable -> VAR ID add_var COLON error NLINE .)
    NLINE           reduce using rule 112 (variable -> VAR ID add_var COLON error NLINE .)


state 169

    (114) type -> LBRACK variable_primitive RBRACK .

    ASSIGN          reduce using rule 114 (type -> LBRACK variable_primitive RBRACK .)
    error           reduce using rule 114 (type -> LBRACK variable_primitive RBRACK .)
    NLINE           reduce using rule 114 (type -> LBRACK variable_primitive RBRACK .)


state 170

    (115) type -> LBRACK ID RBRACK .

    ASSIGN          reduce using rule 115 (type -> LBRACK ID RBRACK .)
    error           reduce using rule 115 (type -> LBRACK ID RBRACK .)
    NLINE           reduce using rule 115 (type -> LBRACK ID RBRACK .)


state 171

    (10) function -> FUNC ID add_function params set_void init_block end_function .

    NLINE           reduce using rule 10 (function -> FUNC ID add_function params set_void init_block end_function .)


state 172

    (11) function -> FUNC ID add_function params ARROW variable_primitive init_block . end_function
    (127) end_function -> .

    NLINE           reduce using rule 127 (end_function -> .)

    end_function                   shift and go to state 212

state 173

    (25) params1 -> error . COMMA params1
    (28) param -> error . COLON variable_primitive

    COMMA           shift and go to state 132
    COLON           shift and go to state 133


state 174

    (25) params1 -> error COMMA params1 .

    RPAREN          reduce using rule 25 (params1 -> error COMMA params1 .)


state 175

    (28) param -> error COLON variable_primitive .

    COMMA           reduce using rule 28 (param -> error COLON variable_primitive .)
    RPAREN          reduce using rule 28 (param -> error COLON variable_primitive .)


state 176

    (24) params1 -> param COMMA params1 .

    RPAREN          reduce using rule 24 (params1 -> param COMMA params1 .)


state 177

    (26) param -> ID add_param COLON . variable_primitive
    (116) variable_primitive -> . INT set_variable_type
    (117) variable_primitive -> . FLOAT set_variable_type
    (118) variable_primitive -> . STRING set_variable_type
    (119) variable_primitive -> . BOOL set_variable_type

    INT             shift and go to state 65
    FLOAT           shift and go to state 66
    STRING          shift and go to state 67
    BOOL            shift and go to state 68

    variable_primitive             shift and go to state 213

state 178

    (27) param -> ID error variable_primitive .

    COMMA           reduce using rule 27 (param -> ID error variable_primitive .)
    RPAREN          reduce using rule 27 (param -> ID error variable_primitive .)


state 179

    (57) input -> variable ASSIGN INPUT . LPAREN string RPAREN

    LPAREN          shift and go to state 214


state 180

    (58) display -> PRINT push_operator LPAREN . bool_expr RPAREN execute_builtin_call
    (78) bool_expr -> . relational_exp execute_priority_1
    (79) bool_expr -> . relational_exp execute_priority_1 AND push_operator bool_expr
    (80) bool_expr -> . relational_exp execute_priority_1 OR push_operator bool_expr
    (81) relational_exp -> . expression execute_priority_2 comp relational_exp
    (82) relational_exp -> . expression execute_priority_2
    (83) expression -> . term execute_priority_3
    (84) expression -> . term execute_priority_3 PLUS push_operator expression
    (85) expression -> . term execute_priority_3 MINUS push_operator expression
    (86) term -> . factor execute_priority_4
    (87) term -> . factor execute_priority_4 TIMES push_operator term
    (88) term -> . factor execute_priority_4 DIVIDE push_operator term
    (89) term -> . factor execute_priority_4 TIMES error push_operator term
    (90) term -> . factor execute_priority_4 DIVIDE error push_operator term
    (91) factor -> . constant
    (92) factor -> . LPAREN push_operator bool_expr RPAREN push_operator
    (93) factor -> . LPAREN push_operator error RPAREN push_operator
    (95) constant -> . INTLIT add_constant
    (96) constant -> . FLOATLIT add_constant
    (97) constant -> . BOOLLIT add_constant
    (98) constant -> . string
    (99) constant -> . call
    (100) constant -> . call_array
    (101) constant -> . constant2
    (120) string -> . string_expr
    (121) string -> . string_expr string
    (69) call -> . ID LPAREN call1 RPAREN
    (94) call_array -> . ID LBRACK expression RBRACK
    (102) constant2 -> . ID push_variable
    (103) constant2 -> . ID PERIOD constant2
    (122) string_expr -> . STRINGLIT add_constant
    (123) string_expr -> . BSLASH LPAREN expression RPAREN

    LPAREN          shift and go to state 47
    INTLIT          shift and go to state 48
    FLOATLIT        shift and go to state 49
    BOOLLIT         shift and go to state 50
    ID              shift and go to state 56
    STRINGLIT       shift and go to state 57
    BSLASH          shift and go to state 58

    bool_expr                      shift and go to state 215
    relational_exp                 shift and go to state 42
    expression                     shift and go to state 43
    term                           shift and go to state 44
    factor                         shift and go to state 45
    constant                       shift and go to state 46
    string                         shift and go to state 51
    call                           shift and go to state 52
    call_array                     shift and go to state 53
    constant2                      shift and go to state 54
    string_expr                    shift and go to state 55

state 181

    (56) while -> WHILE LPAREN save_loop_start . bool_expr set_loop_condition RPAREN block fill_and_reset_loop
    (78) bool_expr -> . relational_exp execute_priority_1
    (79) bool_expr -> . relational_exp execute_priority_1 AND push_operator bool_expr
    (80) bool_expr -> . relational_exp execute_priority_1 OR push_operator bool_expr
    (81) relational_exp -> . expression execute_priority_2 comp relational_exp
    (82) relational_exp -> . expression execute_priority_2
    (83) expression -> . term execute_priority_3
    (84) expression -> . term execute_priority_3 PLUS push_operator expression
    (85) expression -> . term execute_priority_3 MINUS push_operator expression
    (86) term -> . factor execute_priority_4
    (87) term -> . factor execute_priority_4 TIMES push_operator term
    (88) term -> . factor execute_priority_4 DIVIDE push_operator term
    (89) term -> . factor execute_priority_4 TIMES error push_operator term
    (90) term -> . factor execute_priority_4 DIVIDE error push_operator term
    (91) factor -> . constant
    (92) factor -> . LPAREN push_operator bool_expr RPAREN push_operator
    (93) factor -> . LPAREN push_operator error RPAREN push_operator
    (95) constant -> . INTLIT add_constant
    (96) constant -> . FLOATLIT add_constant
    (97) constant -> . BOOLLIT add_constant
    (98) constant -> . string
    (99) constant -> . call
    (100) constant -> . call_array
    (101) constant -> . constant2
    (120) string -> . string_expr
    (121) string -> . string_expr string
    (69) call -> . ID LPAREN call1 RPAREN
    (94) call_array -> . ID LBRACK expression RBRACK
    (102) constant2 -> . ID push_variable
    (103) constant2 -> . ID PERIOD constant2
    (122) string_expr -> . STRINGLIT add_constant
    (123) string_expr -> . BSLASH LPAREN expression RPAREN

    LPAREN          shift and go to state 47
    INTLIT          shift and go to state 48
    FLOATLIT        shift and go to state 49
    BOOLLIT         shift and go to state 50
    ID              shift and go to state 56
    STRINGLIT       shift and go to state 57
    BSLASH          shift and go to state 58

    bool_expr                      shift and go to state 216
    relational_exp                 shift and go to state 42
    expression                     shift and go to state 43
    term                           shift and go to state 44
    factor                         shift and go to state 45
    constant                       shift and go to state 46
    string                         shift and go to state 51
    call                           shift and go to state 52
    call_array                     shift and go to state 53
    constant2                      shift and go to state 54
    string_expr                    shift and go to state 55

state 182

    (61) assign -> ID push_variable assign1 . bool_expr execute_priority_0
    (63) assign -> ID push_variable assign1 . error execute_priority_0
    (78) bool_expr -> . relational_exp execute_priority_1
    (79) bool_expr -> . relational_exp execute_priority_1 AND push_operator bool_expr
    (80) bool_expr -> . relational_exp execute_priority_1 OR push_operator bool_expr
    (81) relational_exp -> . expression execute_priority_2 comp relational_exp
    (82) relational_exp -> . expression execute_priority_2
    (83) expression -> . term execute_priority_3
    (84) expression -> . term execute_priority_3 PLUS push_operator expression
    (85) expression -> . term execute_priority_3 MINUS push_operator expression
    (86) term -> . factor execute_priority_4
    (87) term -> . factor execute_priority_4 TIMES push_operator term
    (88) term -> . factor execute_priority_4 DIVIDE push_operator term
    (89) term -> . factor execute_priority_4 TIMES error push_operator term
    (90) term -> . factor execute_priority_4 DIVIDE error push_operator term
    (91) factor -> . constant
    (92) factor -> . LPAREN push_operator bool_expr RPAREN push_operator
    (93) factor -> . LPAREN push_operator error RPAREN push_operator
    (95) constant -> . INTLIT add_constant
    (96) constant -> . FLOATLIT add_constant
    (97) constant -> . BOOLLIT add_constant
    (98) constant -> . string
    (99) constant -> . call
    (100) constant -> . call_array
    (101) constant -> . constant2
    (120) string -> . string_expr
    (121) string -> . string_expr string
    (69) call -> . ID LPAREN call1 RPAREN
    (94) call_array -> . ID LBRACK expression RBRACK
    (102) constant2 -> . ID push_variable
    (103) constant2 -> . ID PERIOD constant2
    (122) string_expr -> . STRINGLIT add_constant
    (123) string_expr -> . BSLASH LPAREN expression RPAREN

    error           shift and go to state 218
    LPAREN          shift and go to state 47
    INTLIT          shift and go to state 48
    FLOATLIT        shift and go to state 49
    BOOLLIT         shift and go to state 50
    ID              shift and go to state 56
    STRINGLIT       shift and go to state 57
    BSLASH          shift and go to state 58

    bool_expr                      shift and go to state 217
    relational_exp                 shift and go to state 42
    expression                     shift and go to state 43
    term                           shift and go to state 44
    factor                         shift and go to state 45
    constant                       shift and go to state 46
    string                         shift and go to state 51
    call                           shift and go to state 52
    call_array                     shift and go to state 53
    constant2                      shift and go to state 54
    string_expr                    shift and go to state 55

state 183

    (62) assign -> ID push_variable error . execute_priority_0
    (131) execute_priority_0 -> .

    NLINE           reduce using rule 131 (execute_priority_0 -> .)

    execute_priority_0             shift and go to state 219

state 184

    (64) assign1 -> ASSIGN . push_operator
    (144) push_operator -> .

    error           reduce using rule 144 (push_operator -> .)
    LPAREN          reduce using rule 144 (push_operator -> .)
    INTLIT          reduce using rule 144 (push_operator -> .)
    FLOATLIT        reduce using rule 144 (push_operator -> .)
    BOOLLIT         reduce using rule 144 (push_operator -> .)
    ID              reduce using rule 144 (push_operator -> .)
    STRINGLIT       reduce using rule 144 (push_operator -> .)
    BSLASH          reduce using rule 144 (push_operator -> .)

    push_operator                  shift and go to state 220

state 185

    (65) assign1 -> PASSIGN .

    error           reduce using rule 65 (assign1 -> PASSIGN .)
    LPAREN          reduce using rule 65 (assign1 -> PASSIGN .)
    INTLIT          reduce using rule 65 (assign1 -> PASSIGN .)
    FLOATLIT        reduce using rule 65 (assign1 -> PASSIGN .)
    BOOLLIT         reduce using rule 65 (assign1 -> PASSIGN .)
    ID              reduce using rule 65 (assign1 -> PASSIGN .)
    STRINGLIT       reduce using rule 65 (assign1 -> PASSIGN .)
    BSLASH          reduce using rule 65 (assign1 -> PASSIGN .)


state 186

    (66) assign1 -> LASSIGN .

    error           reduce using rule 66 (assign1 -> LASSIGN .)
    LPAREN          reduce using rule 66 (assign1 -> LASSIGN .)
    INTLIT          reduce using rule 66 (assign1 -> LASSIGN .)
    FLOATLIT        reduce using rule 66 (assign1 -> LASSIGN .)
    BOOLLIT         reduce using rule 66 (assign1 -> LASSIGN .)
    ID              reduce using rule 66 (assign1 -> LASSIGN .)
    STRINGLIT       reduce using rule 66 (assign1 -> LASSIGN .)
    BSLASH          reduce using rule 66 (assign1 -> LASSIGN .)


state 187

    (67) assign1 -> MASSIGN .

    error           reduce using rule 67 (assign1 -> MASSIGN .)
    LPAREN          reduce using rule 67 (assign1 -> MASSIGN .)
    INTLIT          reduce using rule 67 (assign1 -> MASSIGN .)
    FLOATLIT        reduce using rule 67 (assign1 -> MASSIGN .)
    BOOLLIT         reduce using rule 67 (assign1 -> MASSIGN .)
    ID              reduce using rule 67 (assign1 -> MASSIGN .)
    STRINGLIT       reduce using rule 67 (assign1 -> MASSIGN .)
    BSLASH          reduce using rule 67 (assign1 -> MASSIGN .)


state 188

    (68) assign1 -> DASSIGN .

    error           reduce using rule 68 (assign1 -> DASSIGN .)
    LPAREN          reduce using rule 68 (assign1 -> DASSIGN .)
    INTLIT          reduce using rule 68 (assign1 -> DASSIGN .)
    FLOATLIT        reduce using rule 68 (assign1 -> DASSIGN .)
    BOOLLIT         reduce using rule 68 (assign1 -> DASSIGN .)
    ID              reduce using rule 68 (assign1 -> DASSIGN .)
    STRINGLIT       reduce using rule 68 (assign1 -> DASSIGN .)
    BSLASH          reduce using rule 68 (assign1 -> DASSIGN .)


state 189

    (60) return -> RETURN push_operator bool_expr . set_return
    (126) set_return -> .

    NLINE           reduce using rule 126 (set_return -> .)

    set_return                     shift and go to state 221

state 190

    (74) if_single -> IF LPAREN bool_expr . RPAREN get_conditional block fill_end_single
    (75) if_multiple -> IF LPAREN bool_expr . RPAREN get_conditional block if_multiple_2

    RPAREN          shift and go to state 222


state 191

    (79) bool_expr -> relational_exp execute_priority_1 AND push_operator . bool_expr
    (78) bool_expr -> . relational_exp execute_priority_1
    (79) bool_expr -> . relational_exp execute_priority_1 AND push_operator bool_expr
    (80) bool_expr -> . relational_exp execute_priority_1 OR push_operator bool_expr
    (81) relational_exp -> . expression execute_priority_2 comp relational_exp
    (82) relational_exp -> . expression execute_priority_2
    (83) expression -> . term execute_priority_3
    (84) expression -> . term execute_priority_3 PLUS push_operator expression
    (85) expression -> . term execute_priority_3 MINUS push_operator expression
    (86) term -> . factor execute_priority_4
    (87) term -> . factor execute_priority_4 TIMES push_operator term
    (88) term -> . factor execute_priority_4 DIVIDE push_operator term
    (89) term -> . factor execute_priority_4 TIMES error push_operator term
    (90) term -> . factor execute_priority_4 DIVIDE error push_operator term
    (91) factor -> . constant
    (92) factor -> . LPAREN push_operator bool_expr RPAREN push_operator
    (93) factor -> . LPAREN push_operator error RPAREN push_operator
    (95) constant -> . INTLIT add_constant
    (96) constant -> . FLOATLIT add_constant
    (97) constant -> . BOOLLIT add_constant
    (98) constant -> . string
    (99) constant -> . call
    (100) constant -> . call_array
    (101) constant -> . constant2
    (120) string -> . string_expr
    (121) string -> . string_expr string
    (69) call -> . ID LPAREN call1 RPAREN
    (94) call_array -> . ID LBRACK expression RBRACK
    (102) constant2 -> . ID push_variable
    (103) constant2 -> . ID PERIOD constant2
    (122) string_expr -> . STRINGLIT add_constant
    (123) string_expr -> . BSLASH LPAREN expression RPAREN

    LPAREN          shift and go to state 47
    INTLIT          shift and go to state 48
    FLOATLIT        shift and go to state 49
    BOOLLIT         shift and go to state 50
    ID              shift and go to state 56
    STRINGLIT       shift and go to state 57
    BSLASH          shift and go to state 58

    relational_exp                 shift and go to state 42
    bool_expr                      shift and go to state 223
    expression                     shift and go to state 43
    term                           shift and go to state 44
    factor                         shift and go to state 45
    constant                       shift and go to state 46
    string                         shift and go to state 51
    call                           shift and go to state 52
    call_array                     shift and go to state 53
    constant2                      shift and go to state 54
    string_expr                    shift and go to state 55

state 192

    (80) bool_expr -> relational_exp execute_priority_1 OR push_operator . bool_expr
    (78) bool_expr -> . relational_exp execute_priority_1
    (79) bool_expr -> . relational_exp execute_priority_1 AND push_operator bool_expr
    (80) bool_expr -> . relational_exp execute_priority_1 OR push_operator bool_expr
    (81) relational_exp -> . expression execute_priority_2 comp relational_exp
    (82) relational_exp -> . expression execute_priority_2
    (83) expression -> . term execute_priority_3
    (84) expression -> . term execute_priority_3 PLUS push_operator expression
    (85) expression -> . term execute_priority_3 MINUS push_operator expression
    (86) term -> . factor execute_priority_4
    (87) term -> . factor execute_priority_4 TIMES push_operator term
    (88) term -> . factor execute_priority_4 DIVIDE push_operator term
    (89) term -> . factor execute_priority_4 TIMES error push_operator term
    (90) term -> . factor execute_priority_4 DIVIDE error push_operator term
    (91) factor -> . constant
    (92) factor -> . LPAREN push_operator bool_expr RPAREN push_operator
    (93) factor -> . LPAREN push_operator error RPAREN push_operator
    (95) constant -> . INTLIT add_constant
    (96) constant -> . FLOATLIT add_constant
    (97) constant -> . BOOLLIT add_constant
    (98) constant -> . string
    (99) constant -> . call
    (100) constant -> . call_array
    (101) constant -> . constant2
    (120) string -> . string_expr
    (121) string -> . string_expr string
    (69) call -> . ID LPAREN call1 RPAREN
    (94) call_array -> . ID LBRACK expression RBRACK
    (102) constant2 -> . ID push_variable
    (103) constant2 -> . ID PERIOD constant2
    (122) string_expr -> . STRINGLIT add_constant
    (123) string_expr -> . BSLASH LPAREN expression RPAREN

    LPAREN          shift and go to state 47
    INTLIT          shift and go to state 48
    FLOATLIT        shift and go to state 49
    BOOLLIT         shift and go to state 50
    ID              shift and go to state 56
    STRINGLIT       shift and go to state 57
    BSLASH          shift and go to state 58

    relational_exp                 shift and go to state 42
    bool_expr                      shift and go to state 224
    expression                     shift and go to state 43
    term                           shift and go to state 44
    factor                         shift and go to state 45
    constant                       shift and go to state 46
    string                         shift and go to state 51
    call                           shift and go to state 52
    call_array                     shift and go to state 53
    constant2                      shift and go to state 54
    string_expr                    shift and go to state 55

state 193

    (81) relational_exp -> expression execute_priority_2 comp relational_exp .

    AND             reduce using rule 81 (relational_exp -> expression execute_priority_2 comp relational_exp .)
    OR              reduce using rule 81 (relational_exp -> expression execute_priority_2 comp relational_exp .)
    NLINE           reduce using rule 81 (relational_exp -> expression execute_priority_2 comp relational_exp .)
    RPAREN          reduce using rule 81 (relational_exp -> expression execute_priority_2 comp relational_exp .)


state 194

    (104) comp -> LESS push_operator .

    LPAREN          reduce using rule 104 (comp -> LESS push_operator .)
    INTLIT          reduce using rule 104 (comp -> LESS push_operator .)
    FLOATLIT        reduce using rule 104 (comp -> LESS push_operator .)
    BOOLLIT         reduce using rule 104 (comp -> LESS push_operator .)
    ID              reduce using rule 104 (comp -> LESS push_operator .)
    STRINGLIT       reduce using rule 104 (comp -> LESS push_operator .)
    BSLASH          reduce using rule 104 (comp -> LESS push_operator .)


state 195

    (105) comp -> MORE push_operator .

    LPAREN          reduce using rule 105 (comp -> MORE push_operator .)
    INTLIT          reduce using rule 105 (comp -> MORE push_operator .)
    FLOATLIT        reduce using rule 105 (comp -> MORE push_operator .)
    BOOLLIT         reduce using rule 105 (comp -> MORE push_operator .)
    ID              reduce using rule 105 (comp -> MORE push_operator .)
    STRINGLIT       reduce using rule 105 (comp -> MORE push_operator .)
    BSLASH          reduce using rule 105 (comp -> MORE push_operator .)


state 196

    (106) comp -> EQUALS push_operator .

    LPAREN          reduce using rule 106 (comp -> EQUALS push_operator .)
    INTLIT          reduce using rule 106 (comp -> EQUALS push_operator .)
    FLOATLIT        reduce using rule 106 (comp -> EQUALS push_operator .)
    BOOLLIT         reduce using rule 106 (comp -> EQUALS push_operator .)
    ID              reduce using rule 106 (comp -> EQUALS push_operator .)
    STRINGLIT       reduce using rule 106 (comp -> EQUALS push_operator .)
    BSLASH          reduce using rule 106 (comp -> EQUALS push_operator .)


state 197

    (107) comp -> NEQUALS push_operator .

    LPAREN          reduce using rule 107 (comp -> NEQUALS push_operator .)
    INTLIT          reduce using rule 107 (comp -> NEQUALS push_operator .)
    FLOATLIT        reduce using rule 107 (comp -> NEQUALS push_operator .)
    BOOLLIT         reduce using rule 107 (comp -> NEQUALS push_operator .)
    ID              reduce using rule 107 (comp -> NEQUALS push_operator .)
    STRINGLIT       reduce using rule 107 (comp -> NEQUALS push_operator .)
    BSLASH          reduce using rule 107 (comp -> NEQUALS push_operator .)


state 198

    (108) comp -> LEQUALS push_operator .

    LPAREN          reduce using rule 108 (comp -> LEQUALS push_operator .)
    INTLIT          reduce using rule 108 (comp -> LEQUALS push_operator .)
    FLOATLIT        reduce using rule 108 (comp -> LEQUALS push_operator .)
    BOOLLIT         reduce using rule 108 (comp -> LEQUALS push_operator .)
    ID              reduce using rule 108 (comp -> LEQUALS push_operator .)
    STRINGLIT       reduce using rule 108 (comp -> LEQUALS push_operator .)
    BSLASH          reduce using rule 108 (comp -> LEQUALS push_operator .)


state 199

    (109) comp -> MEQUALS push_operator .

    LPAREN          reduce using rule 109 (comp -> MEQUALS push_operator .)
    INTLIT          reduce using rule 109 (comp -> MEQUALS push_operator .)
    FLOATLIT        reduce using rule 109 (comp -> MEQUALS push_operator .)
    BOOLLIT         reduce using rule 109 (comp -> MEQUALS push_operator .)
    ID              reduce using rule 109 (comp -> MEQUALS push_operator .)
    STRINGLIT       reduce using rule 109 (comp -> MEQUALS push_operator .)
    BSLASH          reduce using rule 109 (comp -> MEQUALS push_operator .)


state 200

    (84) expression -> term execute_priority_3 PLUS push_operator . expression
    (83) expression -> . term execute_priority_3
    (84) expression -> . term execute_priority_3 PLUS push_operator expression
    (85) expression -> . term execute_priority_3 MINUS push_operator expression
    (86) term -> . factor execute_priority_4
    (87) term -> . factor execute_priority_4 TIMES push_operator term
    (88) term -> . factor execute_priority_4 DIVIDE push_operator term
    (89) term -> . factor execute_priority_4 TIMES error push_operator term
    (90) term -> . factor execute_priority_4 DIVIDE error push_operator term
    (91) factor -> . constant
    (92) factor -> . LPAREN push_operator bool_expr RPAREN push_operator
    (93) factor -> . LPAREN push_operator error RPAREN push_operator
    (95) constant -> . INTLIT add_constant
    (96) constant -> . FLOATLIT add_constant
    (97) constant -> . BOOLLIT add_constant
    (98) constant -> . string
    (99) constant -> . call
    (100) constant -> . call_array
    (101) constant -> . constant2
    (120) string -> . string_expr
    (121) string -> . string_expr string
    (69) call -> . ID LPAREN call1 RPAREN
    (94) call_array -> . ID LBRACK expression RBRACK
    (102) constant2 -> . ID push_variable
    (103) constant2 -> . ID PERIOD constant2
    (122) string_expr -> . STRINGLIT add_constant
    (123) string_expr -> . BSLASH LPAREN expression RPAREN

    LPAREN          shift and go to state 47
    INTLIT          shift and go to state 48
    FLOATLIT        shift and go to state 49
    BOOLLIT         shift and go to state 50
    ID              shift and go to state 56
    STRINGLIT       shift and go to state 57
    BSLASH          shift and go to state 58

    term                           shift and go to state 44
    expression                     shift and go to state 225
    factor                         shift and go to state 45
    constant                       shift and go to state 46
    string                         shift and go to state 51
    call                           shift and go to state 52
    call_array                     shift and go to state 53
    constant2                      shift and go to state 54
    string_expr                    shift and go to state 55

state 201

    (85) expression -> term execute_priority_3 MINUS push_operator . expression
    (83) expression -> . term execute_priority_3
    (84) expression -> . term execute_priority_3 PLUS push_operator expression
    (85) expression -> . term execute_priority_3 MINUS push_operator expression
    (86) term -> . factor execute_priority_4
    (87) term -> . factor execute_priority_4 TIMES push_operator term
    (88) term -> . factor execute_priority_4 DIVIDE push_operator term
    (89) term -> . factor execute_priority_4 TIMES error push_operator term
    (90) term -> . factor execute_priority_4 DIVIDE error push_operator term
    (91) factor -> . constant
    (92) factor -> . LPAREN push_operator bool_expr RPAREN push_operator
    (93) factor -> . LPAREN push_operator error RPAREN push_operator
    (95) constant -> . INTLIT add_constant
    (96) constant -> . FLOATLIT add_constant
    (97) constant -> . BOOLLIT add_constant
    (98) constant -> . string
    (99) constant -> . call
    (100) constant -> . call_array
    (101) constant -> . constant2
    (120) string -> . string_expr
    (121) string -> . string_expr string
    (69) call -> . ID LPAREN call1 RPAREN
    (94) call_array -> . ID LBRACK expression RBRACK
    (102) constant2 -> . ID push_variable
    (103) constant2 -> . ID PERIOD constant2
    (122) string_expr -> . STRINGLIT add_constant
    (123) string_expr -> . BSLASH LPAREN expression RPAREN

    LPAREN          shift and go to state 47
    INTLIT          shift and go to state 48
    FLOATLIT        shift and go to state 49
    BOOLLIT         shift and go to state 50
    ID              shift and go to state 56
    STRINGLIT       shift and go to state 57
    BSLASH          shift and go to state 58

    term                           shift and go to state 44
    expression                     shift and go to state 226
    factor                         shift and go to state 45
    constant                       shift and go to state 46
    string                         shift and go to state 51
    call                           shift and go to state 52
    call_array                     shift and go to state 53
    constant2                      shift and go to state 54
    string_expr                    shift and go to state 55

state 202

    (87) term -> factor execute_priority_4 TIMES push_operator . term
    (86) term -> . factor execute_priority_4
    (87) term -> . factor execute_priority_4 TIMES push_operator term
    (88) term -> . factor execute_priority_4 DIVIDE push_operator term
    (89) term -> . factor execute_priority_4 TIMES error push_operator term
    (90) term -> . factor execute_priority_4 DIVIDE error push_operator term
    (91) factor -> . constant
    (92) factor -> . LPAREN push_operator bool_expr RPAREN push_operator
    (93) factor -> . LPAREN push_operator error RPAREN push_operator
    (95) constant -> . INTLIT add_constant
    (96) constant -> . FLOATLIT add_constant
    (97) constant -> . BOOLLIT add_constant
    (98) constant -> . string
    (99) constant -> . call
    (100) constant -> . call_array
    (101) constant -> . constant2
    (120) string -> . string_expr
    (121) string -> . string_expr string
    (69) call -> . ID LPAREN call1 RPAREN
    (94) call_array -> . ID LBRACK expression RBRACK
    (102) constant2 -> . ID push_variable
    (103) constant2 -> . ID PERIOD constant2
    (122) string_expr -> . STRINGLIT add_constant
    (123) string_expr -> . BSLASH LPAREN expression RPAREN

    LPAREN          shift and go to state 47
    INTLIT          shift and go to state 48
    FLOATLIT        shift and go to state 49
    BOOLLIT         shift and go to state 50
    ID              shift and go to state 56
    STRINGLIT       shift and go to state 57
    BSLASH          shift and go to state 58

    factor                         shift and go to state 45
    term                           shift and go to state 227
    constant                       shift and go to state 46
    string                         shift and go to state 51
    call                           shift and go to state 52
    call_array                     shift and go to state 53
    constant2                      shift and go to state 54
    string_expr                    shift and go to state 55

state 203

    (89) term -> factor execute_priority_4 TIMES error . push_operator term
    (144) push_operator -> .

    LPAREN          reduce using rule 144 (push_operator -> .)
    INTLIT          reduce using rule 144 (push_operator -> .)
    FLOATLIT        reduce using rule 144 (push_operator -> .)
    BOOLLIT         reduce using rule 144 (push_operator -> .)
    ID              reduce using rule 144 (push_operator -> .)
    STRINGLIT       reduce using rule 144 (push_operator -> .)
    BSLASH          reduce using rule 144 (push_operator -> .)

    push_operator                  shift and go to state 228

state 204

    (88) term -> factor execute_priority_4 DIVIDE push_operator . term
    (86) term -> . factor execute_priority_4
    (87) term -> . factor execute_priority_4 TIMES push_operator term
    (88) term -> . factor execute_priority_4 DIVIDE push_operator term
    (89) term -> . factor execute_priority_4 TIMES error push_operator term
    (90) term -> . factor execute_priority_4 DIVIDE error push_operator term
    (91) factor -> . constant
    (92) factor -> . LPAREN push_operator bool_expr RPAREN push_operator
    (93) factor -> . LPAREN push_operator error RPAREN push_operator
    (95) constant -> . INTLIT add_constant
    (96) constant -> . FLOATLIT add_constant
    (97) constant -> . BOOLLIT add_constant
    (98) constant -> . string
    (99) constant -> . call
    (100) constant -> . call_array
    (101) constant -> . constant2
    (120) string -> . string_expr
    (121) string -> . string_expr string
    (69) call -> . ID LPAREN call1 RPAREN
    (94) call_array -> . ID LBRACK expression RBRACK
    (102) constant2 -> . ID push_variable
    (103) constant2 -> . ID PERIOD constant2
    (122) string_expr -> . STRINGLIT add_constant
    (123) string_expr -> . BSLASH LPAREN expression RPAREN

    LPAREN          shift and go to state 47
    INTLIT          shift and go to state 48
    FLOATLIT        shift and go to state 49
    BOOLLIT         shift and go to state 50
    ID              shift and go to state 56
    STRINGLIT       shift and go to state 57
    BSLASH          shift and go to state 58

    factor                         shift and go to state 45
    term                           shift and go to state 229
    constant                       shift and go to state 46
    string                         shift and go to state 51
    call                           shift and go to state 52
    call_array                     shift and go to state 53
    constant2                      shift and go to state 54
    string_expr                    shift and go to state 55

state 205

    (90) term -> factor execute_priority_4 DIVIDE error . push_operator term
    (144) push_operator -> .

    LPAREN          reduce using rule 144 (push_operator -> .)
    INTLIT          reduce using rule 144 (push_operator -> .)
    FLOATLIT        reduce using rule 144 (push_operator -> .)
    BOOLLIT         reduce using rule 144 (push_operator -> .)
    ID              reduce using rule 144 (push_operator -> .)
    STRINGLIT       reduce using rule 144 (push_operator -> .)
    BSLASH          reduce using rule 144 (push_operator -> .)

    push_operator                  shift and go to state 230

state 206

    (92) factor -> LPAREN push_operator bool_expr RPAREN . push_operator
    (144) push_operator -> .

    TIMES           reduce using rule 144 (push_operator -> .)
    DIVIDE          reduce using rule 144 (push_operator -> .)
    PLUS            reduce using rule 144 (push_operator -> .)
    MINUS           reduce using rule 144 (push_operator -> .)
    LESS            reduce using rule 144 (push_operator -> .)
    MORE            reduce using rule 144 (push_operator -> .)
    EQUALS          reduce using rule 144 (push_operator -> .)
    NEQUALS         reduce using rule 144 (push_operator -> .)
    LEQUALS         reduce using rule 144 (push_operator -> .)
    MEQUALS         reduce using rule 144 (push_operator -> .)
    AND             reduce using rule 144 (push_operator -> .)
    OR              reduce using rule 144 (push_operator -> .)
    NLINE           reduce using rule 144 (push_operator -> .)
    COMMA           reduce using rule 144 (push_operator -> .)
    RBRACK          reduce using rule 144 (push_operator -> .)
    RPAREN          reduce using rule 144 (push_operator -> .)

    push_operator                  shift and go to state 231

state 207

    (93) factor -> LPAREN push_operator error RPAREN . push_operator
    (144) push_operator -> .

    TIMES           reduce using rule 144 (push_operator -> .)
    DIVIDE          reduce using rule 144 (push_operator -> .)
    PLUS            reduce using rule 144 (push_operator -> .)
    MINUS           reduce using rule 144 (push_operator -> .)
    LESS            reduce using rule 144 (push_operator -> .)
    MORE            reduce using rule 144 (push_operator -> .)
    EQUALS          reduce using rule 144 (push_operator -> .)
    NEQUALS         reduce using rule 144 (push_operator -> .)
    LEQUALS         reduce using rule 144 (push_operator -> .)
    MEQUALS         reduce using rule 144 (push_operator -> .)
    AND             reduce using rule 144 (push_operator -> .)
    OR              reduce using rule 144 (push_operator -> .)
    NLINE           reduce using rule 144 (push_operator -> .)
    COMMA           reduce using rule 144 (push_operator -> .)
    RBRACK          reduce using rule 144 (push_operator -> .)
    RPAREN          reduce using rule 144 (push_operator -> .)

    push_operator                  shift and go to state 232

state 208

    (69) call -> ID LPAREN call1 RPAREN .

    TIMES           reduce using rule 69 (call -> ID LPAREN call1 RPAREN .)
    DIVIDE          reduce using rule 69 (call -> ID LPAREN call1 RPAREN .)
    PLUS            reduce using rule 69 (call -> ID LPAREN call1 RPAREN .)
    MINUS           reduce using rule 69 (call -> ID LPAREN call1 RPAREN .)
    LESS            reduce using rule 69 (call -> ID LPAREN call1 RPAREN .)
    MORE            reduce using rule 69 (call -> ID LPAREN call1 RPAREN .)
    EQUALS          reduce using rule 69 (call -> ID LPAREN call1 RPAREN .)
    NEQUALS         reduce using rule 69 (call -> ID LPAREN call1 RPAREN .)
    LEQUALS         reduce using rule 69 (call -> ID LPAREN call1 RPAREN .)
    MEQUALS         reduce using rule 69 (call -> ID LPAREN call1 RPAREN .)
    AND             reduce using rule 69 (call -> ID LPAREN call1 RPAREN .)
    OR              reduce using rule 69 (call -> ID LPAREN call1 RPAREN .)
    NLINE           reduce using rule 69 (call -> ID LPAREN call1 RPAREN .)
    COMMA           reduce using rule 69 (call -> ID LPAREN call1 RPAREN .)
    RBRACK          reduce using rule 69 (call -> ID LPAREN call1 RPAREN .)
    RPAREN          reduce using rule 69 (call -> ID LPAREN call1 RPAREN .)


state 209

    (71) call1 -> expression COMMA . call1
    (70) call1 -> . expression
    (71) call1 -> . expression COMMA call1
    (83) expression -> . term execute_priority_3
    (84) expression -> . term execute_priority_3 PLUS push_operator expression
    (85) expression -> . term execute_priority_3 MINUS push_operator expression
    (86) term -> . factor execute_priority_4
    (87) term -> . factor execute_priority_4 TIMES push_operator term
    (88) term -> . factor execute_priority_4 DIVIDE push_operator term
    (89) term -> . factor execute_priority_4 TIMES error push_operator term
    (90) term -> . factor execute_priority_4 DIVIDE error push_operator term
    (91) factor -> . constant
    (92) factor -> . LPAREN push_operator bool_expr RPAREN push_operator
    (93) factor -> . LPAREN push_operator error RPAREN push_operator
    (95) constant -> . INTLIT add_constant
    (96) constant -> . FLOATLIT add_constant
    (97) constant -> . BOOLLIT add_constant
    (98) constant -> . string
    (99) constant -> . call
    (100) constant -> . call_array
    (101) constant -> . constant2
    (120) string -> . string_expr
    (121) string -> . string_expr string
    (69) call -> . ID LPAREN call1 RPAREN
    (94) call_array -> . ID LBRACK expression RBRACK
    (102) constant2 -> . ID push_variable
    (103) constant2 -> . ID PERIOD constant2
    (122) string_expr -> . STRINGLIT add_constant
    (123) string_expr -> . BSLASH LPAREN expression RPAREN

    LPAREN          shift and go to state 47
    INTLIT          shift and go to state 48
    FLOATLIT        shift and go to state 49
    BOOLLIT         shift and go to state 50
    ID              shift and go to state 56
    STRINGLIT       shift and go to state 57
    BSLASH          shift and go to state 58

    expression                     shift and go to state 162
    call1                          shift and go to state 233
    term                           shift and go to state 44
    factor                         shift and go to state 45
    constant                       shift and go to state 46
    string                         shift and go to state 51
    call                           shift and go to state 52
    call_array                     shift and go to state 53
    constant2                      shift and go to state 54
    string_expr                    shift and go to state 55

state 210

    (94) call_array -> ID LBRACK expression RBRACK .

    TIMES           reduce using rule 94 (call_array -> ID LBRACK expression RBRACK .)
    DIVIDE          reduce using rule 94 (call_array -> ID LBRACK expression RBRACK .)
    PLUS            reduce using rule 94 (call_array -> ID LBRACK expression RBRACK .)
    MINUS           reduce using rule 94 (call_array -> ID LBRACK expression RBRACK .)
    LESS            reduce using rule 94 (call_array -> ID LBRACK expression RBRACK .)
    MORE            reduce using rule 94 (call_array -> ID LBRACK expression RBRACK .)
    EQUALS          reduce using rule 94 (call_array -> ID LBRACK expression RBRACK .)
    NEQUALS         reduce using rule 94 (call_array -> ID LBRACK expression RBRACK .)
    LEQUALS         reduce using rule 94 (call_array -> ID LBRACK expression RBRACK .)
    MEQUALS         reduce using rule 94 (call_array -> ID LBRACK expression RBRACK .)
    AND             reduce using rule 94 (call_array -> ID LBRACK expression RBRACK .)
    OR              reduce using rule 94 (call_array -> ID LBRACK expression RBRACK .)
    NLINE           reduce using rule 94 (call_array -> ID LBRACK expression RBRACK .)
    COMMA           reduce using rule 94 (call_array -> ID LBRACK expression RBRACK .)
    RBRACK          reduce using rule 94 (call_array -> ID LBRACK expression RBRACK .)
    RPAREN          reduce using rule 94 (call_array -> ID LBRACK expression RBRACK .)


state 211

    (123) string_expr -> BSLASH LPAREN expression RPAREN .

    STRINGLIT       reduce using rule 123 (string_expr -> BSLASH LPAREN expression RPAREN .)
    BSLASH          reduce using rule 123 (string_expr -> BSLASH LPAREN expression RPAREN .)
    TIMES           reduce using rule 123 (string_expr -> BSLASH LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 123 (string_expr -> BSLASH LPAREN expression RPAREN .)
    PLUS            reduce using rule 123 (string_expr -> BSLASH LPAREN expression RPAREN .)
    MINUS           reduce using rule 123 (string_expr -> BSLASH LPAREN expression RPAREN .)
    LESS            reduce using rule 123 (string_expr -> BSLASH LPAREN expression RPAREN .)
    MORE            reduce using rule 123 (string_expr -> BSLASH LPAREN expression RPAREN .)
    EQUALS          reduce using rule 123 (string_expr -> BSLASH LPAREN expression RPAREN .)
    NEQUALS         reduce using rule 123 (string_expr -> BSLASH LPAREN expression RPAREN .)
    LEQUALS         reduce using rule 123 (string_expr -> BSLASH LPAREN expression RPAREN .)
    MEQUALS         reduce using rule 123 (string_expr -> BSLASH LPAREN expression RPAREN .)
    AND             reduce using rule 123 (string_expr -> BSLASH LPAREN expression RPAREN .)
    OR              reduce using rule 123 (string_expr -> BSLASH LPAREN expression RPAREN .)
    NLINE           reduce using rule 123 (string_expr -> BSLASH LPAREN expression RPAREN .)
    COMMA           reduce using rule 123 (string_expr -> BSLASH LPAREN expression RPAREN .)
    RBRACK          reduce using rule 123 (string_expr -> BSLASH LPAREN expression RPAREN .)
    RPAREN          reduce using rule 123 (string_expr -> BSLASH LPAREN expression RPAREN .)


state 212

    (11) function -> FUNC ID add_function params ARROW variable_primitive init_block end_function .

    NLINE           reduce using rule 11 (function -> FUNC ID add_function params ARROW variable_primitive init_block end_function .)


state 213

    (26) param -> ID add_param COLON variable_primitive .

    COMMA           reduce using rule 26 (param -> ID add_param COLON variable_primitive .)
    RPAREN          reduce using rule 26 (param -> ID add_param COLON variable_primitive .)


state 214

    (57) input -> variable ASSIGN INPUT LPAREN . string RPAREN
    (120) string -> . string_expr
    (121) string -> . string_expr string
    (122) string_expr -> . STRINGLIT add_constant
    (123) string_expr -> . BSLASH LPAREN expression RPAREN

    STRINGLIT       shift and go to state 57
    BSLASH          shift and go to state 58

    string                         shift and go to state 234
    string_expr                    shift and go to state 55

state 215

    (58) display -> PRINT push_operator LPAREN bool_expr . RPAREN execute_builtin_call

    RPAREN          shift and go to state 235


state 216

    (56) while -> WHILE LPAREN save_loop_start bool_expr . set_loop_condition RPAREN block fill_and_reset_loop
    (142) set_loop_condition -> .

    RPAREN          reduce using rule 142 (set_loop_condition -> .)

    set_loop_condition             shift and go to state 236

state 217

    (61) assign -> ID push_variable assign1 bool_expr . execute_priority_0
    (131) execute_priority_0 -> .

    NLINE           reduce using rule 131 (execute_priority_0 -> .)

    execute_priority_0             shift and go to state 237

state 218

    (63) assign -> ID push_variable assign1 error . execute_priority_0
    (131) execute_priority_0 -> .

    NLINE           reduce using rule 131 (execute_priority_0 -> .)

    execute_priority_0             shift and go to state 238

state 219

    (62) assign -> ID push_variable error execute_priority_0 .

    NLINE           reduce using rule 62 (assign -> ID push_variable error execute_priority_0 .)


state 220

    (64) assign1 -> ASSIGN push_operator .

    error           reduce using rule 64 (assign1 -> ASSIGN push_operator .)
    LPAREN          reduce using rule 64 (assign1 -> ASSIGN push_operator .)
    INTLIT          reduce using rule 64 (assign1 -> ASSIGN push_operator .)
    FLOATLIT        reduce using rule 64 (assign1 -> ASSIGN push_operator .)
    BOOLLIT         reduce using rule 64 (assign1 -> ASSIGN push_operator .)
    ID              reduce using rule 64 (assign1 -> ASSIGN push_operator .)
    STRINGLIT       reduce using rule 64 (assign1 -> ASSIGN push_operator .)
    BSLASH          reduce using rule 64 (assign1 -> ASSIGN push_operator .)


state 221

    (60) return -> RETURN push_operator bool_expr set_return .

    NLINE           reduce using rule 60 (return -> RETURN push_operator bool_expr set_return .)


state 222

    (74) if_single -> IF LPAREN bool_expr RPAREN . get_conditional block fill_end_single
    (75) if_multiple -> IF LPAREN bool_expr RPAREN . get_conditional block if_multiple_2
    (137) get_conditional -> .

    LCURLY          reduce using rule 137 (get_conditional -> .)

    get_conditional                shift and go to state 239

state 223

    (79) bool_expr -> relational_exp execute_priority_1 AND push_operator bool_expr .

    NLINE           reduce using rule 79 (bool_expr -> relational_exp execute_priority_1 AND push_operator bool_expr .)
    RPAREN          reduce using rule 79 (bool_expr -> relational_exp execute_priority_1 AND push_operator bool_expr .)


state 224

    (80) bool_expr -> relational_exp execute_priority_1 OR push_operator bool_expr .

    NLINE           reduce using rule 80 (bool_expr -> relational_exp execute_priority_1 OR push_operator bool_expr .)
    RPAREN          reduce using rule 80 (bool_expr -> relational_exp execute_priority_1 OR push_operator bool_expr .)


state 225

    (84) expression -> term execute_priority_3 PLUS push_operator expression .

    LESS            reduce using rule 84 (expression -> term execute_priority_3 PLUS push_operator expression .)
    MORE            reduce using rule 84 (expression -> term execute_priority_3 PLUS push_operator expression .)
    EQUALS          reduce using rule 84 (expression -> term execute_priority_3 PLUS push_operator expression .)
    NEQUALS         reduce using rule 84 (expression -> term execute_priority_3 PLUS push_operator expression .)
    LEQUALS         reduce using rule 84 (expression -> term execute_priority_3 PLUS push_operator expression .)
    MEQUALS         reduce using rule 84 (expression -> term execute_priority_3 PLUS push_operator expression .)
    AND             reduce using rule 84 (expression -> term execute_priority_3 PLUS push_operator expression .)
    OR              reduce using rule 84 (expression -> term execute_priority_3 PLUS push_operator expression .)
    NLINE           reduce using rule 84 (expression -> term execute_priority_3 PLUS push_operator expression .)
    COMMA           reduce using rule 84 (expression -> term execute_priority_3 PLUS push_operator expression .)
    RBRACK          reduce using rule 84 (expression -> term execute_priority_3 PLUS push_operator expression .)
    RPAREN          reduce using rule 84 (expression -> term execute_priority_3 PLUS push_operator expression .)


state 226

    (85) expression -> term execute_priority_3 MINUS push_operator expression .

    LESS            reduce using rule 85 (expression -> term execute_priority_3 MINUS push_operator expression .)
    MORE            reduce using rule 85 (expression -> term execute_priority_3 MINUS push_operator expression .)
    EQUALS          reduce using rule 85 (expression -> term execute_priority_3 MINUS push_operator expression .)
    NEQUALS         reduce using rule 85 (expression -> term execute_priority_3 MINUS push_operator expression .)
    LEQUALS         reduce using rule 85 (expression -> term execute_priority_3 MINUS push_operator expression .)
    MEQUALS         reduce using rule 85 (expression -> term execute_priority_3 MINUS push_operator expression .)
    AND             reduce using rule 85 (expression -> term execute_priority_3 MINUS push_operator expression .)
    OR              reduce using rule 85 (expression -> term execute_priority_3 MINUS push_operator expression .)
    NLINE           reduce using rule 85 (expression -> term execute_priority_3 MINUS push_operator expression .)
    COMMA           reduce using rule 85 (expression -> term execute_priority_3 MINUS push_operator expression .)
    RBRACK          reduce using rule 85 (expression -> term execute_priority_3 MINUS push_operator expression .)
    RPAREN          reduce using rule 85 (expression -> term execute_priority_3 MINUS push_operator expression .)


state 227

    (87) term -> factor execute_priority_4 TIMES push_operator term .

    PLUS            reduce using rule 87 (term -> factor execute_priority_4 TIMES push_operator term .)
    MINUS           reduce using rule 87 (term -> factor execute_priority_4 TIMES push_operator term .)
    LESS            reduce using rule 87 (term -> factor execute_priority_4 TIMES push_operator term .)
    MORE            reduce using rule 87 (term -> factor execute_priority_4 TIMES push_operator term .)
    EQUALS          reduce using rule 87 (term -> factor execute_priority_4 TIMES push_operator term .)
    NEQUALS         reduce using rule 87 (term -> factor execute_priority_4 TIMES push_operator term .)
    LEQUALS         reduce using rule 87 (term -> factor execute_priority_4 TIMES push_operator term .)
    MEQUALS         reduce using rule 87 (term -> factor execute_priority_4 TIMES push_operator term .)
    AND             reduce using rule 87 (term -> factor execute_priority_4 TIMES push_operator term .)
    OR              reduce using rule 87 (term -> factor execute_priority_4 TIMES push_operator term .)
    NLINE           reduce using rule 87 (term -> factor execute_priority_4 TIMES push_operator term .)
    COMMA           reduce using rule 87 (term -> factor execute_priority_4 TIMES push_operator term .)
    RBRACK          reduce using rule 87 (term -> factor execute_priority_4 TIMES push_operator term .)
    RPAREN          reduce using rule 87 (term -> factor execute_priority_4 TIMES push_operator term .)


state 228

    (89) term -> factor execute_priority_4 TIMES error push_operator . term
    (86) term -> . factor execute_priority_4
    (87) term -> . factor execute_priority_4 TIMES push_operator term
    (88) term -> . factor execute_priority_4 DIVIDE push_operator term
    (89) term -> . factor execute_priority_4 TIMES error push_operator term
    (90) term -> . factor execute_priority_4 DIVIDE error push_operator term
    (91) factor -> . constant
    (92) factor -> . LPAREN push_operator bool_expr RPAREN push_operator
    (93) factor -> . LPAREN push_operator error RPAREN push_operator
    (95) constant -> . INTLIT add_constant
    (96) constant -> . FLOATLIT add_constant
    (97) constant -> . BOOLLIT add_constant
    (98) constant -> . string
    (99) constant -> . call
    (100) constant -> . call_array
    (101) constant -> . constant2
    (120) string -> . string_expr
    (121) string -> . string_expr string
    (69) call -> . ID LPAREN call1 RPAREN
    (94) call_array -> . ID LBRACK expression RBRACK
    (102) constant2 -> . ID push_variable
    (103) constant2 -> . ID PERIOD constant2
    (122) string_expr -> . STRINGLIT add_constant
    (123) string_expr -> . BSLASH LPAREN expression RPAREN

    LPAREN          shift and go to state 47
    INTLIT          shift and go to state 48
    FLOATLIT        shift and go to state 49
    BOOLLIT         shift and go to state 50
    ID              shift and go to state 56
    STRINGLIT       shift and go to state 57
    BSLASH          shift and go to state 58

    factor                         shift and go to state 45
    term                           shift and go to state 240
    constant                       shift and go to state 46
    string                         shift and go to state 51
    call                           shift and go to state 52
    call_array                     shift and go to state 53
    constant2                      shift and go to state 54
    string_expr                    shift and go to state 55

state 229

    (88) term -> factor execute_priority_4 DIVIDE push_operator term .

    PLUS            reduce using rule 88 (term -> factor execute_priority_4 DIVIDE push_operator term .)
    MINUS           reduce using rule 88 (term -> factor execute_priority_4 DIVIDE push_operator term .)
    LESS            reduce using rule 88 (term -> factor execute_priority_4 DIVIDE push_operator term .)
    MORE            reduce using rule 88 (term -> factor execute_priority_4 DIVIDE push_operator term .)
    EQUALS          reduce using rule 88 (term -> factor execute_priority_4 DIVIDE push_operator term .)
    NEQUALS         reduce using rule 88 (term -> factor execute_priority_4 DIVIDE push_operator term .)
    LEQUALS         reduce using rule 88 (term -> factor execute_priority_4 DIVIDE push_operator term .)
    MEQUALS         reduce using rule 88 (term -> factor execute_priority_4 DIVIDE push_operator term .)
    AND             reduce using rule 88 (term -> factor execute_priority_4 DIVIDE push_operator term .)
    OR              reduce using rule 88 (term -> factor execute_priority_4 DIVIDE push_operator term .)
    NLINE           reduce using rule 88 (term -> factor execute_priority_4 DIVIDE push_operator term .)
    COMMA           reduce using rule 88 (term -> factor execute_priority_4 DIVIDE push_operator term .)
    RBRACK          reduce using rule 88 (term -> factor execute_priority_4 DIVIDE push_operator term .)
    RPAREN          reduce using rule 88 (term -> factor execute_priority_4 DIVIDE push_operator term .)


state 230

    (90) term -> factor execute_priority_4 DIVIDE error push_operator . term
    (86) term -> . factor execute_priority_4
    (87) term -> . factor execute_priority_4 TIMES push_operator term
    (88) term -> . factor execute_priority_4 DIVIDE push_operator term
    (89) term -> . factor execute_priority_4 TIMES error push_operator term
    (90) term -> . factor execute_priority_4 DIVIDE error push_operator term
    (91) factor -> . constant
    (92) factor -> . LPAREN push_operator bool_expr RPAREN push_operator
    (93) factor -> . LPAREN push_operator error RPAREN push_operator
    (95) constant -> . INTLIT add_constant
    (96) constant -> . FLOATLIT add_constant
    (97) constant -> . BOOLLIT add_constant
    (98) constant -> . string
    (99) constant -> . call
    (100) constant -> . call_array
    (101) constant -> . constant2
    (120) string -> . string_expr
    (121) string -> . string_expr string
    (69) call -> . ID LPAREN call1 RPAREN
    (94) call_array -> . ID LBRACK expression RBRACK
    (102) constant2 -> . ID push_variable
    (103) constant2 -> . ID PERIOD constant2
    (122) string_expr -> . STRINGLIT add_constant
    (123) string_expr -> . BSLASH LPAREN expression RPAREN

    LPAREN          shift and go to state 47
    INTLIT          shift and go to state 48
    FLOATLIT        shift and go to state 49
    BOOLLIT         shift and go to state 50
    ID              shift and go to state 56
    STRINGLIT       shift and go to state 57
    BSLASH          shift and go to state 58

    factor                         shift and go to state 45
    term                           shift and go to state 241
    constant                       shift and go to state 46
    string                         shift and go to state 51
    call                           shift and go to state 52
    call_array                     shift and go to state 53
    constant2                      shift and go to state 54
    string_expr                    shift and go to state 55

state 231

    (92) factor -> LPAREN push_operator bool_expr RPAREN push_operator .

    TIMES           reduce using rule 92 (factor -> LPAREN push_operator bool_expr RPAREN push_operator .)
    DIVIDE          reduce using rule 92 (factor -> LPAREN push_operator bool_expr RPAREN push_operator .)
    PLUS            reduce using rule 92 (factor -> LPAREN push_operator bool_expr RPAREN push_operator .)
    MINUS           reduce using rule 92 (factor -> LPAREN push_operator bool_expr RPAREN push_operator .)
    LESS            reduce using rule 92 (factor -> LPAREN push_operator bool_expr RPAREN push_operator .)
    MORE            reduce using rule 92 (factor -> LPAREN push_operator bool_expr RPAREN push_operator .)
    EQUALS          reduce using rule 92 (factor -> LPAREN push_operator bool_expr RPAREN push_operator .)
    NEQUALS         reduce using rule 92 (factor -> LPAREN push_operator bool_expr RPAREN push_operator .)
    LEQUALS         reduce using rule 92 (factor -> LPAREN push_operator bool_expr RPAREN push_operator .)
    MEQUALS         reduce using rule 92 (factor -> LPAREN push_operator bool_expr RPAREN push_operator .)
    AND             reduce using rule 92 (factor -> LPAREN push_operator bool_expr RPAREN push_operator .)
    OR              reduce using rule 92 (factor -> LPAREN push_operator bool_expr RPAREN push_operator .)
    NLINE           reduce using rule 92 (factor -> LPAREN push_operator bool_expr RPAREN push_operator .)
    COMMA           reduce using rule 92 (factor -> LPAREN push_operator bool_expr RPAREN push_operator .)
    RBRACK          reduce using rule 92 (factor -> LPAREN push_operator bool_expr RPAREN push_operator .)
    RPAREN          reduce using rule 92 (factor -> LPAREN push_operator bool_expr RPAREN push_operator .)


state 232

    (93) factor -> LPAREN push_operator error RPAREN push_operator .

    TIMES           reduce using rule 93 (factor -> LPAREN push_operator error RPAREN push_operator .)
    DIVIDE          reduce using rule 93 (factor -> LPAREN push_operator error RPAREN push_operator .)
    PLUS            reduce using rule 93 (factor -> LPAREN push_operator error RPAREN push_operator .)
    MINUS           reduce using rule 93 (factor -> LPAREN push_operator error RPAREN push_operator .)
    LESS            reduce using rule 93 (factor -> LPAREN push_operator error RPAREN push_operator .)
    MORE            reduce using rule 93 (factor -> LPAREN push_operator error RPAREN push_operator .)
    EQUALS          reduce using rule 93 (factor -> LPAREN push_operator error RPAREN push_operator .)
    NEQUALS         reduce using rule 93 (factor -> LPAREN push_operator error RPAREN push_operator .)
    LEQUALS         reduce using rule 93 (factor -> LPAREN push_operator error RPAREN push_operator .)
    MEQUALS         reduce using rule 93 (factor -> LPAREN push_operator error RPAREN push_operator .)
    AND             reduce using rule 93 (factor -> LPAREN push_operator error RPAREN push_operator .)
    OR              reduce using rule 93 (factor -> LPAREN push_operator error RPAREN push_operator .)
    NLINE           reduce using rule 93 (factor -> LPAREN push_operator error RPAREN push_operator .)
    COMMA           reduce using rule 93 (factor -> LPAREN push_operator error RPAREN push_operator .)
    RBRACK          reduce using rule 93 (factor -> LPAREN push_operator error RPAREN push_operator .)
    RPAREN          reduce using rule 93 (factor -> LPAREN push_operator error RPAREN push_operator .)


state 233

    (71) call1 -> expression COMMA call1 .

    RPAREN          reduce using rule 71 (call1 -> expression COMMA call1 .)


state 234

    (57) input -> variable ASSIGN INPUT LPAREN string . RPAREN

    RPAREN          shift and go to state 242


state 235

    (58) display -> PRINT push_operator LPAREN bool_expr RPAREN . execute_builtin_call
    (132) execute_builtin_call -> .

    NLINE           reduce using rule 132 (execute_builtin_call -> .)

    execute_builtin_call           shift and go to state 243

state 236

    (56) while -> WHILE LPAREN save_loop_start bool_expr set_loop_condition . RPAREN block fill_and_reset_loop

    RPAREN          shift and go to state 244


state 237

    (61) assign -> ID push_variable assign1 bool_expr execute_priority_0 .

    NLINE           reduce using rule 61 (assign -> ID push_variable assign1 bool_expr execute_priority_0 .)


state 238

    (63) assign -> ID push_variable assign1 error execute_priority_0 .

    NLINE           reduce using rule 63 (assign -> ID push_variable assign1 error execute_priority_0 .)


state 239

    (74) if_single -> IF LPAREN bool_expr RPAREN get_conditional . block fill_end_single
    (75) if_multiple -> IF LPAREN bool_expr RPAREN get_conditional . block if_multiple_2
    (43) block -> . LCURLY block1 RCURLY

    LCURLY          shift and go to state 246

    block                          shift and go to state 245

state 240

    (89) term -> factor execute_priority_4 TIMES error push_operator term .

    PLUS            reduce using rule 89 (term -> factor execute_priority_4 TIMES error push_operator term .)
    MINUS           reduce using rule 89 (term -> factor execute_priority_4 TIMES error push_operator term .)
    LESS            reduce using rule 89 (term -> factor execute_priority_4 TIMES error push_operator term .)
    MORE            reduce using rule 89 (term -> factor execute_priority_4 TIMES error push_operator term .)
    EQUALS          reduce using rule 89 (term -> factor execute_priority_4 TIMES error push_operator term .)
    NEQUALS         reduce using rule 89 (term -> factor execute_priority_4 TIMES error push_operator term .)
    LEQUALS         reduce using rule 89 (term -> factor execute_priority_4 TIMES error push_operator term .)
    MEQUALS         reduce using rule 89 (term -> factor execute_priority_4 TIMES error push_operator term .)
    AND             reduce using rule 89 (term -> factor execute_priority_4 TIMES error push_operator term .)
    OR              reduce using rule 89 (term -> factor execute_priority_4 TIMES error push_operator term .)
    NLINE           reduce using rule 89 (term -> factor execute_priority_4 TIMES error push_operator term .)
    COMMA           reduce using rule 89 (term -> factor execute_priority_4 TIMES error push_operator term .)
    RBRACK          reduce using rule 89 (term -> factor execute_priority_4 TIMES error push_operator term .)
    RPAREN          reduce using rule 89 (term -> factor execute_priority_4 TIMES error push_operator term .)


state 241

    (90) term -> factor execute_priority_4 DIVIDE error push_operator term .

    PLUS            reduce using rule 90 (term -> factor execute_priority_4 DIVIDE error push_operator term .)
    MINUS           reduce using rule 90 (term -> factor execute_priority_4 DIVIDE error push_operator term .)
    LESS            reduce using rule 90 (term -> factor execute_priority_4 DIVIDE error push_operator term .)
    MORE            reduce using rule 90 (term -> factor execute_priority_4 DIVIDE error push_operator term .)
    EQUALS          reduce using rule 90 (term -> factor execute_priority_4 DIVIDE error push_operator term .)
    NEQUALS         reduce using rule 90 (term -> factor execute_priority_4 DIVIDE error push_operator term .)
    LEQUALS         reduce using rule 90 (term -> factor execute_priority_4 DIVIDE error push_operator term .)
    MEQUALS         reduce using rule 90 (term -> factor execute_priority_4 DIVIDE error push_operator term .)
    AND             reduce using rule 90 (term -> factor execute_priority_4 DIVIDE error push_operator term .)
    OR              reduce using rule 90 (term -> factor execute_priority_4 DIVIDE error push_operator term .)
    NLINE           reduce using rule 90 (term -> factor execute_priority_4 DIVIDE error push_operator term .)
    COMMA           reduce using rule 90 (term -> factor execute_priority_4 DIVIDE error push_operator term .)
    RBRACK          reduce using rule 90 (term -> factor execute_priority_4 DIVIDE error push_operator term .)
    RPAREN          reduce using rule 90 (term -> factor execute_priority_4 DIVIDE error push_operator term .)


state 242

    (57) input -> variable ASSIGN INPUT LPAREN string RPAREN .

    NLINE           reduce using rule 57 (input -> variable ASSIGN INPUT LPAREN string RPAREN .)


state 243

    (58) display -> PRINT push_operator LPAREN bool_expr RPAREN execute_builtin_call .

    NLINE           reduce using rule 58 (display -> PRINT push_operator LPAREN bool_expr RPAREN execute_builtin_call .)


state 244

    (56) while -> WHILE LPAREN save_loop_start bool_expr set_loop_condition RPAREN . block fill_and_reset_loop
    (43) block -> . LCURLY block1 RCURLY

    LCURLY          shift and go to state 246

    block                          shift and go to state 247

state 245

    (74) if_single -> IF LPAREN bool_expr RPAREN get_conditional block . fill_end_single
    (75) if_multiple -> IF LPAREN bool_expr RPAREN get_conditional block . if_multiple_2
    (140) fill_end_single -> .
    (76) if_multiple_2 -> . fill_and_goto ELSE if_multiple
    (77) if_multiple_2 -> . fill_and_goto ELSE block fill_end
    (138) fill_and_goto -> .

    NLINE           reduce using rule 140 (fill_end_single -> .)
    ELSE            reduce using rule 138 (fill_and_goto -> .)

    fill_end_single                shift and go to state 248
    if_multiple_2                  shift and go to state 249
    fill_and_goto                  shift and go to state 250

state 246

    (43) block -> LCURLY . block1 RCURLY
    (44) block1 -> . block2
    (45) block1 -> . statement block2
    (46) block2 -> . NLINE block1
    (47) block2 -> . NLINE
    (48) statement -> . display
    (49) statement -> . if
    (50) statement -> . while
    (51) statement -> . input
    (52) statement -> . assign
    (53) statement -> . call
    (54) statement -> . return
    (55) statement -> . error
    (58) display -> . PRINT push_operator LPAREN bool_expr RPAREN execute_builtin_call
    (72) if -> . if_single
    (73) if -> . if_multiple
    (56) while -> . WHILE LPAREN save_loop_start bool_expr set_loop_condition RPAREN block fill_and_reset_loop
    (57) input -> . variable ASSIGN INPUT LPAREN string RPAREN
    (61) assign -> . ID push_variable assign1 bool_expr execute_priority_0
    (62) assign -> . ID push_variable error execute_priority_0
    (63) assign -> . ID push_variable assign1 error execute_priority_0
    (69) call -> . ID LPAREN call1 RPAREN
    (59) return -> . RETURN
    (60) return -> . RETURN push_operator bool_expr set_return
    (74) if_single -> . IF LPAREN bool_expr RPAREN get_conditional block fill_end_single
    (75) if_multiple -> . IF LPAREN bool_expr RPAREN get_conditional block if_multiple_2
    (110) variable -> . VAR ID add_var COLON type
    (111) variable -> . VAR ID error type
    (112) variable -> . VAR ID add_var COLON error NLINE

    NLINE           shift and go to state 254
    error           shift and go to state 93
    PRINT           shift and go to state 95
    WHILE           shift and go to state 98
    ID              shift and go to state 99
    RETURN          shift and go to state 100
    IF              shift and go to state 101
    VAR             shift and go to state 11

    block1                         shift and go to state 251
    block2                         shift and go to state 252
    statement                      shift and go to state 253
    display                        shift and go to state 86
    if                             shift and go to state 87
    while                          shift and go to state 88
    input                          shift and go to state 89
    assign                         shift and go to state 90
    call                           shift and go to state 91
    return                         shift and go to state 92
    if_single                      shift and go to state 96
    if_multiple                    shift and go to state 97
    variable                       shift and go to state 255

state 247

    (56) while -> WHILE LPAREN save_loop_start bool_expr set_loop_condition RPAREN block . fill_and_reset_loop
    (143) fill_and_reset_loop -> .

    NLINE           reduce using rule 143 (fill_and_reset_loop -> .)

    fill_and_reset_loop            shift and go to state 256

state 248

    (74) if_single -> IF LPAREN bool_expr RPAREN get_conditional block fill_end_single .

    NLINE           reduce using rule 74 (if_single -> IF LPAREN bool_expr RPAREN get_conditional block fill_end_single .)


state 249

    (75) if_multiple -> IF LPAREN bool_expr RPAREN get_conditional block if_multiple_2 .

    NLINE           reduce using rule 75 (if_multiple -> IF LPAREN bool_expr RPAREN get_conditional block if_multiple_2 .)


state 250

    (76) if_multiple_2 -> fill_and_goto . ELSE if_multiple
    (77) if_multiple_2 -> fill_and_goto . ELSE block fill_end

    ELSE            shift and go to state 257


state 251

    (43) block -> LCURLY block1 . RCURLY

    RCURLY          shift and go to state 258


state 252

    (44) block1 -> block2 .

    RCURLY          reduce using rule 44 (block1 -> block2 .)


state 253

    (45) block1 -> statement . block2
    (46) block2 -> . NLINE block1
    (47) block2 -> . NLINE

    NLINE           shift and go to state 254

    block2                         shift and go to state 259

state 254

    (46) block2 -> NLINE . block1
    (47) block2 -> NLINE .
    (44) block1 -> . block2
    (45) block1 -> . statement block2
    (46) block2 -> . NLINE block1
    (47) block2 -> . NLINE
    (48) statement -> . display
    (49) statement -> . if
    (50) statement -> . while
    (51) statement -> . input
    (52) statement -> . assign
    (53) statement -> . call
    (54) statement -> . return
    (55) statement -> . error
    (58) display -> . PRINT push_operator LPAREN bool_expr RPAREN execute_builtin_call
    (72) if -> . if_single
    (73) if -> . if_multiple
    (56) while -> . WHILE LPAREN save_loop_start bool_expr set_loop_condition RPAREN block fill_and_reset_loop
    (57) input -> . variable ASSIGN INPUT LPAREN string RPAREN
    (61) assign -> . ID push_variable assign1 bool_expr execute_priority_0
    (62) assign -> . ID push_variable error execute_priority_0
    (63) assign -> . ID push_variable assign1 error execute_priority_0
    (69) call -> . ID LPAREN call1 RPAREN
    (59) return -> . RETURN
    (60) return -> . RETURN push_operator bool_expr set_return
    (74) if_single -> . IF LPAREN bool_expr RPAREN get_conditional block fill_end_single
    (75) if_multiple -> . IF LPAREN bool_expr RPAREN get_conditional block if_multiple_2
    (110) variable -> . VAR ID add_var COLON type
    (111) variable -> . VAR ID error type
    (112) variable -> . VAR ID add_var COLON error NLINE

    RCURLY          reduce using rule 47 (block2 -> NLINE .)
    NLINE           shift and go to state 254
    error           shift and go to state 93
    PRINT           shift and go to state 95
    WHILE           shift and go to state 98
    ID              shift and go to state 99
    RETURN          shift and go to state 100
    IF              shift and go to state 101
    VAR             shift and go to state 11

    block1                         shift and go to state 260
    block2                         shift and go to state 252
    statement                      shift and go to state 253
    display                        shift and go to state 86
    if                             shift and go to state 87
    while                          shift and go to state 88
    input                          shift and go to state 89
    assign                         shift and go to state 90
    call                           shift and go to state 91
    return                         shift and go to state 92
    if_single                      shift and go to state 96
    if_multiple                    shift and go to state 97
    variable                       shift and go to state 255

state 255

    (57) input -> variable . ASSIGN INPUT LPAREN string RPAREN

    ASSIGN          shift and go to state 261


state 256

    (56) while -> WHILE LPAREN save_loop_start bool_expr set_loop_condition RPAREN block fill_and_reset_loop .

    NLINE           reduce using rule 56 (while -> WHILE LPAREN save_loop_start bool_expr set_loop_condition RPAREN block fill_and_reset_loop .)


state 257

    (76) if_multiple_2 -> fill_and_goto ELSE . if_multiple
    (77) if_multiple_2 -> fill_and_goto ELSE . block fill_end
    (75) if_multiple -> . IF LPAREN bool_expr RPAREN get_conditional block if_multiple_2
    (43) block -> . LCURLY block1 RCURLY

    IF              shift and go to state 264
    LCURLY          shift and go to state 246

    if_multiple                    shift and go to state 262
    block                          shift and go to state 263

state 258

    (43) block -> LCURLY block1 RCURLY .

    ELSE            reduce using rule 43 (block -> LCURLY block1 RCURLY .)
    NLINE           reduce using rule 43 (block -> LCURLY block1 RCURLY .)


state 259

    (45) block1 -> statement block2 .

    RCURLY          reduce using rule 45 (block1 -> statement block2 .)


state 260

    (46) block2 -> NLINE block1 .

    RCURLY          reduce using rule 46 (block2 -> NLINE block1 .)


state 261

    (57) input -> variable ASSIGN . INPUT LPAREN string RPAREN

    INPUT           shift and go to state 179


state 262

    (76) if_multiple_2 -> fill_and_goto ELSE if_multiple .

    NLINE           reduce using rule 76 (if_multiple_2 -> fill_and_goto ELSE if_multiple .)


state 263

    (77) if_multiple_2 -> fill_and_goto ELSE block . fill_end
    (139) fill_end -> .

    NLINE           reduce using rule 139 (fill_end -> .)

    fill_end                       shift and go to state 265

state 264

    (75) if_multiple -> IF . LPAREN bool_expr RPAREN get_conditional block if_multiple_2

    LPAREN          shift and go to state 266


state 265

    (77) if_multiple_2 -> fill_and_goto ELSE block fill_end .

    NLINE           reduce using rule 77 (if_multiple_2 -> fill_and_goto ELSE block fill_end .)


state 266

    (75) if_multiple -> IF LPAREN . bool_expr RPAREN get_conditional block if_multiple_2
    (78) bool_expr -> . relational_exp execute_priority_1
    (79) bool_expr -> . relational_exp execute_priority_1 AND push_operator bool_expr
    (80) bool_expr -> . relational_exp execute_priority_1 OR push_operator bool_expr
    (81) relational_exp -> . expression execute_priority_2 comp relational_exp
    (82) relational_exp -> . expression execute_priority_2
    (83) expression -> . term execute_priority_3
    (84) expression -> . term execute_priority_3 PLUS push_operator expression
    (85) expression -> . term execute_priority_3 MINUS push_operator expression
    (86) term -> . factor execute_priority_4
    (87) term -> . factor execute_priority_4 TIMES push_operator term
    (88) term -> . factor execute_priority_4 DIVIDE push_operator term
    (89) term -> . factor execute_priority_4 TIMES error push_operator term
    (90) term -> . factor execute_priority_4 DIVIDE error push_operator term
    (91) factor -> . constant
    (92) factor -> . LPAREN push_operator bool_expr RPAREN push_operator
    (93) factor -> . LPAREN push_operator error RPAREN push_operator
    (95) constant -> . INTLIT add_constant
    (96) constant -> . FLOATLIT add_constant
    (97) constant -> . BOOLLIT add_constant
    (98) constant -> . string
    (99) constant -> . call
    (100) constant -> . call_array
    (101) constant -> . constant2
    (120) string -> . string_expr
    (121) string -> . string_expr string
    (69) call -> . ID LPAREN call1 RPAREN
    (94) call_array -> . ID LBRACK expression RBRACK
    (102) constant2 -> . ID push_variable
    (103) constant2 -> . ID PERIOD constant2
    (122) string_expr -> . STRINGLIT add_constant
    (123) string_expr -> . BSLASH LPAREN expression RPAREN

    LPAREN          shift and go to state 47
    INTLIT          shift and go to state 48
    FLOATLIT        shift and go to state 49
    BOOLLIT         shift and go to state 50
    ID              shift and go to state 56
    STRINGLIT       shift and go to state 57
    BSLASH          shift and go to state 58

    bool_expr                      shift and go to state 267
    relational_exp                 shift and go to state 42
    expression                     shift and go to state 43
    term                           shift and go to state 44
    factor                         shift and go to state 45
    constant                       shift and go to state 46
    string                         shift and go to state 51
    call                           shift and go to state 52
    call_array                     shift and go to state 53
    constant2                      shift and go to state 54
    string_expr                    shift and go to state 55

state 267

    (75) if_multiple -> IF LPAREN bool_expr . RPAREN get_conditional block if_multiple_2

    RPAREN          shift and go to state 268


state 268

    (75) if_multiple -> IF LPAREN bool_expr RPAREN . get_conditional block if_multiple_2
    (137) get_conditional -> .

    LCURLY          reduce using rule 137 (get_conditional -> .)

    get_conditional                shift and go to state 269

state 269

    (75) if_multiple -> IF LPAREN bool_expr RPAREN get_conditional . block if_multiple_2
    (43) block -> . LCURLY block1 RCURLY

    LCURLY          shift and go to state 246

    block                          shift and go to state 270

state 270

    (75) if_multiple -> IF LPAREN bool_expr RPAREN get_conditional block . if_multiple_2
    (76) if_multiple_2 -> . fill_and_goto ELSE if_multiple
    (77) if_multiple_2 -> . fill_and_goto ELSE block fill_end
    (138) fill_and_goto -> .

    ELSE            reduce using rule 138 (fill_and_goto -> .)

    if_multiple_2                  shift and go to state 249
    fill_and_goto                  shift and go to state 250
