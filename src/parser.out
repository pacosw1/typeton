Created by PLY (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> repeat_program
Rule 2     repeat_program -> program_options NLINE repeat_program
Rule 3     repeat_program -> <empty>
Rule 4     program_options -> class
Rule 5     program_options -> function
Rule 6     program_options -> declaration
Rule 7     program_options -> <empty>
Rule 8     block -> LCURLY NLINE repeat_block RCURLY
Rule 9     repeat_block -> statement NLINE repeat_block
Rule 10    repeat_block -> <empty>
Rule 11    init_block -> LCURLY NLINE repeat_init_block RCURLY
Rule 12    repeat_init_block -> init_block_content NLINE repeat_init_block
Rule 13    repeat_init_block -> <empty>
Rule 14    init_block_content -> statement
Rule 15    init_block_content -> declaration
Rule 16    class_block -> LCURLY NLINE repeat_class_block RCURLY
Rule 17    repeat_class_block -> class_block_content NLINE repeat_class_block
Rule 18    repeat_class_block -> <empty>
Rule 19    class_block_content -> declaration
Rule 20    class_block_content -> function
Rule 21    params -> LPAREN params_content RPAREN
Rule 22    params_content -> param
Rule 23    params_content -> param COMMA params_content
Rule 24    params_content -> <empty>
Rule 25    param -> ID COLON type
Rule 26    variable -> VAR ID
Rule 27    variable -> VAR ID COLON type
Rule 28    type -> primitive
Rule 29    type -> ID
Rule 30    type -> LBRACK primitive RBRACK
Rule 31    type -> LBRACK ID RBRACK
Rule 32    primitive -> INT
Rule 33    primitive -> FLOAT
Rule 34    primitive -> STRING
Rule 35    primitive -> BOOL
Rule 36    string -> string_expr
Rule 37    string -> string_expr string
Rule 38    string_expr -> STRINGLIT
Rule 39    string_expr -> BSLASH LPAREN expression RPAREN
Rule 40    class -> CLASS ID class_content class_block
Rule 41    class_content -> COLON ID
Rule 42    class_content -> <empty>
Rule 43    function -> FUNC ID params function_content init_block
Rule 44    function_content -> ARROW primitive
Rule 45    function_content -> <empty>
Rule 46    declaration -> variable ASSIGN expression
Rule 47    declaration -> variable ASSIGN array
Rule 48    declaration -> variable
Rule 49    array -> LBRACK repeat_array RBRACK
Rule 50    repeat_array -> expression
Rule 51    repeat_array -> expression COMMA repeat_array
Rule 52    bool_expr -> relational_exp
Rule 53    bool_expr -> relational_exp AND bool_expr
Rule 54    bool_expr -> relational_exp OR bool_expr
Rule 55    relational_exp -> expression comp expression
Rule 56    relational_exp -> TRUE
Rule 57    relational_exp -> FALSE
Rule 58    comp -> LESS
Rule 59    comp -> MORE
Rule 60    comp -> EQUALS
Rule 61    comp -> NEQUALS
Rule 62    comp -> LEQUALS
Rule 63    comp -> MEQUALS
Rule 64    expression -> term
Rule 65    expression -> term PLUS term
Rule 66    expression -> term MINUS term
Rule 67    term -> factor
Rule 68    term -> factor DIVIDE factor
Rule 69    term -> factor TIMES factor
Rule 70    factor -> constant
Rule 71    factor -> COLON LPAREN expression RPAREN
Rule 72    call_array -> ID LBRACK expression RBRACK
Rule 73    constant -> dots
Rule 74    constant -> FLOATLIT
Rule 75    constant -> BOOL
Rule 76    constant -> NUMBER
Rule 77    constant -> string
Rule 78    constant -> call
Rule 79    constant -> call_array
Rule 80    dots -> ID
Rule 81    dots -> repeat_dots
Rule 82    repeat_dots -> ID DOT right_id
Rule 83    right_id -> ID
Rule 84    right_id -> repeat_dots
Rule 85    statement -> display
Rule 86    statement -> if
Rule 87    statement -> while
Rule 88    statement -> input
Rule 89    statement -> assign
Rule 90    statement -> call
Rule 91    statement -> return
Rule 92    while -> WHILE LPAREN bool_expr RPAREN block
Rule 93    input -> variable ASSIGN INPUT LPAREN string RPAREN
Rule 94    display -> PRINT LPAREN expression RPAREN
Rule 95    return -> RETURN
Rule 96    return -> RETURN bool_expr
Rule 97    return -> RETURN expression
Rule 98    assign -> ID some_op expression
Rule 99    some_op -> ASSIGN
Rule 100   some_op -> PASSIGN
Rule 101   some_op -> LASSIGN
Rule 102   some_op -> MASSIGN
Rule 103   some_op -> DASSIGN
Rule 104   call -> ID LPAREN repeat_call RPAREN
Rule 105   repeat_call -> expression
Rule 106   repeat_call -> expression COMMA repeat_call
Rule 107   repeat_call -> <empty>
Rule 108   if -> IF LPAREN bool_expr RPAREN block if_content
Rule 109   if_content -> ELSE if
Rule 110   if_content -> ELSE block
Rule 111   if_content -> <empty>

Terminals, with rules where they appear

AND                  : 53
ARROW                : 44
ASSIGN               : 46 47 93 99
BOOL                 : 35 75
BSLASH               : 39
CLASS                : 40
COLON                : 25 27 41 71
COMMA                : 23 51 106
DASSIGN              : 103
DIVIDE               : 68
DOT                  : 82
ELSE                 : 109 110
EQUALS               : 60
FALSE                : 57
FLOAT                : 33
FLOATLIT             : 74
FUNC                 : 43
ID                   : 25 26 27 29 31 40 41 43 72 80 82 83 98 104
IF                   : 108
INPUT                : 93
INT                  : 32
LASSIGN              : 101
LBRACK               : 30 31 49 72
LCURLY               : 8 11 16
LEQUALS              : 62
LESS                 : 58
LPAREN               : 21 39 71 92 93 94 104 108
MASSIGN              : 102
MEQUALS              : 63
MINUS                : 66
MORE                 : 59
NEQUALS              : 61
NLINE                : 2 8 9 11 12 16 17
NUMBER               : 76
OR                   : 54
PASSIGN              : 100
PLUS                 : 65
PRINT                : 94
RBRACK               : 30 31 49 72
RCURLY               : 8 11 16
RETURN               : 95 96 97
RPAREN               : 21 39 71 92 93 94 104 108
STRING               : 34
STRINGLIT            : 38
TIMES                : 69
TRUE                 : 56
VAR                  : 26 27
WHILE                : 92
error                : 

Nonterminals, with rules where they appear

array                : 47
assign               : 89
block                : 92 108 110
bool_expr            : 53 54 92 96 108
call                 : 78 90
call_array           : 79
class                : 4
class_block          : 40
class_block_content  : 17
class_content        : 40
comp                 : 55
constant             : 70
declaration          : 6 15 19
display              : 85
dots                 : 73
expression           : 39 46 50 51 55 55 71 72 94 97 98 105 106
factor               : 67 68 68 69 69
function             : 5 20
function_content     : 43
if                   : 86 109
if_content           : 108
init_block           : 43
init_block_content   : 12
input                : 88
param                : 22 23
params               : 43
params_content       : 21 23
primitive            : 28 30 44
program              : 0
program_options      : 2
relational_exp       : 52 53 54
repeat_array         : 49 51
repeat_block         : 8 9
repeat_call          : 104 106
repeat_class_block   : 16 17
repeat_dots          : 81 84
repeat_init_block    : 11 12
repeat_program       : 1 2
return               : 91
right_id             : 82
some_op              : 98
statement            : 9 14
string               : 37 77 93
string_expr          : 36 37
term                 : 64 65 65 66 66
type                 : 25 27
variable             : 46 47 48 93
while                : 87


state 0

    (0) S' -> . program
    (1) program -> . repeat_program
    (2) repeat_program -> . program_options NLINE repeat_program
    (3) repeat_program -> .
    (4) program_options -> . class
    (5) program_options -> . function
    (6) program_options -> . declaration
    (7) program_options -> .
    (40) class -> . CLASS ID class_content class_block
    (43) function -> . FUNC ID params function_content init_block
    (46) declaration -> . variable ASSIGN expression
    (47) declaration -> . variable ASSIGN array
    (48) declaration -> . variable
    (26) variable -> . VAR ID
    (27) variable -> . VAR ID COLON type

    $end            reduce using rule 3 (repeat_program -> .)
    NLINE           reduce using rule 7 (program_options -> .)
    CLASS           shift and go to state 7
    FUNC            shift and go to state 8
    VAR             shift and go to state 10

    program                        shift and go to state 1
    repeat_program                 shift and go to state 2
    program_options                shift and go to state 3
    class                          shift and go to state 4
    function                       shift and go to state 5
    declaration                    shift and go to state 6
    variable                       shift and go to state 9

state 1

    (0) S' -> program .



state 2

    (1) program -> repeat_program .

    $end            reduce using rule 1 (program -> repeat_program .)


state 3

    (2) repeat_program -> program_options . NLINE repeat_program

    NLINE           shift and go to state 11


state 4

    (4) program_options -> class .

    NLINE           reduce using rule 4 (program_options -> class .)


state 5

    (5) program_options -> function .

    NLINE           reduce using rule 5 (program_options -> function .)


state 6

    (6) program_options -> declaration .

    NLINE           reduce using rule 6 (program_options -> declaration .)


state 7

    (40) class -> CLASS . ID class_content class_block

    ID              shift and go to state 12


state 8

    (43) function -> FUNC . ID params function_content init_block

    ID              shift and go to state 13


state 9

    (46) declaration -> variable . ASSIGN expression
    (47) declaration -> variable . ASSIGN array
    (48) declaration -> variable .

    ASSIGN          shift and go to state 14
    NLINE           reduce using rule 48 (declaration -> variable .)


state 10

    (26) variable -> VAR . ID
    (27) variable -> VAR . ID COLON type

    ID              shift and go to state 15


state 11

    (2) repeat_program -> program_options NLINE . repeat_program
    (2) repeat_program -> . program_options NLINE repeat_program
    (3) repeat_program -> .
    (4) program_options -> . class
    (5) program_options -> . function
    (6) program_options -> . declaration
    (7) program_options -> .
    (40) class -> . CLASS ID class_content class_block
    (43) function -> . FUNC ID params function_content init_block
    (46) declaration -> . variable ASSIGN expression
    (47) declaration -> . variable ASSIGN array
    (48) declaration -> . variable
    (26) variable -> . VAR ID
    (27) variable -> . VAR ID COLON type

    $end            reduce using rule 3 (repeat_program -> .)
    NLINE           reduce using rule 7 (program_options -> .)
    CLASS           shift and go to state 7
    FUNC            shift and go to state 8
    VAR             shift and go to state 10

    program_options                shift and go to state 3
    repeat_program                 shift and go to state 16
    class                          shift and go to state 4
    function                       shift and go to state 5
    declaration                    shift and go to state 6
    variable                       shift and go to state 9

state 12

    (40) class -> CLASS ID . class_content class_block
    (41) class_content -> . COLON ID
    (42) class_content -> .

    COLON           shift and go to state 18
    LCURLY          reduce using rule 42 (class_content -> .)

    class_content                  shift and go to state 17

state 13

    (43) function -> FUNC ID . params function_content init_block
    (21) params -> . LPAREN params_content RPAREN

    LPAREN          shift and go to state 20

    params                         shift and go to state 19

state 14

    (46) declaration -> variable ASSIGN . expression
    (47) declaration -> variable ASSIGN . array
    (64) expression -> . term
    (65) expression -> . term PLUS term
    (66) expression -> . term MINUS term
    (49) array -> . LBRACK repeat_array RBRACK
    (67) term -> . factor
    (68) term -> . factor DIVIDE factor
    (69) term -> . factor TIMES factor
    (70) factor -> . constant
    (71) factor -> . COLON LPAREN expression RPAREN
    (73) constant -> . dots
    (74) constant -> . FLOATLIT
    (75) constant -> . BOOL
    (76) constant -> . NUMBER
    (77) constant -> . string
    (78) constant -> . call
    (79) constant -> . call_array
    (80) dots -> . ID
    (81) dots -> . repeat_dots
    (36) string -> . string_expr
    (37) string -> . string_expr string
    (104) call -> . ID LPAREN repeat_call RPAREN
    (72) call_array -> . ID LBRACK expression RBRACK
    (82) repeat_dots -> . ID DOT right_id
    (38) string_expr -> . STRINGLIT
    (39) string_expr -> . BSLASH LPAREN expression RPAREN

    LBRACK          shift and go to state 24
    COLON           shift and go to state 27
    FLOATLIT        shift and go to state 29
    BOOL            shift and go to state 30
    NUMBER          shift and go to state 31
    ID              shift and go to state 35
    STRINGLIT       shift and go to state 38
    BSLASH          shift and go to state 39

    expression                     shift and go to state 21
    array                          shift and go to state 22
    term                           shift and go to state 23
    factor                         shift and go to state 25
    constant                       shift and go to state 26
    dots                           shift and go to state 28
    string                         shift and go to state 32
    call                           shift and go to state 33
    call_array                     shift and go to state 34
    repeat_dots                    shift and go to state 36
    string_expr                    shift and go to state 37

state 15

    (26) variable -> VAR ID .
    (27) variable -> VAR ID . COLON type

    ASSIGN          reduce using rule 26 (variable -> VAR ID .)
    NLINE           reduce using rule 26 (variable -> VAR ID .)
    COLON           shift and go to state 40


state 16

    (2) repeat_program -> program_options NLINE repeat_program .

    $end            reduce using rule 2 (repeat_program -> program_options NLINE repeat_program .)


state 17

    (40) class -> CLASS ID class_content . class_block
    (16) class_block -> . LCURLY NLINE repeat_class_block RCURLY

    LCURLY          shift and go to state 42

    class_block                    shift and go to state 41

state 18

    (41) class_content -> COLON . ID

    ID              shift and go to state 43


state 19

    (43) function -> FUNC ID params . function_content init_block
    (44) function_content -> . ARROW primitive
    (45) function_content -> .

    ARROW           shift and go to state 45
    LCURLY          reduce using rule 45 (function_content -> .)

    function_content               shift and go to state 44

state 20

    (21) params -> LPAREN . params_content RPAREN
    (22) params_content -> . param
    (23) params_content -> . param COMMA params_content
    (24) params_content -> .
    (25) param -> . ID COLON type

    RPAREN          reduce using rule 24 (params_content -> .)
    ID              shift and go to state 48

    params_content                 shift and go to state 46
    param                          shift and go to state 47

state 21

    (46) declaration -> variable ASSIGN expression .

    NLINE           reduce using rule 46 (declaration -> variable ASSIGN expression .)


state 22

    (47) declaration -> variable ASSIGN array .

    NLINE           reduce using rule 47 (declaration -> variable ASSIGN array .)


state 23

    (64) expression -> term .
    (65) expression -> term . PLUS term
    (66) expression -> term . MINUS term

    NLINE           reduce using rule 64 (expression -> term .)
    COMMA           reduce using rule 64 (expression -> term .)
    RBRACK          reduce using rule 64 (expression -> term .)
    RPAREN          reduce using rule 64 (expression -> term .)
    LESS            reduce using rule 64 (expression -> term .)
    MORE            reduce using rule 64 (expression -> term .)
    EQUALS          reduce using rule 64 (expression -> term .)
    NEQUALS         reduce using rule 64 (expression -> term .)
    LEQUALS         reduce using rule 64 (expression -> term .)
    MEQUALS         reduce using rule 64 (expression -> term .)
    AND             reduce using rule 64 (expression -> term .)
    OR              reduce using rule 64 (expression -> term .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 24

    (49) array -> LBRACK . repeat_array RBRACK
    (50) repeat_array -> . expression
    (51) repeat_array -> . expression COMMA repeat_array
    (64) expression -> . term
    (65) expression -> . term PLUS term
    (66) expression -> . term MINUS term
    (67) term -> . factor
    (68) term -> . factor DIVIDE factor
    (69) term -> . factor TIMES factor
    (70) factor -> . constant
    (71) factor -> . COLON LPAREN expression RPAREN
    (73) constant -> . dots
    (74) constant -> . FLOATLIT
    (75) constant -> . BOOL
    (76) constant -> . NUMBER
    (77) constant -> . string
    (78) constant -> . call
    (79) constant -> . call_array
    (80) dots -> . ID
    (81) dots -> . repeat_dots
    (36) string -> . string_expr
    (37) string -> . string_expr string
    (104) call -> . ID LPAREN repeat_call RPAREN
    (72) call_array -> . ID LBRACK expression RBRACK
    (82) repeat_dots -> . ID DOT right_id
    (38) string_expr -> . STRINGLIT
    (39) string_expr -> . BSLASH LPAREN expression RPAREN

    COLON           shift and go to state 27
    FLOATLIT        shift and go to state 29
    BOOL            shift and go to state 30
    NUMBER          shift and go to state 31
    ID              shift and go to state 35
    STRINGLIT       shift and go to state 38
    BSLASH          shift and go to state 39

    repeat_array                   shift and go to state 51
    expression                     shift and go to state 52
    term                           shift and go to state 23
    factor                         shift and go to state 25
    constant                       shift and go to state 26
    dots                           shift and go to state 28
    string                         shift and go to state 32
    call                           shift and go to state 33
    call_array                     shift and go to state 34
    repeat_dots                    shift and go to state 36
    string_expr                    shift and go to state 37

state 25

    (67) term -> factor .
    (68) term -> factor . DIVIDE factor
    (69) term -> factor . TIMES factor

    PLUS            reduce using rule 67 (term -> factor .)
    MINUS           reduce using rule 67 (term -> factor .)
    NLINE           reduce using rule 67 (term -> factor .)
    COMMA           reduce using rule 67 (term -> factor .)
    RBRACK          reduce using rule 67 (term -> factor .)
    RPAREN          reduce using rule 67 (term -> factor .)
    LESS            reduce using rule 67 (term -> factor .)
    MORE            reduce using rule 67 (term -> factor .)
    EQUALS          reduce using rule 67 (term -> factor .)
    NEQUALS         reduce using rule 67 (term -> factor .)
    LEQUALS         reduce using rule 67 (term -> factor .)
    MEQUALS         reduce using rule 67 (term -> factor .)
    AND             reduce using rule 67 (term -> factor .)
    OR              reduce using rule 67 (term -> factor .)
    DIVIDE          shift and go to state 53
    TIMES           shift and go to state 54


state 26

    (70) factor -> constant .

    DIVIDE          reduce using rule 70 (factor -> constant .)
    TIMES           reduce using rule 70 (factor -> constant .)
    PLUS            reduce using rule 70 (factor -> constant .)
    MINUS           reduce using rule 70 (factor -> constant .)
    NLINE           reduce using rule 70 (factor -> constant .)
    COMMA           reduce using rule 70 (factor -> constant .)
    RBRACK          reduce using rule 70 (factor -> constant .)
    RPAREN          reduce using rule 70 (factor -> constant .)
    LESS            reduce using rule 70 (factor -> constant .)
    MORE            reduce using rule 70 (factor -> constant .)
    EQUALS          reduce using rule 70 (factor -> constant .)
    NEQUALS         reduce using rule 70 (factor -> constant .)
    LEQUALS         reduce using rule 70 (factor -> constant .)
    MEQUALS         reduce using rule 70 (factor -> constant .)
    AND             reduce using rule 70 (factor -> constant .)
    OR              reduce using rule 70 (factor -> constant .)


state 27

    (71) factor -> COLON . LPAREN expression RPAREN

    LPAREN          shift and go to state 55


state 28

    (73) constant -> dots .

    DIVIDE          reduce using rule 73 (constant -> dots .)
    TIMES           reduce using rule 73 (constant -> dots .)
    PLUS            reduce using rule 73 (constant -> dots .)
    MINUS           reduce using rule 73 (constant -> dots .)
    NLINE           reduce using rule 73 (constant -> dots .)
    COMMA           reduce using rule 73 (constant -> dots .)
    RBRACK          reduce using rule 73 (constant -> dots .)
    RPAREN          reduce using rule 73 (constant -> dots .)
    LESS            reduce using rule 73 (constant -> dots .)
    MORE            reduce using rule 73 (constant -> dots .)
    EQUALS          reduce using rule 73 (constant -> dots .)
    NEQUALS         reduce using rule 73 (constant -> dots .)
    LEQUALS         reduce using rule 73 (constant -> dots .)
    MEQUALS         reduce using rule 73 (constant -> dots .)
    AND             reduce using rule 73 (constant -> dots .)
    OR              reduce using rule 73 (constant -> dots .)


state 29

    (74) constant -> FLOATLIT .

    DIVIDE          reduce using rule 74 (constant -> FLOATLIT .)
    TIMES           reduce using rule 74 (constant -> FLOATLIT .)
    PLUS            reduce using rule 74 (constant -> FLOATLIT .)
    MINUS           reduce using rule 74 (constant -> FLOATLIT .)
    NLINE           reduce using rule 74 (constant -> FLOATLIT .)
    COMMA           reduce using rule 74 (constant -> FLOATLIT .)
    RBRACK          reduce using rule 74 (constant -> FLOATLIT .)
    RPAREN          reduce using rule 74 (constant -> FLOATLIT .)
    LESS            reduce using rule 74 (constant -> FLOATLIT .)
    MORE            reduce using rule 74 (constant -> FLOATLIT .)
    EQUALS          reduce using rule 74 (constant -> FLOATLIT .)
    NEQUALS         reduce using rule 74 (constant -> FLOATLIT .)
    LEQUALS         reduce using rule 74 (constant -> FLOATLIT .)
    MEQUALS         reduce using rule 74 (constant -> FLOATLIT .)
    AND             reduce using rule 74 (constant -> FLOATLIT .)
    OR              reduce using rule 74 (constant -> FLOATLIT .)


state 30

    (75) constant -> BOOL .

    DIVIDE          reduce using rule 75 (constant -> BOOL .)
    TIMES           reduce using rule 75 (constant -> BOOL .)
    PLUS            reduce using rule 75 (constant -> BOOL .)
    MINUS           reduce using rule 75 (constant -> BOOL .)
    NLINE           reduce using rule 75 (constant -> BOOL .)
    COMMA           reduce using rule 75 (constant -> BOOL .)
    RBRACK          reduce using rule 75 (constant -> BOOL .)
    RPAREN          reduce using rule 75 (constant -> BOOL .)
    LESS            reduce using rule 75 (constant -> BOOL .)
    MORE            reduce using rule 75 (constant -> BOOL .)
    EQUALS          reduce using rule 75 (constant -> BOOL .)
    NEQUALS         reduce using rule 75 (constant -> BOOL .)
    LEQUALS         reduce using rule 75 (constant -> BOOL .)
    MEQUALS         reduce using rule 75 (constant -> BOOL .)
    AND             reduce using rule 75 (constant -> BOOL .)
    OR              reduce using rule 75 (constant -> BOOL .)


state 31

    (76) constant -> NUMBER .

    DIVIDE          reduce using rule 76 (constant -> NUMBER .)
    TIMES           reduce using rule 76 (constant -> NUMBER .)
    PLUS            reduce using rule 76 (constant -> NUMBER .)
    MINUS           reduce using rule 76 (constant -> NUMBER .)
    NLINE           reduce using rule 76 (constant -> NUMBER .)
    COMMA           reduce using rule 76 (constant -> NUMBER .)
    RBRACK          reduce using rule 76 (constant -> NUMBER .)
    RPAREN          reduce using rule 76 (constant -> NUMBER .)
    LESS            reduce using rule 76 (constant -> NUMBER .)
    MORE            reduce using rule 76 (constant -> NUMBER .)
    EQUALS          reduce using rule 76 (constant -> NUMBER .)
    NEQUALS         reduce using rule 76 (constant -> NUMBER .)
    LEQUALS         reduce using rule 76 (constant -> NUMBER .)
    MEQUALS         reduce using rule 76 (constant -> NUMBER .)
    AND             reduce using rule 76 (constant -> NUMBER .)
    OR              reduce using rule 76 (constant -> NUMBER .)


state 32

    (77) constant -> string .

    DIVIDE          reduce using rule 77 (constant -> string .)
    TIMES           reduce using rule 77 (constant -> string .)
    PLUS            reduce using rule 77 (constant -> string .)
    MINUS           reduce using rule 77 (constant -> string .)
    NLINE           reduce using rule 77 (constant -> string .)
    COMMA           reduce using rule 77 (constant -> string .)
    RBRACK          reduce using rule 77 (constant -> string .)
    RPAREN          reduce using rule 77 (constant -> string .)
    LESS            reduce using rule 77 (constant -> string .)
    MORE            reduce using rule 77 (constant -> string .)
    EQUALS          reduce using rule 77 (constant -> string .)
    NEQUALS         reduce using rule 77 (constant -> string .)
    LEQUALS         reduce using rule 77 (constant -> string .)
    MEQUALS         reduce using rule 77 (constant -> string .)
    AND             reduce using rule 77 (constant -> string .)
    OR              reduce using rule 77 (constant -> string .)


state 33

    (78) constant -> call .

    DIVIDE          reduce using rule 78 (constant -> call .)
    TIMES           reduce using rule 78 (constant -> call .)
    PLUS            reduce using rule 78 (constant -> call .)
    MINUS           reduce using rule 78 (constant -> call .)
    NLINE           reduce using rule 78 (constant -> call .)
    COMMA           reduce using rule 78 (constant -> call .)
    RBRACK          reduce using rule 78 (constant -> call .)
    RPAREN          reduce using rule 78 (constant -> call .)
    LESS            reduce using rule 78 (constant -> call .)
    MORE            reduce using rule 78 (constant -> call .)
    EQUALS          reduce using rule 78 (constant -> call .)
    NEQUALS         reduce using rule 78 (constant -> call .)
    LEQUALS         reduce using rule 78 (constant -> call .)
    MEQUALS         reduce using rule 78 (constant -> call .)
    AND             reduce using rule 78 (constant -> call .)
    OR              reduce using rule 78 (constant -> call .)


state 34

    (79) constant -> call_array .

    DIVIDE          reduce using rule 79 (constant -> call_array .)
    TIMES           reduce using rule 79 (constant -> call_array .)
    PLUS            reduce using rule 79 (constant -> call_array .)
    MINUS           reduce using rule 79 (constant -> call_array .)
    NLINE           reduce using rule 79 (constant -> call_array .)
    COMMA           reduce using rule 79 (constant -> call_array .)
    RBRACK          reduce using rule 79 (constant -> call_array .)
    RPAREN          reduce using rule 79 (constant -> call_array .)
    LESS            reduce using rule 79 (constant -> call_array .)
    MORE            reduce using rule 79 (constant -> call_array .)
    EQUALS          reduce using rule 79 (constant -> call_array .)
    NEQUALS         reduce using rule 79 (constant -> call_array .)
    LEQUALS         reduce using rule 79 (constant -> call_array .)
    MEQUALS         reduce using rule 79 (constant -> call_array .)
    AND             reduce using rule 79 (constant -> call_array .)
    OR              reduce using rule 79 (constant -> call_array .)


state 35

    (80) dots -> ID .
    (104) call -> ID . LPAREN repeat_call RPAREN
    (72) call_array -> ID . LBRACK expression RBRACK
    (82) repeat_dots -> ID . DOT right_id

    DIVIDE          reduce using rule 80 (dots -> ID .)
    TIMES           reduce using rule 80 (dots -> ID .)
    PLUS            reduce using rule 80 (dots -> ID .)
    MINUS           reduce using rule 80 (dots -> ID .)
    NLINE           reduce using rule 80 (dots -> ID .)
    COMMA           reduce using rule 80 (dots -> ID .)
    RBRACK          reduce using rule 80 (dots -> ID .)
    RPAREN          reduce using rule 80 (dots -> ID .)
    LESS            reduce using rule 80 (dots -> ID .)
    MORE            reduce using rule 80 (dots -> ID .)
    EQUALS          reduce using rule 80 (dots -> ID .)
    NEQUALS         reduce using rule 80 (dots -> ID .)
    LEQUALS         reduce using rule 80 (dots -> ID .)
    MEQUALS         reduce using rule 80 (dots -> ID .)
    AND             reduce using rule 80 (dots -> ID .)
    OR              reduce using rule 80 (dots -> ID .)
    LPAREN          shift and go to state 56
    LBRACK          shift and go to state 57
    DOT             shift and go to state 58


state 36

    (81) dots -> repeat_dots .

    DIVIDE          reduce using rule 81 (dots -> repeat_dots .)
    TIMES           reduce using rule 81 (dots -> repeat_dots .)
    PLUS            reduce using rule 81 (dots -> repeat_dots .)
    MINUS           reduce using rule 81 (dots -> repeat_dots .)
    NLINE           reduce using rule 81 (dots -> repeat_dots .)
    COMMA           reduce using rule 81 (dots -> repeat_dots .)
    RBRACK          reduce using rule 81 (dots -> repeat_dots .)
    RPAREN          reduce using rule 81 (dots -> repeat_dots .)
    LESS            reduce using rule 81 (dots -> repeat_dots .)
    MORE            reduce using rule 81 (dots -> repeat_dots .)
    EQUALS          reduce using rule 81 (dots -> repeat_dots .)
    NEQUALS         reduce using rule 81 (dots -> repeat_dots .)
    LEQUALS         reduce using rule 81 (dots -> repeat_dots .)
    MEQUALS         reduce using rule 81 (dots -> repeat_dots .)
    AND             reduce using rule 81 (dots -> repeat_dots .)
    OR              reduce using rule 81 (dots -> repeat_dots .)


state 37

    (36) string -> string_expr .
    (37) string -> string_expr . string
    (36) string -> . string_expr
    (37) string -> . string_expr string
    (38) string_expr -> . STRINGLIT
    (39) string_expr -> . BSLASH LPAREN expression RPAREN

    DIVIDE          reduce using rule 36 (string -> string_expr .)
    TIMES           reduce using rule 36 (string -> string_expr .)
    PLUS            reduce using rule 36 (string -> string_expr .)
    MINUS           reduce using rule 36 (string -> string_expr .)
    NLINE           reduce using rule 36 (string -> string_expr .)
    COMMA           reduce using rule 36 (string -> string_expr .)
    RBRACK          reduce using rule 36 (string -> string_expr .)
    RPAREN          reduce using rule 36 (string -> string_expr .)
    LESS            reduce using rule 36 (string -> string_expr .)
    MORE            reduce using rule 36 (string -> string_expr .)
    EQUALS          reduce using rule 36 (string -> string_expr .)
    NEQUALS         reduce using rule 36 (string -> string_expr .)
    LEQUALS         reduce using rule 36 (string -> string_expr .)
    MEQUALS         reduce using rule 36 (string -> string_expr .)
    AND             reduce using rule 36 (string -> string_expr .)
    OR              reduce using rule 36 (string -> string_expr .)
    STRINGLIT       shift and go to state 38
    BSLASH          shift and go to state 39

    string_expr                    shift and go to state 37
    string                         shift and go to state 59

state 38

    (38) string_expr -> STRINGLIT .

    STRINGLIT       reduce using rule 38 (string_expr -> STRINGLIT .)
    BSLASH          reduce using rule 38 (string_expr -> STRINGLIT .)
    DIVIDE          reduce using rule 38 (string_expr -> STRINGLIT .)
    TIMES           reduce using rule 38 (string_expr -> STRINGLIT .)
    PLUS            reduce using rule 38 (string_expr -> STRINGLIT .)
    MINUS           reduce using rule 38 (string_expr -> STRINGLIT .)
    NLINE           reduce using rule 38 (string_expr -> STRINGLIT .)
    COMMA           reduce using rule 38 (string_expr -> STRINGLIT .)
    RBRACK          reduce using rule 38 (string_expr -> STRINGLIT .)
    RPAREN          reduce using rule 38 (string_expr -> STRINGLIT .)
    LESS            reduce using rule 38 (string_expr -> STRINGLIT .)
    MORE            reduce using rule 38 (string_expr -> STRINGLIT .)
    EQUALS          reduce using rule 38 (string_expr -> STRINGLIT .)
    NEQUALS         reduce using rule 38 (string_expr -> STRINGLIT .)
    LEQUALS         reduce using rule 38 (string_expr -> STRINGLIT .)
    MEQUALS         reduce using rule 38 (string_expr -> STRINGLIT .)
    AND             reduce using rule 38 (string_expr -> STRINGLIT .)
    OR              reduce using rule 38 (string_expr -> STRINGLIT .)


state 39

    (39) string_expr -> BSLASH . LPAREN expression RPAREN

    LPAREN          shift and go to state 60


state 40

    (27) variable -> VAR ID COLON . type
    (28) type -> . primitive
    (29) type -> . ID
    (30) type -> . LBRACK primitive RBRACK
    (31) type -> . LBRACK ID RBRACK
    (32) primitive -> . INT
    (33) primitive -> . FLOAT
    (34) primitive -> . STRING
    (35) primitive -> . BOOL

    ID              shift and go to state 61
    LBRACK          shift and go to state 64
    INT             shift and go to state 65
    FLOAT           shift and go to state 66
    STRING          shift and go to state 67
    BOOL            shift and go to state 68

    type                           shift and go to state 62
    primitive                      shift and go to state 63

state 41

    (40) class -> CLASS ID class_content class_block .

    NLINE           reduce using rule 40 (class -> CLASS ID class_content class_block .)


state 42

    (16) class_block -> LCURLY . NLINE repeat_class_block RCURLY

    NLINE           shift and go to state 69


state 43

    (41) class_content -> COLON ID .

    LCURLY          reduce using rule 41 (class_content -> COLON ID .)


state 44

    (43) function -> FUNC ID params function_content . init_block
    (11) init_block -> . LCURLY NLINE repeat_init_block RCURLY

    LCURLY          shift and go to state 71

    init_block                     shift and go to state 70

state 45

    (44) function_content -> ARROW . primitive
    (32) primitive -> . INT
    (33) primitive -> . FLOAT
    (34) primitive -> . STRING
    (35) primitive -> . BOOL

    INT             shift and go to state 65
    FLOAT           shift and go to state 66
    STRING          shift and go to state 67
    BOOL            shift and go to state 68

    primitive                      shift and go to state 72

state 46

    (21) params -> LPAREN params_content . RPAREN

    RPAREN          shift and go to state 73


state 47

    (22) params_content -> param .
    (23) params_content -> param . COMMA params_content

    RPAREN          reduce using rule 22 (params_content -> param .)
    COMMA           shift and go to state 74


state 48

    (25) param -> ID . COLON type

    COLON           shift and go to state 75


state 49

    (65) expression -> term PLUS . term
    (67) term -> . factor
    (68) term -> . factor DIVIDE factor
    (69) term -> . factor TIMES factor
    (70) factor -> . constant
    (71) factor -> . COLON LPAREN expression RPAREN
    (73) constant -> . dots
    (74) constant -> . FLOATLIT
    (75) constant -> . BOOL
    (76) constant -> . NUMBER
    (77) constant -> . string
    (78) constant -> . call
    (79) constant -> . call_array
    (80) dots -> . ID
    (81) dots -> . repeat_dots
    (36) string -> . string_expr
    (37) string -> . string_expr string
    (104) call -> . ID LPAREN repeat_call RPAREN
    (72) call_array -> . ID LBRACK expression RBRACK
    (82) repeat_dots -> . ID DOT right_id
    (38) string_expr -> . STRINGLIT
    (39) string_expr -> . BSLASH LPAREN expression RPAREN

    COLON           shift and go to state 27
    FLOATLIT        shift and go to state 29
    BOOL            shift and go to state 30
    NUMBER          shift and go to state 31
    ID              shift and go to state 35
    STRINGLIT       shift and go to state 38
    BSLASH          shift and go to state 39

    term                           shift and go to state 76
    factor                         shift and go to state 25
    constant                       shift and go to state 26
    dots                           shift and go to state 28
    string                         shift and go to state 32
    call                           shift and go to state 33
    call_array                     shift and go to state 34
    repeat_dots                    shift and go to state 36
    string_expr                    shift and go to state 37

state 50

    (66) expression -> term MINUS . term
    (67) term -> . factor
    (68) term -> . factor DIVIDE factor
    (69) term -> . factor TIMES factor
    (70) factor -> . constant
    (71) factor -> . COLON LPAREN expression RPAREN
    (73) constant -> . dots
    (74) constant -> . FLOATLIT
    (75) constant -> . BOOL
    (76) constant -> . NUMBER
    (77) constant -> . string
    (78) constant -> . call
    (79) constant -> . call_array
    (80) dots -> . ID
    (81) dots -> . repeat_dots
    (36) string -> . string_expr
    (37) string -> . string_expr string
    (104) call -> . ID LPAREN repeat_call RPAREN
    (72) call_array -> . ID LBRACK expression RBRACK
    (82) repeat_dots -> . ID DOT right_id
    (38) string_expr -> . STRINGLIT
    (39) string_expr -> . BSLASH LPAREN expression RPAREN

    COLON           shift and go to state 27
    FLOATLIT        shift and go to state 29
    BOOL            shift and go to state 30
    NUMBER          shift and go to state 31
    ID              shift and go to state 35
    STRINGLIT       shift and go to state 38
    BSLASH          shift and go to state 39

    term                           shift and go to state 77
    factor                         shift and go to state 25
    constant                       shift and go to state 26
    dots                           shift and go to state 28
    string                         shift and go to state 32
    call                           shift and go to state 33
    call_array                     shift and go to state 34
    repeat_dots                    shift and go to state 36
    string_expr                    shift and go to state 37

state 51

    (49) array -> LBRACK repeat_array . RBRACK

    RBRACK          shift and go to state 78


state 52

    (50) repeat_array -> expression .
    (51) repeat_array -> expression . COMMA repeat_array

    RBRACK          reduce using rule 50 (repeat_array -> expression .)
    COMMA           shift and go to state 79


state 53

    (68) term -> factor DIVIDE . factor
    (70) factor -> . constant
    (71) factor -> . COLON LPAREN expression RPAREN
    (73) constant -> . dots
    (74) constant -> . FLOATLIT
    (75) constant -> . BOOL
    (76) constant -> . NUMBER
    (77) constant -> . string
    (78) constant -> . call
    (79) constant -> . call_array
    (80) dots -> . ID
    (81) dots -> . repeat_dots
    (36) string -> . string_expr
    (37) string -> . string_expr string
    (104) call -> . ID LPAREN repeat_call RPAREN
    (72) call_array -> . ID LBRACK expression RBRACK
    (82) repeat_dots -> . ID DOT right_id
    (38) string_expr -> . STRINGLIT
    (39) string_expr -> . BSLASH LPAREN expression RPAREN

    COLON           shift and go to state 27
    FLOATLIT        shift and go to state 29
    BOOL            shift and go to state 30
    NUMBER          shift and go to state 31
    ID              shift and go to state 35
    STRINGLIT       shift and go to state 38
    BSLASH          shift and go to state 39

    factor                         shift and go to state 80
    constant                       shift and go to state 26
    dots                           shift and go to state 28
    string                         shift and go to state 32
    call                           shift and go to state 33
    call_array                     shift and go to state 34
    repeat_dots                    shift and go to state 36
    string_expr                    shift and go to state 37

state 54

    (69) term -> factor TIMES . factor
    (70) factor -> . constant
    (71) factor -> . COLON LPAREN expression RPAREN
    (73) constant -> . dots
    (74) constant -> . FLOATLIT
    (75) constant -> . BOOL
    (76) constant -> . NUMBER
    (77) constant -> . string
    (78) constant -> . call
    (79) constant -> . call_array
    (80) dots -> . ID
    (81) dots -> . repeat_dots
    (36) string -> . string_expr
    (37) string -> . string_expr string
    (104) call -> . ID LPAREN repeat_call RPAREN
    (72) call_array -> . ID LBRACK expression RBRACK
    (82) repeat_dots -> . ID DOT right_id
    (38) string_expr -> . STRINGLIT
    (39) string_expr -> . BSLASH LPAREN expression RPAREN

    COLON           shift and go to state 27
    FLOATLIT        shift and go to state 29
    BOOL            shift and go to state 30
    NUMBER          shift and go to state 31
    ID              shift and go to state 35
    STRINGLIT       shift and go to state 38
    BSLASH          shift and go to state 39

    factor                         shift and go to state 81
    constant                       shift and go to state 26
    dots                           shift and go to state 28
    string                         shift and go to state 32
    call                           shift and go to state 33
    call_array                     shift and go to state 34
    repeat_dots                    shift and go to state 36
    string_expr                    shift and go to state 37

state 55

    (71) factor -> COLON LPAREN . expression RPAREN
    (64) expression -> . term
    (65) expression -> . term PLUS term
    (66) expression -> . term MINUS term
    (67) term -> . factor
    (68) term -> . factor DIVIDE factor
    (69) term -> . factor TIMES factor
    (70) factor -> . constant
    (71) factor -> . COLON LPAREN expression RPAREN
    (73) constant -> . dots
    (74) constant -> . FLOATLIT
    (75) constant -> . BOOL
    (76) constant -> . NUMBER
    (77) constant -> . string
    (78) constant -> . call
    (79) constant -> . call_array
    (80) dots -> . ID
    (81) dots -> . repeat_dots
    (36) string -> . string_expr
    (37) string -> . string_expr string
    (104) call -> . ID LPAREN repeat_call RPAREN
    (72) call_array -> . ID LBRACK expression RBRACK
    (82) repeat_dots -> . ID DOT right_id
    (38) string_expr -> . STRINGLIT
    (39) string_expr -> . BSLASH LPAREN expression RPAREN

    COLON           shift and go to state 27
    FLOATLIT        shift and go to state 29
    BOOL            shift and go to state 30
    NUMBER          shift and go to state 31
    ID              shift and go to state 35
    STRINGLIT       shift and go to state 38
    BSLASH          shift and go to state 39

    expression                     shift and go to state 82
    term                           shift and go to state 23
    factor                         shift and go to state 25
    constant                       shift and go to state 26
    dots                           shift and go to state 28
    string                         shift and go to state 32
    call                           shift and go to state 33
    call_array                     shift and go to state 34
    repeat_dots                    shift and go to state 36
    string_expr                    shift and go to state 37

state 56

    (104) call -> ID LPAREN . repeat_call RPAREN
    (105) repeat_call -> . expression
    (106) repeat_call -> . expression COMMA repeat_call
    (107) repeat_call -> .
    (64) expression -> . term
    (65) expression -> . term PLUS term
    (66) expression -> . term MINUS term
    (67) term -> . factor
    (68) term -> . factor DIVIDE factor
    (69) term -> . factor TIMES factor
    (70) factor -> . constant
    (71) factor -> . COLON LPAREN expression RPAREN
    (73) constant -> . dots
    (74) constant -> . FLOATLIT
    (75) constant -> . BOOL
    (76) constant -> . NUMBER
    (77) constant -> . string
    (78) constant -> . call
    (79) constant -> . call_array
    (80) dots -> . ID
    (81) dots -> . repeat_dots
    (36) string -> . string_expr
    (37) string -> . string_expr string
    (104) call -> . ID LPAREN repeat_call RPAREN
    (72) call_array -> . ID LBRACK expression RBRACK
    (82) repeat_dots -> . ID DOT right_id
    (38) string_expr -> . STRINGLIT
    (39) string_expr -> . BSLASH LPAREN expression RPAREN

    RPAREN          reduce using rule 107 (repeat_call -> .)
    COLON           shift and go to state 27
    FLOATLIT        shift and go to state 29
    BOOL            shift and go to state 30
    NUMBER          shift and go to state 31
    ID              shift and go to state 35
    STRINGLIT       shift and go to state 38
    BSLASH          shift and go to state 39

    repeat_call                    shift and go to state 83
    expression                     shift and go to state 84
    term                           shift and go to state 23
    factor                         shift and go to state 25
    constant                       shift and go to state 26
    dots                           shift and go to state 28
    string                         shift and go to state 32
    call                           shift and go to state 33
    call_array                     shift and go to state 34
    repeat_dots                    shift and go to state 36
    string_expr                    shift and go to state 37

state 57

    (72) call_array -> ID LBRACK . expression RBRACK
    (64) expression -> . term
    (65) expression -> . term PLUS term
    (66) expression -> . term MINUS term
    (67) term -> . factor
    (68) term -> . factor DIVIDE factor
    (69) term -> . factor TIMES factor
    (70) factor -> . constant
    (71) factor -> . COLON LPAREN expression RPAREN
    (73) constant -> . dots
    (74) constant -> . FLOATLIT
    (75) constant -> . BOOL
    (76) constant -> . NUMBER
    (77) constant -> . string
    (78) constant -> . call
    (79) constant -> . call_array
    (80) dots -> . ID
    (81) dots -> . repeat_dots
    (36) string -> . string_expr
    (37) string -> . string_expr string
    (104) call -> . ID LPAREN repeat_call RPAREN
    (72) call_array -> . ID LBRACK expression RBRACK
    (82) repeat_dots -> . ID DOT right_id
    (38) string_expr -> . STRINGLIT
    (39) string_expr -> . BSLASH LPAREN expression RPAREN

    COLON           shift and go to state 27
    FLOATLIT        shift and go to state 29
    BOOL            shift and go to state 30
    NUMBER          shift and go to state 31
    ID              shift and go to state 35
    STRINGLIT       shift and go to state 38
    BSLASH          shift and go to state 39

    expression                     shift and go to state 85
    term                           shift and go to state 23
    factor                         shift and go to state 25
    constant                       shift and go to state 26
    dots                           shift and go to state 28
    string                         shift and go to state 32
    call                           shift and go to state 33
    call_array                     shift and go to state 34
    repeat_dots                    shift and go to state 36
    string_expr                    shift and go to state 37

state 58

    (82) repeat_dots -> ID DOT . right_id
    (83) right_id -> . ID
    (84) right_id -> . repeat_dots
    (82) repeat_dots -> . ID DOT right_id

    ID              shift and go to state 86

    right_id                       shift and go to state 87
    repeat_dots                    shift and go to state 88

state 59

    (37) string -> string_expr string .

    DIVIDE          reduce using rule 37 (string -> string_expr string .)
    TIMES           reduce using rule 37 (string -> string_expr string .)
    PLUS            reduce using rule 37 (string -> string_expr string .)
    MINUS           reduce using rule 37 (string -> string_expr string .)
    NLINE           reduce using rule 37 (string -> string_expr string .)
    COMMA           reduce using rule 37 (string -> string_expr string .)
    RBRACK          reduce using rule 37 (string -> string_expr string .)
    RPAREN          reduce using rule 37 (string -> string_expr string .)
    LESS            reduce using rule 37 (string -> string_expr string .)
    MORE            reduce using rule 37 (string -> string_expr string .)
    EQUALS          reduce using rule 37 (string -> string_expr string .)
    NEQUALS         reduce using rule 37 (string -> string_expr string .)
    LEQUALS         reduce using rule 37 (string -> string_expr string .)
    MEQUALS         reduce using rule 37 (string -> string_expr string .)
    AND             reduce using rule 37 (string -> string_expr string .)
    OR              reduce using rule 37 (string -> string_expr string .)


state 60

    (39) string_expr -> BSLASH LPAREN . expression RPAREN
    (64) expression -> . term
    (65) expression -> . term PLUS term
    (66) expression -> . term MINUS term
    (67) term -> . factor
    (68) term -> . factor DIVIDE factor
    (69) term -> . factor TIMES factor
    (70) factor -> . constant
    (71) factor -> . COLON LPAREN expression RPAREN
    (73) constant -> . dots
    (74) constant -> . FLOATLIT
    (75) constant -> . BOOL
    (76) constant -> . NUMBER
    (77) constant -> . string
    (78) constant -> . call
    (79) constant -> . call_array
    (80) dots -> . ID
    (81) dots -> . repeat_dots
    (36) string -> . string_expr
    (37) string -> . string_expr string
    (104) call -> . ID LPAREN repeat_call RPAREN
    (72) call_array -> . ID LBRACK expression RBRACK
    (82) repeat_dots -> . ID DOT right_id
    (38) string_expr -> . STRINGLIT
    (39) string_expr -> . BSLASH LPAREN expression RPAREN

    COLON           shift and go to state 27
    FLOATLIT        shift and go to state 29
    BOOL            shift and go to state 30
    NUMBER          shift and go to state 31
    ID              shift and go to state 35
    STRINGLIT       shift and go to state 38
    BSLASH          shift and go to state 39

    expression                     shift and go to state 89
    term                           shift and go to state 23
    factor                         shift and go to state 25
    constant                       shift and go to state 26
    dots                           shift and go to state 28
    string                         shift and go to state 32
    call                           shift and go to state 33
    call_array                     shift and go to state 34
    repeat_dots                    shift and go to state 36
    string_expr                    shift and go to state 37

state 61

    (29) type -> ID .

    ASSIGN          reduce using rule 29 (type -> ID .)
    NLINE           reduce using rule 29 (type -> ID .)
    COMMA           reduce using rule 29 (type -> ID .)
    RPAREN          reduce using rule 29 (type -> ID .)


state 62

    (27) variable -> VAR ID COLON type .

    ASSIGN          reduce using rule 27 (variable -> VAR ID COLON type .)
    NLINE           reduce using rule 27 (variable -> VAR ID COLON type .)


state 63

    (28) type -> primitive .

    ASSIGN          reduce using rule 28 (type -> primitive .)
    NLINE           reduce using rule 28 (type -> primitive .)
    COMMA           reduce using rule 28 (type -> primitive .)
    RPAREN          reduce using rule 28 (type -> primitive .)


state 64

    (30) type -> LBRACK . primitive RBRACK
    (31) type -> LBRACK . ID RBRACK
    (32) primitive -> . INT
    (33) primitive -> . FLOAT
    (34) primitive -> . STRING
    (35) primitive -> . BOOL

    ID              shift and go to state 91
    INT             shift and go to state 65
    FLOAT           shift and go to state 66
    STRING          shift and go to state 67
    BOOL            shift and go to state 68

    primitive                      shift and go to state 90

state 65

    (32) primitive -> INT .

    ASSIGN          reduce using rule 32 (primitive -> INT .)
    NLINE           reduce using rule 32 (primitive -> INT .)
    LCURLY          reduce using rule 32 (primitive -> INT .)
    RBRACK          reduce using rule 32 (primitive -> INT .)
    COMMA           reduce using rule 32 (primitive -> INT .)
    RPAREN          reduce using rule 32 (primitive -> INT .)


state 66

    (33) primitive -> FLOAT .

    ASSIGN          reduce using rule 33 (primitive -> FLOAT .)
    NLINE           reduce using rule 33 (primitive -> FLOAT .)
    LCURLY          reduce using rule 33 (primitive -> FLOAT .)
    RBRACK          reduce using rule 33 (primitive -> FLOAT .)
    COMMA           reduce using rule 33 (primitive -> FLOAT .)
    RPAREN          reduce using rule 33 (primitive -> FLOAT .)


state 67

    (34) primitive -> STRING .

    ASSIGN          reduce using rule 34 (primitive -> STRING .)
    NLINE           reduce using rule 34 (primitive -> STRING .)
    LCURLY          reduce using rule 34 (primitive -> STRING .)
    RBRACK          reduce using rule 34 (primitive -> STRING .)
    COMMA           reduce using rule 34 (primitive -> STRING .)
    RPAREN          reduce using rule 34 (primitive -> STRING .)


state 68

    (35) primitive -> BOOL .

    ASSIGN          reduce using rule 35 (primitive -> BOOL .)
    NLINE           reduce using rule 35 (primitive -> BOOL .)
    LCURLY          reduce using rule 35 (primitive -> BOOL .)
    RBRACK          reduce using rule 35 (primitive -> BOOL .)
    COMMA           reduce using rule 35 (primitive -> BOOL .)
    RPAREN          reduce using rule 35 (primitive -> BOOL .)


state 69

    (16) class_block -> LCURLY NLINE . repeat_class_block RCURLY
    (17) repeat_class_block -> . class_block_content NLINE repeat_class_block
    (18) repeat_class_block -> .
    (19) class_block_content -> . declaration
    (20) class_block_content -> . function
    (46) declaration -> . variable ASSIGN expression
    (47) declaration -> . variable ASSIGN array
    (48) declaration -> . variable
    (43) function -> . FUNC ID params function_content init_block
    (26) variable -> . VAR ID
    (27) variable -> . VAR ID COLON type

    RCURLY          reduce using rule 18 (repeat_class_block -> .)
    FUNC            shift and go to state 8
    VAR             shift and go to state 10

    repeat_class_block             shift and go to state 92
    class_block_content            shift and go to state 93
    declaration                    shift and go to state 94
    function                       shift and go to state 95
    variable                       shift and go to state 9

state 70

    (43) function -> FUNC ID params function_content init_block .

    NLINE           reduce using rule 43 (function -> FUNC ID params function_content init_block .)


state 71

    (11) init_block -> LCURLY . NLINE repeat_init_block RCURLY

    NLINE           shift and go to state 96


state 72

    (44) function_content -> ARROW primitive .

    LCURLY          reduce using rule 44 (function_content -> ARROW primitive .)


state 73

    (21) params -> LPAREN params_content RPAREN .

    ARROW           reduce using rule 21 (params -> LPAREN params_content RPAREN .)
    LCURLY          reduce using rule 21 (params -> LPAREN params_content RPAREN .)


state 74

    (23) params_content -> param COMMA . params_content
    (22) params_content -> . param
    (23) params_content -> . param COMMA params_content
    (24) params_content -> .
    (25) param -> . ID COLON type

    RPAREN          reduce using rule 24 (params_content -> .)
    ID              shift and go to state 48

    param                          shift and go to state 47
    params_content                 shift and go to state 97

state 75

    (25) param -> ID COLON . type
    (28) type -> . primitive
    (29) type -> . ID
    (30) type -> . LBRACK primitive RBRACK
    (31) type -> . LBRACK ID RBRACK
    (32) primitive -> . INT
    (33) primitive -> . FLOAT
    (34) primitive -> . STRING
    (35) primitive -> . BOOL

    ID              shift and go to state 61
    LBRACK          shift and go to state 64
    INT             shift and go to state 65
    FLOAT           shift and go to state 66
    STRING          shift and go to state 67
    BOOL            shift and go to state 68

    type                           shift and go to state 98
    primitive                      shift and go to state 63

state 76

    (65) expression -> term PLUS term .

    NLINE           reduce using rule 65 (expression -> term PLUS term .)
    COMMA           reduce using rule 65 (expression -> term PLUS term .)
    RBRACK          reduce using rule 65 (expression -> term PLUS term .)
    RPAREN          reduce using rule 65 (expression -> term PLUS term .)
    LESS            reduce using rule 65 (expression -> term PLUS term .)
    MORE            reduce using rule 65 (expression -> term PLUS term .)
    EQUALS          reduce using rule 65 (expression -> term PLUS term .)
    NEQUALS         reduce using rule 65 (expression -> term PLUS term .)
    LEQUALS         reduce using rule 65 (expression -> term PLUS term .)
    MEQUALS         reduce using rule 65 (expression -> term PLUS term .)
    AND             reduce using rule 65 (expression -> term PLUS term .)
    OR              reduce using rule 65 (expression -> term PLUS term .)


state 77

    (66) expression -> term MINUS term .

    NLINE           reduce using rule 66 (expression -> term MINUS term .)
    COMMA           reduce using rule 66 (expression -> term MINUS term .)
    RBRACK          reduce using rule 66 (expression -> term MINUS term .)
    RPAREN          reduce using rule 66 (expression -> term MINUS term .)
    LESS            reduce using rule 66 (expression -> term MINUS term .)
    MORE            reduce using rule 66 (expression -> term MINUS term .)
    EQUALS          reduce using rule 66 (expression -> term MINUS term .)
    NEQUALS         reduce using rule 66 (expression -> term MINUS term .)
    LEQUALS         reduce using rule 66 (expression -> term MINUS term .)
    MEQUALS         reduce using rule 66 (expression -> term MINUS term .)
    AND             reduce using rule 66 (expression -> term MINUS term .)
    OR              reduce using rule 66 (expression -> term MINUS term .)


state 78

    (49) array -> LBRACK repeat_array RBRACK .

    NLINE           reduce using rule 49 (array -> LBRACK repeat_array RBRACK .)


state 79

    (51) repeat_array -> expression COMMA . repeat_array
    (50) repeat_array -> . expression
    (51) repeat_array -> . expression COMMA repeat_array
    (64) expression -> . term
    (65) expression -> . term PLUS term
    (66) expression -> . term MINUS term
    (67) term -> . factor
    (68) term -> . factor DIVIDE factor
    (69) term -> . factor TIMES factor
    (70) factor -> . constant
    (71) factor -> . COLON LPAREN expression RPAREN
    (73) constant -> . dots
    (74) constant -> . FLOATLIT
    (75) constant -> . BOOL
    (76) constant -> . NUMBER
    (77) constant -> . string
    (78) constant -> . call
    (79) constant -> . call_array
    (80) dots -> . ID
    (81) dots -> . repeat_dots
    (36) string -> . string_expr
    (37) string -> . string_expr string
    (104) call -> . ID LPAREN repeat_call RPAREN
    (72) call_array -> . ID LBRACK expression RBRACK
    (82) repeat_dots -> . ID DOT right_id
    (38) string_expr -> . STRINGLIT
    (39) string_expr -> . BSLASH LPAREN expression RPAREN

    COLON           shift and go to state 27
    FLOATLIT        shift and go to state 29
    BOOL            shift and go to state 30
    NUMBER          shift and go to state 31
    ID              shift and go to state 35
    STRINGLIT       shift and go to state 38
    BSLASH          shift and go to state 39

    expression                     shift and go to state 52
    repeat_array                   shift and go to state 99
    term                           shift and go to state 23
    factor                         shift and go to state 25
    constant                       shift and go to state 26
    dots                           shift and go to state 28
    string                         shift and go to state 32
    call                           shift and go to state 33
    call_array                     shift and go to state 34
    repeat_dots                    shift and go to state 36
    string_expr                    shift and go to state 37

state 80

    (68) term -> factor DIVIDE factor .

    PLUS            reduce using rule 68 (term -> factor DIVIDE factor .)
    MINUS           reduce using rule 68 (term -> factor DIVIDE factor .)
    NLINE           reduce using rule 68 (term -> factor DIVIDE factor .)
    COMMA           reduce using rule 68 (term -> factor DIVIDE factor .)
    RBRACK          reduce using rule 68 (term -> factor DIVIDE factor .)
    RPAREN          reduce using rule 68 (term -> factor DIVIDE factor .)
    LESS            reduce using rule 68 (term -> factor DIVIDE factor .)
    MORE            reduce using rule 68 (term -> factor DIVIDE factor .)
    EQUALS          reduce using rule 68 (term -> factor DIVIDE factor .)
    NEQUALS         reduce using rule 68 (term -> factor DIVIDE factor .)
    LEQUALS         reduce using rule 68 (term -> factor DIVIDE factor .)
    MEQUALS         reduce using rule 68 (term -> factor DIVIDE factor .)
    AND             reduce using rule 68 (term -> factor DIVIDE factor .)
    OR              reduce using rule 68 (term -> factor DIVIDE factor .)


state 81

    (69) term -> factor TIMES factor .

    PLUS            reduce using rule 69 (term -> factor TIMES factor .)
    MINUS           reduce using rule 69 (term -> factor TIMES factor .)
    NLINE           reduce using rule 69 (term -> factor TIMES factor .)
    COMMA           reduce using rule 69 (term -> factor TIMES factor .)
    RBRACK          reduce using rule 69 (term -> factor TIMES factor .)
    RPAREN          reduce using rule 69 (term -> factor TIMES factor .)
    LESS            reduce using rule 69 (term -> factor TIMES factor .)
    MORE            reduce using rule 69 (term -> factor TIMES factor .)
    EQUALS          reduce using rule 69 (term -> factor TIMES factor .)
    NEQUALS         reduce using rule 69 (term -> factor TIMES factor .)
    LEQUALS         reduce using rule 69 (term -> factor TIMES factor .)
    MEQUALS         reduce using rule 69 (term -> factor TIMES factor .)
    AND             reduce using rule 69 (term -> factor TIMES factor .)
    OR              reduce using rule 69 (term -> factor TIMES factor .)


state 82

    (71) factor -> COLON LPAREN expression . RPAREN

    RPAREN          shift and go to state 100


state 83

    (104) call -> ID LPAREN repeat_call . RPAREN

    RPAREN          shift and go to state 101


state 84

    (105) repeat_call -> expression .
    (106) repeat_call -> expression . COMMA repeat_call

    RPAREN          reduce using rule 105 (repeat_call -> expression .)
    COMMA           shift and go to state 102


state 85

    (72) call_array -> ID LBRACK expression . RBRACK

    RBRACK          shift and go to state 103


state 86

    (83) right_id -> ID .
    (82) repeat_dots -> ID . DOT right_id

    DIVIDE          reduce using rule 83 (right_id -> ID .)
    TIMES           reduce using rule 83 (right_id -> ID .)
    PLUS            reduce using rule 83 (right_id -> ID .)
    MINUS           reduce using rule 83 (right_id -> ID .)
    NLINE           reduce using rule 83 (right_id -> ID .)
    COMMA           reduce using rule 83 (right_id -> ID .)
    RBRACK          reduce using rule 83 (right_id -> ID .)
    RPAREN          reduce using rule 83 (right_id -> ID .)
    LESS            reduce using rule 83 (right_id -> ID .)
    MORE            reduce using rule 83 (right_id -> ID .)
    EQUALS          reduce using rule 83 (right_id -> ID .)
    NEQUALS         reduce using rule 83 (right_id -> ID .)
    LEQUALS         reduce using rule 83 (right_id -> ID .)
    MEQUALS         reduce using rule 83 (right_id -> ID .)
    AND             reduce using rule 83 (right_id -> ID .)
    OR              reduce using rule 83 (right_id -> ID .)
    DOT             shift and go to state 58


state 87

    (82) repeat_dots -> ID DOT right_id .

    DIVIDE          reduce using rule 82 (repeat_dots -> ID DOT right_id .)
    TIMES           reduce using rule 82 (repeat_dots -> ID DOT right_id .)
    PLUS            reduce using rule 82 (repeat_dots -> ID DOT right_id .)
    MINUS           reduce using rule 82 (repeat_dots -> ID DOT right_id .)
    NLINE           reduce using rule 82 (repeat_dots -> ID DOT right_id .)
    COMMA           reduce using rule 82 (repeat_dots -> ID DOT right_id .)
    RBRACK          reduce using rule 82 (repeat_dots -> ID DOT right_id .)
    RPAREN          reduce using rule 82 (repeat_dots -> ID DOT right_id .)
    LESS            reduce using rule 82 (repeat_dots -> ID DOT right_id .)
    MORE            reduce using rule 82 (repeat_dots -> ID DOT right_id .)
    EQUALS          reduce using rule 82 (repeat_dots -> ID DOT right_id .)
    NEQUALS         reduce using rule 82 (repeat_dots -> ID DOT right_id .)
    LEQUALS         reduce using rule 82 (repeat_dots -> ID DOT right_id .)
    MEQUALS         reduce using rule 82 (repeat_dots -> ID DOT right_id .)
    AND             reduce using rule 82 (repeat_dots -> ID DOT right_id .)
    OR              reduce using rule 82 (repeat_dots -> ID DOT right_id .)


state 88

    (84) right_id -> repeat_dots .

    DIVIDE          reduce using rule 84 (right_id -> repeat_dots .)
    TIMES           reduce using rule 84 (right_id -> repeat_dots .)
    PLUS            reduce using rule 84 (right_id -> repeat_dots .)
    MINUS           reduce using rule 84 (right_id -> repeat_dots .)
    NLINE           reduce using rule 84 (right_id -> repeat_dots .)
    COMMA           reduce using rule 84 (right_id -> repeat_dots .)
    RBRACK          reduce using rule 84 (right_id -> repeat_dots .)
    RPAREN          reduce using rule 84 (right_id -> repeat_dots .)
    LESS            reduce using rule 84 (right_id -> repeat_dots .)
    MORE            reduce using rule 84 (right_id -> repeat_dots .)
    EQUALS          reduce using rule 84 (right_id -> repeat_dots .)
    NEQUALS         reduce using rule 84 (right_id -> repeat_dots .)
    LEQUALS         reduce using rule 84 (right_id -> repeat_dots .)
    MEQUALS         reduce using rule 84 (right_id -> repeat_dots .)
    AND             reduce using rule 84 (right_id -> repeat_dots .)
    OR              reduce using rule 84 (right_id -> repeat_dots .)


state 89

    (39) string_expr -> BSLASH LPAREN expression . RPAREN

    RPAREN          shift and go to state 104


state 90

    (30) type -> LBRACK primitive . RBRACK

    RBRACK          shift and go to state 105


state 91

    (31) type -> LBRACK ID . RBRACK

    RBRACK          shift and go to state 106


state 92

    (16) class_block -> LCURLY NLINE repeat_class_block . RCURLY

    RCURLY          shift and go to state 107


state 93

    (17) repeat_class_block -> class_block_content . NLINE repeat_class_block

    NLINE           shift and go to state 108


state 94

    (19) class_block_content -> declaration .

    NLINE           reduce using rule 19 (class_block_content -> declaration .)


state 95

    (20) class_block_content -> function .

    NLINE           reduce using rule 20 (class_block_content -> function .)


state 96

    (11) init_block -> LCURLY NLINE . repeat_init_block RCURLY
    (12) repeat_init_block -> . init_block_content NLINE repeat_init_block
    (13) repeat_init_block -> .
    (14) init_block_content -> . statement
    (15) init_block_content -> . declaration
    (85) statement -> . display
    (86) statement -> . if
    (87) statement -> . while
    (88) statement -> . input
    (89) statement -> . assign
    (90) statement -> . call
    (91) statement -> . return
    (46) declaration -> . variable ASSIGN expression
    (47) declaration -> . variable ASSIGN array
    (48) declaration -> . variable
    (94) display -> . PRINT LPAREN expression RPAREN
    (108) if -> . IF LPAREN bool_expr RPAREN block if_content
    (92) while -> . WHILE LPAREN bool_expr RPAREN block
    (93) input -> . variable ASSIGN INPUT LPAREN string RPAREN
    (98) assign -> . ID some_op expression
    (104) call -> . ID LPAREN repeat_call RPAREN
    (95) return -> . RETURN
    (96) return -> . RETURN bool_expr
    (97) return -> . RETURN expression
    (26) variable -> . VAR ID
    (27) variable -> . VAR ID COLON type

    RCURLY          reduce using rule 13 (repeat_init_block -> .)
    PRINT           shift and go to state 121
    IF              shift and go to state 122
    WHILE           shift and go to state 123
    ID              shift and go to state 124
    RETURN          shift and go to state 125
    VAR             shift and go to state 10

    repeat_init_block              shift and go to state 109
    init_block_content             shift and go to state 110
    statement                      shift and go to state 111
    declaration                    shift and go to state 112
    display                        shift and go to state 113
    if                             shift and go to state 114
    while                          shift and go to state 115
    input                          shift and go to state 116
    assign                         shift and go to state 117
    call                           shift and go to state 118
    return                         shift and go to state 119
    variable                       shift and go to state 120

state 97

    (23) params_content -> param COMMA params_content .

    RPAREN          reduce using rule 23 (params_content -> param COMMA params_content .)


state 98

    (25) param -> ID COLON type .

    COMMA           reduce using rule 25 (param -> ID COLON type .)
    RPAREN          reduce using rule 25 (param -> ID COLON type .)


state 99

    (51) repeat_array -> expression COMMA repeat_array .

    RBRACK          reduce using rule 51 (repeat_array -> expression COMMA repeat_array .)


state 100

    (71) factor -> COLON LPAREN expression RPAREN .

    DIVIDE          reduce using rule 71 (factor -> COLON LPAREN expression RPAREN .)
    TIMES           reduce using rule 71 (factor -> COLON LPAREN expression RPAREN .)
    PLUS            reduce using rule 71 (factor -> COLON LPAREN expression RPAREN .)
    MINUS           reduce using rule 71 (factor -> COLON LPAREN expression RPAREN .)
    NLINE           reduce using rule 71 (factor -> COLON LPAREN expression RPAREN .)
    COMMA           reduce using rule 71 (factor -> COLON LPAREN expression RPAREN .)
    RBRACK          reduce using rule 71 (factor -> COLON LPAREN expression RPAREN .)
    RPAREN          reduce using rule 71 (factor -> COLON LPAREN expression RPAREN .)
    LESS            reduce using rule 71 (factor -> COLON LPAREN expression RPAREN .)
    MORE            reduce using rule 71 (factor -> COLON LPAREN expression RPAREN .)
    EQUALS          reduce using rule 71 (factor -> COLON LPAREN expression RPAREN .)
    NEQUALS         reduce using rule 71 (factor -> COLON LPAREN expression RPAREN .)
    LEQUALS         reduce using rule 71 (factor -> COLON LPAREN expression RPAREN .)
    MEQUALS         reduce using rule 71 (factor -> COLON LPAREN expression RPAREN .)
    AND             reduce using rule 71 (factor -> COLON LPAREN expression RPAREN .)
    OR              reduce using rule 71 (factor -> COLON LPAREN expression RPAREN .)


state 101

    (104) call -> ID LPAREN repeat_call RPAREN .

    DIVIDE          reduce using rule 104 (call -> ID LPAREN repeat_call RPAREN .)
    TIMES           reduce using rule 104 (call -> ID LPAREN repeat_call RPAREN .)
    PLUS            reduce using rule 104 (call -> ID LPAREN repeat_call RPAREN .)
    MINUS           reduce using rule 104 (call -> ID LPAREN repeat_call RPAREN .)
    NLINE           reduce using rule 104 (call -> ID LPAREN repeat_call RPAREN .)
    COMMA           reduce using rule 104 (call -> ID LPAREN repeat_call RPAREN .)
    RBRACK          reduce using rule 104 (call -> ID LPAREN repeat_call RPAREN .)
    RPAREN          reduce using rule 104 (call -> ID LPAREN repeat_call RPAREN .)
    LESS            reduce using rule 104 (call -> ID LPAREN repeat_call RPAREN .)
    MORE            reduce using rule 104 (call -> ID LPAREN repeat_call RPAREN .)
    EQUALS          reduce using rule 104 (call -> ID LPAREN repeat_call RPAREN .)
    NEQUALS         reduce using rule 104 (call -> ID LPAREN repeat_call RPAREN .)
    LEQUALS         reduce using rule 104 (call -> ID LPAREN repeat_call RPAREN .)
    MEQUALS         reduce using rule 104 (call -> ID LPAREN repeat_call RPAREN .)
    AND             reduce using rule 104 (call -> ID LPAREN repeat_call RPAREN .)
    OR              reduce using rule 104 (call -> ID LPAREN repeat_call RPAREN .)


state 102

    (106) repeat_call -> expression COMMA . repeat_call
    (105) repeat_call -> . expression
    (106) repeat_call -> . expression COMMA repeat_call
    (107) repeat_call -> .
    (64) expression -> . term
    (65) expression -> . term PLUS term
    (66) expression -> . term MINUS term
    (67) term -> . factor
    (68) term -> . factor DIVIDE factor
    (69) term -> . factor TIMES factor
    (70) factor -> . constant
    (71) factor -> . COLON LPAREN expression RPAREN
    (73) constant -> . dots
    (74) constant -> . FLOATLIT
    (75) constant -> . BOOL
    (76) constant -> . NUMBER
    (77) constant -> . string
    (78) constant -> . call
    (79) constant -> . call_array
    (80) dots -> . ID
    (81) dots -> . repeat_dots
    (36) string -> . string_expr
    (37) string -> . string_expr string
    (104) call -> . ID LPAREN repeat_call RPAREN
    (72) call_array -> . ID LBRACK expression RBRACK
    (82) repeat_dots -> . ID DOT right_id
    (38) string_expr -> . STRINGLIT
    (39) string_expr -> . BSLASH LPAREN expression RPAREN

    RPAREN          reduce using rule 107 (repeat_call -> .)
    COLON           shift and go to state 27
    FLOATLIT        shift and go to state 29
    BOOL            shift and go to state 30
    NUMBER          shift and go to state 31
    ID              shift and go to state 35
    STRINGLIT       shift and go to state 38
    BSLASH          shift and go to state 39

    expression                     shift and go to state 84
    repeat_call                    shift and go to state 126
    term                           shift and go to state 23
    factor                         shift and go to state 25
    constant                       shift and go to state 26
    dots                           shift and go to state 28
    string                         shift and go to state 32
    call                           shift and go to state 33
    call_array                     shift and go to state 34
    repeat_dots                    shift and go to state 36
    string_expr                    shift and go to state 37

state 103

    (72) call_array -> ID LBRACK expression RBRACK .

    DIVIDE          reduce using rule 72 (call_array -> ID LBRACK expression RBRACK .)
    TIMES           reduce using rule 72 (call_array -> ID LBRACK expression RBRACK .)
    PLUS            reduce using rule 72 (call_array -> ID LBRACK expression RBRACK .)
    MINUS           reduce using rule 72 (call_array -> ID LBRACK expression RBRACK .)
    NLINE           reduce using rule 72 (call_array -> ID LBRACK expression RBRACK .)
    COMMA           reduce using rule 72 (call_array -> ID LBRACK expression RBRACK .)
    RBRACK          reduce using rule 72 (call_array -> ID LBRACK expression RBRACK .)
    RPAREN          reduce using rule 72 (call_array -> ID LBRACK expression RBRACK .)
    LESS            reduce using rule 72 (call_array -> ID LBRACK expression RBRACK .)
    MORE            reduce using rule 72 (call_array -> ID LBRACK expression RBRACK .)
    EQUALS          reduce using rule 72 (call_array -> ID LBRACK expression RBRACK .)
    NEQUALS         reduce using rule 72 (call_array -> ID LBRACK expression RBRACK .)
    LEQUALS         reduce using rule 72 (call_array -> ID LBRACK expression RBRACK .)
    MEQUALS         reduce using rule 72 (call_array -> ID LBRACK expression RBRACK .)
    AND             reduce using rule 72 (call_array -> ID LBRACK expression RBRACK .)
    OR              reduce using rule 72 (call_array -> ID LBRACK expression RBRACK .)


state 104

    (39) string_expr -> BSLASH LPAREN expression RPAREN .

    STRINGLIT       reduce using rule 39 (string_expr -> BSLASH LPAREN expression RPAREN .)
    BSLASH          reduce using rule 39 (string_expr -> BSLASH LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 39 (string_expr -> BSLASH LPAREN expression RPAREN .)
    TIMES           reduce using rule 39 (string_expr -> BSLASH LPAREN expression RPAREN .)
    PLUS            reduce using rule 39 (string_expr -> BSLASH LPAREN expression RPAREN .)
    MINUS           reduce using rule 39 (string_expr -> BSLASH LPAREN expression RPAREN .)
    NLINE           reduce using rule 39 (string_expr -> BSLASH LPAREN expression RPAREN .)
    COMMA           reduce using rule 39 (string_expr -> BSLASH LPAREN expression RPAREN .)
    RBRACK          reduce using rule 39 (string_expr -> BSLASH LPAREN expression RPAREN .)
    RPAREN          reduce using rule 39 (string_expr -> BSLASH LPAREN expression RPAREN .)
    LESS            reduce using rule 39 (string_expr -> BSLASH LPAREN expression RPAREN .)
    MORE            reduce using rule 39 (string_expr -> BSLASH LPAREN expression RPAREN .)
    EQUALS          reduce using rule 39 (string_expr -> BSLASH LPAREN expression RPAREN .)
    NEQUALS         reduce using rule 39 (string_expr -> BSLASH LPAREN expression RPAREN .)
    LEQUALS         reduce using rule 39 (string_expr -> BSLASH LPAREN expression RPAREN .)
    MEQUALS         reduce using rule 39 (string_expr -> BSLASH LPAREN expression RPAREN .)
    AND             reduce using rule 39 (string_expr -> BSLASH LPAREN expression RPAREN .)
    OR              reduce using rule 39 (string_expr -> BSLASH LPAREN expression RPAREN .)


state 105

    (30) type -> LBRACK primitive RBRACK .

    ASSIGN          reduce using rule 30 (type -> LBRACK primitive RBRACK .)
    NLINE           reduce using rule 30 (type -> LBRACK primitive RBRACK .)
    COMMA           reduce using rule 30 (type -> LBRACK primitive RBRACK .)
    RPAREN          reduce using rule 30 (type -> LBRACK primitive RBRACK .)


state 106

    (31) type -> LBRACK ID RBRACK .

    ASSIGN          reduce using rule 31 (type -> LBRACK ID RBRACK .)
    NLINE           reduce using rule 31 (type -> LBRACK ID RBRACK .)
    COMMA           reduce using rule 31 (type -> LBRACK ID RBRACK .)
    RPAREN          reduce using rule 31 (type -> LBRACK ID RBRACK .)


state 107

    (16) class_block -> LCURLY NLINE repeat_class_block RCURLY .

    NLINE           reduce using rule 16 (class_block -> LCURLY NLINE repeat_class_block RCURLY .)


state 108

    (17) repeat_class_block -> class_block_content NLINE . repeat_class_block
    (17) repeat_class_block -> . class_block_content NLINE repeat_class_block
    (18) repeat_class_block -> .
    (19) class_block_content -> . declaration
    (20) class_block_content -> . function
    (46) declaration -> . variable ASSIGN expression
    (47) declaration -> . variable ASSIGN array
    (48) declaration -> . variable
    (43) function -> . FUNC ID params function_content init_block
    (26) variable -> . VAR ID
    (27) variable -> . VAR ID COLON type

    RCURLY          reduce using rule 18 (repeat_class_block -> .)
    FUNC            shift and go to state 8
    VAR             shift and go to state 10

    class_block_content            shift and go to state 93
    repeat_class_block             shift and go to state 127
    declaration                    shift and go to state 94
    function                       shift and go to state 95
    variable                       shift and go to state 9

state 109

    (11) init_block -> LCURLY NLINE repeat_init_block . RCURLY

    RCURLY          shift and go to state 128


state 110

    (12) repeat_init_block -> init_block_content . NLINE repeat_init_block

    NLINE           shift and go to state 129


state 111

    (14) init_block_content -> statement .

    NLINE           reduce using rule 14 (init_block_content -> statement .)


state 112

    (15) init_block_content -> declaration .

    NLINE           reduce using rule 15 (init_block_content -> declaration .)


state 113

    (85) statement -> display .

    NLINE           reduce using rule 85 (statement -> display .)


state 114

    (86) statement -> if .

    NLINE           reduce using rule 86 (statement -> if .)


state 115

    (87) statement -> while .

    NLINE           reduce using rule 87 (statement -> while .)


state 116

    (88) statement -> input .

    NLINE           reduce using rule 88 (statement -> input .)


state 117

    (89) statement -> assign .

    NLINE           reduce using rule 89 (statement -> assign .)


state 118

    (90) statement -> call .

    NLINE           reduce using rule 90 (statement -> call .)


state 119

    (91) statement -> return .

    NLINE           reduce using rule 91 (statement -> return .)


state 120

    (46) declaration -> variable . ASSIGN expression
    (47) declaration -> variable . ASSIGN array
    (48) declaration -> variable .
    (93) input -> variable . ASSIGN INPUT LPAREN string RPAREN

    ASSIGN          shift and go to state 130
    NLINE           reduce using rule 48 (declaration -> variable .)


state 121

    (94) display -> PRINT . LPAREN expression RPAREN

    LPAREN          shift and go to state 131


state 122

    (108) if -> IF . LPAREN bool_expr RPAREN block if_content

    LPAREN          shift and go to state 132


state 123

    (92) while -> WHILE . LPAREN bool_expr RPAREN block

    LPAREN          shift and go to state 133


state 124

    (98) assign -> ID . some_op expression
    (104) call -> ID . LPAREN repeat_call RPAREN
    (99) some_op -> . ASSIGN
    (100) some_op -> . PASSIGN
    (101) some_op -> . LASSIGN
    (102) some_op -> . MASSIGN
    (103) some_op -> . DASSIGN

    LPAREN          shift and go to state 56
    ASSIGN          shift and go to state 135
    PASSIGN         shift and go to state 136
    LASSIGN         shift and go to state 137
    MASSIGN         shift and go to state 138
    DASSIGN         shift and go to state 139

    some_op                        shift and go to state 134

state 125

    (95) return -> RETURN .
    (96) return -> RETURN . bool_expr
    (97) return -> RETURN . expression
    (52) bool_expr -> . relational_exp
    (53) bool_expr -> . relational_exp AND bool_expr
    (54) bool_expr -> . relational_exp OR bool_expr
    (64) expression -> . term
    (65) expression -> . term PLUS term
    (66) expression -> . term MINUS term
    (55) relational_exp -> . expression comp expression
    (56) relational_exp -> . TRUE
    (57) relational_exp -> . FALSE
    (67) term -> . factor
    (68) term -> . factor DIVIDE factor
    (69) term -> . factor TIMES factor
    (70) factor -> . constant
    (71) factor -> . COLON LPAREN expression RPAREN
    (73) constant -> . dots
    (74) constant -> . FLOATLIT
    (75) constant -> . BOOL
    (76) constant -> . NUMBER
    (77) constant -> . string
    (78) constant -> . call
    (79) constant -> . call_array
    (80) dots -> . ID
    (81) dots -> . repeat_dots
    (36) string -> . string_expr
    (37) string -> . string_expr string
    (104) call -> . ID LPAREN repeat_call RPAREN
    (72) call_array -> . ID LBRACK expression RBRACK
    (82) repeat_dots -> . ID DOT right_id
    (38) string_expr -> . STRINGLIT
    (39) string_expr -> . BSLASH LPAREN expression RPAREN

    NLINE           reduce using rule 95 (return -> RETURN .)
    TRUE            shift and go to state 143
    FALSE           shift and go to state 144
    COLON           shift and go to state 27
    FLOATLIT        shift and go to state 29
    BOOL            shift and go to state 30
    NUMBER          shift and go to state 31
    ID              shift and go to state 35
    STRINGLIT       shift and go to state 38
    BSLASH          shift and go to state 39

    bool_expr                      shift and go to state 140
    expression                     shift and go to state 141
    relational_exp                 shift and go to state 142
    term                           shift and go to state 23
    factor                         shift and go to state 25
    constant                       shift and go to state 26
    dots                           shift and go to state 28
    string                         shift and go to state 32
    call                           shift and go to state 33
    call_array                     shift and go to state 34
    repeat_dots                    shift and go to state 36
    string_expr                    shift and go to state 37

state 126

    (106) repeat_call -> expression COMMA repeat_call .

    RPAREN          reduce using rule 106 (repeat_call -> expression COMMA repeat_call .)


state 127

    (17) repeat_class_block -> class_block_content NLINE repeat_class_block .

    RCURLY          reduce using rule 17 (repeat_class_block -> class_block_content NLINE repeat_class_block .)


state 128

    (11) init_block -> LCURLY NLINE repeat_init_block RCURLY .

    NLINE           reduce using rule 11 (init_block -> LCURLY NLINE repeat_init_block RCURLY .)


state 129

    (12) repeat_init_block -> init_block_content NLINE . repeat_init_block
    (12) repeat_init_block -> . init_block_content NLINE repeat_init_block
    (13) repeat_init_block -> .
    (14) init_block_content -> . statement
    (15) init_block_content -> . declaration
    (85) statement -> . display
    (86) statement -> . if
    (87) statement -> . while
    (88) statement -> . input
    (89) statement -> . assign
    (90) statement -> . call
    (91) statement -> . return
    (46) declaration -> . variable ASSIGN expression
    (47) declaration -> . variable ASSIGN array
    (48) declaration -> . variable
    (94) display -> . PRINT LPAREN expression RPAREN
    (108) if -> . IF LPAREN bool_expr RPAREN block if_content
    (92) while -> . WHILE LPAREN bool_expr RPAREN block
    (93) input -> . variable ASSIGN INPUT LPAREN string RPAREN
    (98) assign -> . ID some_op expression
    (104) call -> . ID LPAREN repeat_call RPAREN
    (95) return -> . RETURN
    (96) return -> . RETURN bool_expr
    (97) return -> . RETURN expression
    (26) variable -> . VAR ID
    (27) variable -> . VAR ID COLON type

    RCURLY          reduce using rule 13 (repeat_init_block -> .)
    PRINT           shift and go to state 121
    IF              shift and go to state 122
    WHILE           shift and go to state 123
    ID              shift and go to state 124
    RETURN          shift and go to state 125
    VAR             shift and go to state 10

    init_block_content             shift and go to state 110
    repeat_init_block              shift and go to state 145
    statement                      shift and go to state 111
    declaration                    shift and go to state 112
    display                        shift and go to state 113
    if                             shift and go to state 114
    while                          shift and go to state 115
    input                          shift and go to state 116
    assign                         shift and go to state 117
    call                           shift and go to state 118
    return                         shift and go to state 119
    variable                       shift and go to state 120

state 130

    (46) declaration -> variable ASSIGN . expression
    (47) declaration -> variable ASSIGN . array
    (93) input -> variable ASSIGN . INPUT LPAREN string RPAREN
    (64) expression -> . term
    (65) expression -> . term PLUS term
    (66) expression -> . term MINUS term
    (49) array -> . LBRACK repeat_array RBRACK
    (67) term -> . factor
    (68) term -> . factor DIVIDE factor
    (69) term -> . factor TIMES factor
    (70) factor -> . constant
    (71) factor -> . COLON LPAREN expression RPAREN
    (73) constant -> . dots
    (74) constant -> . FLOATLIT
    (75) constant -> . BOOL
    (76) constant -> . NUMBER
    (77) constant -> . string
    (78) constant -> . call
    (79) constant -> . call_array
    (80) dots -> . ID
    (81) dots -> . repeat_dots
    (36) string -> . string_expr
    (37) string -> . string_expr string
    (104) call -> . ID LPAREN repeat_call RPAREN
    (72) call_array -> . ID LBRACK expression RBRACK
    (82) repeat_dots -> . ID DOT right_id
    (38) string_expr -> . STRINGLIT
    (39) string_expr -> . BSLASH LPAREN expression RPAREN

    INPUT           shift and go to state 146
    LBRACK          shift and go to state 24
    COLON           shift and go to state 27
    FLOATLIT        shift and go to state 29
    BOOL            shift and go to state 30
    NUMBER          shift and go to state 31
    ID              shift and go to state 35
    STRINGLIT       shift and go to state 38
    BSLASH          shift and go to state 39

    expression                     shift and go to state 21
    array                          shift and go to state 22
    string                         shift and go to state 32
    term                           shift and go to state 23
    factor                         shift and go to state 25
    constant                       shift and go to state 26
    dots                           shift and go to state 28
    call                           shift and go to state 33
    call_array                     shift and go to state 34
    repeat_dots                    shift and go to state 36
    string_expr                    shift and go to state 37

state 131

    (94) display -> PRINT LPAREN . expression RPAREN
    (64) expression -> . term
    (65) expression -> . term PLUS term
    (66) expression -> . term MINUS term
    (67) term -> . factor
    (68) term -> . factor DIVIDE factor
    (69) term -> . factor TIMES factor
    (70) factor -> . constant
    (71) factor -> . COLON LPAREN expression RPAREN
    (73) constant -> . dots
    (74) constant -> . FLOATLIT
    (75) constant -> . BOOL
    (76) constant -> . NUMBER
    (77) constant -> . string
    (78) constant -> . call
    (79) constant -> . call_array
    (80) dots -> . ID
    (81) dots -> . repeat_dots
    (36) string -> . string_expr
    (37) string -> . string_expr string
    (104) call -> . ID LPAREN repeat_call RPAREN
    (72) call_array -> . ID LBRACK expression RBRACK
    (82) repeat_dots -> . ID DOT right_id
    (38) string_expr -> . STRINGLIT
    (39) string_expr -> . BSLASH LPAREN expression RPAREN

    COLON           shift and go to state 27
    FLOATLIT        shift and go to state 29
    BOOL            shift and go to state 30
    NUMBER          shift and go to state 31
    ID              shift and go to state 35
    STRINGLIT       shift and go to state 38
    BSLASH          shift and go to state 39

    expression                     shift and go to state 147
    term                           shift and go to state 23
    factor                         shift and go to state 25
    constant                       shift and go to state 26
    dots                           shift and go to state 28
    string                         shift and go to state 32
    call                           shift and go to state 33
    call_array                     shift and go to state 34
    repeat_dots                    shift and go to state 36
    string_expr                    shift and go to state 37

state 132

    (108) if -> IF LPAREN . bool_expr RPAREN block if_content
    (52) bool_expr -> . relational_exp
    (53) bool_expr -> . relational_exp AND bool_expr
    (54) bool_expr -> . relational_exp OR bool_expr
    (55) relational_exp -> . expression comp expression
    (56) relational_exp -> . TRUE
    (57) relational_exp -> . FALSE
    (64) expression -> . term
    (65) expression -> . term PLUS term
    (66) expression -> . term MINUS term
    (67) term -> . factor
    (68) term -> . factor DIVIDE factor
    (69) term -> . factor TIMES factor
    (70) factor -> . constant
    (71) factor -> . COLON LPAREN expression RPAREN
    (73) constant -> . dots
    (74) constant -> . FLOATLIT
    (75) constant -> . BOOL
    (76) constant -> . NUMBER
    (77) constant -> . string
    (78) constant -> . call
    (79) constant -> . call_array
    (80) dots -> . ID
    (81) dots -> . repeat_dots
    (36) string -> . string_expr
    (37) string -> . string_expr string
    (104) call -> . ID LPAREN repeat_call RPAREN
    (72) call_array -> . ID LBRACK expression RBRACK
    (82) repeat_dots -> . ID DOT right_id
    (38) string_expr -> . STRINGLIT
    (39) string_expr -> . BSLASH LPAREN expression RPAREN

    TRUE            shift and go to state 143
    FALSE           shift and go to state 144
    COLON           shift and go to state 27
    FLOATLIT        shift and go to state 29
    BOOL            shift and go to state 30
    NUMBER          shift and go to state 31
    ID              shift and go to state 35
    STRINGLIT       shift and go to state 38
    BSLASH          shift and go to state 39

    bool_expr                      shift and go to state 148
    relational_exp                 shift and go to state 142
    expression                     shift and go to state 149
    term                           shift and go to state 23
    factor                         shift and go to state 25
    constant                       shift and go to state 26
    dots                           shift and go to state 28
    string                         shift and go to state 32
    call                           shift and go to state 33
    call_array                     shift and go to state 34
    repeat_dots                    shift and go to state 36
    string_expr                    shift and go to state 37

state 133

    (92) while -> WHILE LPAREN . bool_expr RPAREN block
    (52) bool_expr -> . relational_exp
    (53) bool_expr -> . relational_exp AND bool_expr
    (54) bool_expr -> . relational_exp OR bool_expr
    (55) relational_exp -> . expression comp expression
    (56) relational_exp -> . TRUE
    (57) relational_exp -> . FALSE
    (64) expression -> . term
    (65) expression -> . term PLUS term
    (66) expression -> . term MINUS term
    (67) term -> . factor
    (68) term -> . factor DIVIDE factor
    (69) term -> . factor TIMES factor
    (70) factor -> . constant
    (71) factor -> . COLON LPAREN expression RPAREN
    (73) constant -> . dots
    (74) constant -> . FLOATLIT
    (75) constant -> . BOOL
    (76) constant -> . NUMBER
    (77) constant -> . string
    (78) constant -> . call
    (79) constant -> . call_array
    (80) dots -> . ID
    (81) dots -> . repeat_dots
    (36) string -> . string_expr
    (37) string -> . string_expr string
    (104) call -> . ID LPAREN repeat_call RPAREN
    (72) call_array -> . ID LBRACK expression RBRACK
    (82) repeat_dots -> . ID DOT right_id
    (38) string_expr -> . STRINGLIT
    (39) string_expr -> . BSLASH LPAREN expression RPAREN

    TRUE            shift and go to state 143
    FALSE           shift and go to state 144
    COLON           shift and go to state 27
    FLOATLIT        shift and go to state 29
    BOOL            shift and go to state 30
    NUMBER          shift and go to state 31
    ID              shift and go to state 35
    STRINGLIT       shift and go to state 38
    BSLASH          shift and go to state 39

    bool_expr                      shift and go to state 150
    relational_exp                 shift and go to state 142
    expression                     shift and go to state 149
    term                           shift and go to state 23
    factor                         shift and go to state 25
    constant                       shift and go to state 26
    dots                           shift and go to state 28
    string                         shift and go to state 32
    call                           shift and go to state 33
    call_array                     shift and go to state 34
    repeat_dots                    shift and go to state 36
    string_expr                    shift and go to state 37

state 134

    (98) assign -> ID some_op . expression
    (64) expression -> . term
    (65) expression -> . term PLUS term
    (66) expression -> . term MINUS term
    (67) term -> . factor
    (68) term -> . factor DIVIDE factor
    (69) term -> . factor TIMES factor
    (70) factor -> . constant
    (71) factor -> . COLON LPAREN expression RPAREN
    (73) constant -> . dots
    (74) constant -> . FLOATLIT
    (75) constant -> . BOOL
    (76) constant -> . NUMBER
    (77) constant -> . string
    (78) constant -> . call
    (79) constant -> . call_array
    (80) dots -> . ID
    (81) dots -> . repeat_dots
    (36) string -> . string_expr
    (37) string -> . string_expr string
    (104) call -> . ID LPAREN repeat_call RPAREN
    (72) call_array -> . ID LBRACK expression RBRACK
    (82) repeat_dots -> . ID DOT right_id
    (38) string_expr -> . STRINGLIT
    (39) string_expr -> . BSLASH LPAREN expression RPAREN

    COLON           shift and go to state 27
    FLOATLIT        shift and go to state 29
    BOOL            shift and go to state 30
    NUMBER          shift and go to state 31
    ID              shift and go to state 35
    STRINGLIT       shift and go to state 38
    BSLASH          shift and go to state 39

    expression                     shift and go to state 151
    term                           shift and go to state 23
    factor                         shift and go to state 25
    constant                       shift and go to state 26
    dots                           shift and go to state 28
    string                         shift and go to state 32
    call                           shift and go to state 33
    call_array                     shift and go to state 34
    repeat_dots                    shift and go to state 36
    string_expr                    shift and go to state 37

state 135

    (99) some_op -> ASSIGN .

    COLON           reduce using rule 99 (some_op -> ASSIGN .)
    FLOATLIT        reduce using rule 99 (some_op -> ASSIGN .)
    BOOL            reduce using rule 99 (some_op -> ASSIGN .)
    NUMBER          reduce using rule 99 (some_op -> ASSIGN .)
    ID              reduce using rule 99 (some_op -> ASSIGN .)
    STRINGLIT       reduce using rule 99 (some_op -> ASSIGN .)
    BSLASH          reduce using rule 99 (some_op -> ASSIGN .)


state 136

    (100) some_op -> PASSIGN .

    COLON           reduce using rule 100 (some_op -> PASSIGN .)
    FLOATLIT        reduce using rule 100 (some_op -> PASSIGN .)
    BOOL            reduce using rule 100 (some_op -> PASSIGN .)
    NUMBER          reduce using rule 100 (some_op -> PASSIGN .)
    ID              reduce using rule 100 (some_op -> PASSIGN .)
    STRINGLIT       reduce using rule 100 (some_op -> PASSIGN .)
    BSLASH          reduce using rule 100 (some_op -> PASSIGN .)


state 137

    (101) some_op -> LASSIGN .

    COLON           reduce using rule 101 (some_op -> LASSIGN .)
    FLOATLIT        reduce using rule 101 (some_op -> LASSIGN .)
    BOOL            reduce using rule 101 (some_op -> LASSIGN .)
    NUMBER          reduce using rule 101 (some_op -> LASSIGN .)
    ID              reduce using rule 101 (some_op -> LASSIGN .)
    STRINGLIT       reduce using rule 101 (some_op -> LASSIGN .)
    BSLASH          reduce using rule 101 (some_op -> LASSIGN .)


state 138

    (102) some_op -> MASSIGN .

    COLON           reduce using rule 102 (some_op -> MASSIGN .)
    FLOATLIT        reduce using rule 102 (some_op -> MASSIGN .)
    BOOL            reduce using rule 102 (some_op -> MASSIGN .)
    NUMBER          reduce using rule 102 (some_op -> MASSIGN .)
    ID              reduce using rule 102 (some_op -> MASSIGN .)
    STRINGLIT       reduce using rule 102 (some_op -> MASSIGN .)
    BSLASH          reduce using rule 102 (some_op -> MASSIGN .)


state 139

    (103) some_op -> DASSIGN .

    COLON           reduce using rule 103 (some_op -> DASSIGN .)
    FLOATLIT        reduce using rule 103 (some_op -> DASSIGN .)
    BOOL            reduce using rule 103 (some_op -> DASSIGN .)
    NUMBER          reduce using rule 103 (some_op -> DASSIGN .)
    ID              reduce using rule 103 (some_op -> DASSIGN .)
    STRINGLIT       reduce using rule 103 (some_op -> DASSIGN .)
    BSLASH          reduce using rule 103 (some_op -> DASSIGN .)


state 140

    (96) return -> RETURN bool_expr .

    NLINE           reduce using rule 96 (return -> RETURN bool_expr .)


state 141

    (97) return -> RETURN expression .
    (55) relational_exp -> expression . comp expression
    (58) comp -> . LESS
    (59) comp -> . MORE
    (60) comp -> . EQUALS
    (61) comp -> . NEQUALS
    (62) comp -> . LEQUALS
    (63) comp -> . MEQUALS

    NLINE           reduce using rule 97 (return -> RETURN expression .)
    LESS            shift and go to state 153
    MORE            shift and go to state 154
    EQUALS          shift and go to state 155
    NEQUALS         shift and go to state 156
    LEQUALS         shift and go to state 157
    MEQUALS         shift and go to state 158

    comp                           shift and go to state 152

state 142

    (52) bool_expr -> relational_exp .
    (53) bool_expr -> relational_exp . AND bool_expr
    (54) bool_expr -> relational_exp . OR bool_expr

    NLINE           reduce using rule 52 (bool_expr -> relational_exp .)
    RPAREN          reduce using rule 52 (bool_expr -> relational_exp .)
    AND             shift and go to state 159
    OR              shift and go to state 160


state 143

    (56) relational_exp -> TRUE .

    AND             reduce using rule 56 (relational_exp -> TRUE .)
    OR              reduce using rule 56 (relational_exp -> TRUE .)
    NLINE           reduce using rule 56 (relational_exp -> TRUE .)
    RPAREN          reduce using rule 56 (relational_exp -> TRUE .)


state 144

    (57) relational_exp -> FALSE .

    AND             reduce using rule 57 (relational_exp -> FALSE .)
    OR              reduce using rule 57 (relational_exp -> FALSE .)
    NLINE           reduce using rule 57 (relational_exp -> FALSE .)
    RPAREN          reduce using rule 57 (relational_exp -> FALSE .)


state 145

    (12) repeat_init_block -> init_block_content NLINE repeat_init_block .

    RCURLY          reduce using rule 12 (repeat_init_block -> init_block_content NLINE repeat_init_block .)


state 146

    (93) input -> variable ASSIGN INPUT . LPAREN string RPAREN

    LPAREN          shift and go to state 161


state 147

    (94) display -> PRINT LPAREN expression . RPAREN

    RPAREN          shift and go to state 162


state 148

    (108) if -> IF LPAREN bool_expr . RPAREN block if_content

    RPAREN          shift and go to state 163


state 149

    (55) relational_exp -> expression . comp expression
    (58) comp -> . LESS
    (59) comp -> . MORE
    (60) comp -> . EQUALS
    (61) comp -> . NEQUALS
    (62) comp -> . LEQUALS
    (63) comp -> . MEQUALS

    LESS            shift and go to state 153
    MORE            shift and go to state 154
    EQUALS          shift and go to state 155
    NEQUALS         shift and go to state 156
    LEQUALS         shift and go to state 157
    MEQUALS         shift and go to state 158

    comp                           shift and go to state 152

state 150

    (92) while -> WHILE LPAREN bool_expr . RPAREN block

    RPAREN          shift and go to state 164


state 151

    (98) assign -> ID some_op expression .

    NLINE           reduce using rule 98 (assign -> ID some_op expression .)


state 152

    (55) relational_exp -> expression comp . expression
    (64) expression -> . term
    (65) expression -> . term PLUS term
    (66) expression -> . term MINUS term
    (67) term -> . factor
    (68) term -> . factor DIVIDE factor
    (69) term -> . factor TIMES factor
    (70) factor -> . constant
    (71) factor -> . COLON LPAREN expression RPAREN
    (73) constant -> . dots
    (74) constant -> . FLOATLIT
    (75) constant -> . BOOL
    (76) constant -> . NUMBER
    (77) constant -> . string
    (78) constant -> . call
    (79) constant -> . call_array
    (80) dots -> . ID
    (81) dots -> . repeat_dots
    (36) string -> . string_expr
    (37) string -> . string_expr string
    (104) call -> . ID LPAREN repeat_call RPAREN
    (72) call_array -> . ID LBRACK expression RBRACK
    (82) repeat_dots -> . ID DOT right_id
    (38) string_expr -> . STRINGLIT
    (39) string_expr -> . BSLASH LPAREN expression RPAREN

    COLON           shift and go to state 27
    FLOATLIT        shift and go to state 29
    BOOL            shift and go to state 30
    NUMBER          shift and go to state 31
    ID              shift and go to state 35
    STRINGLIT       shift and go to state 38
    BSLASH          shift and go to state 39

    expression                     shift and go to state 165
    term                           shift and go to state 23
    factor                         shift and go to state 25
    constant                       shift and go to state 26
    dots                           shift and go to state 28
    string                         shift and go to state 32
    call                           shift and go to state 33
    call_array                     shift and go to state 34
    repeat_dots                    shift and go to state 36
    string_expr                    shift and go to state 37

state 153

    (58) comp -> LESS .

    COLON           reduce using rule 58 (comp -> LESS .)
    FLOATLIT        reduce using rule 58 (comp -> LESS .)
    BOOL            reduce using rule 58 (comp -> LESS .)
    NUMBER          reduce using rule 58 (comp -> LESS .)
    ID              reduce using rule 58 (comp -> LESS .)
    STRINGLIT       reduce using rule 58 (comp -> LESS .)
    BSLASH          reduce using rule 58 (comp -> LESS .)


state 154

    (59) comp -> MORE .

    COLON           reduce using rule 59 (comp -> MORE .)
    FLOATLIT        reduce using rule 59 (comp -> MORE .)
    BOOL            reduce using rule 59 (comp -> MORE .)
    NUMBER          reduce using rule 59 (comp -> MORE .)
    ID              reduce using rule 59 (comp -> MORE .)
    STRINGLIT       reduce using rule 59 (comp -> MORE .)
    BSLASH          reduce using rule 59 (comp -> MORE .)


state 155

    (60) comp -> EQUALS .

    COLON           reduce using rule 60 (comp -> EQUALS .)
    FLOATLIT        reduce using rule 60 (comp -> EQUALS .)
    BOOL            reduce using rule 60 (comp -> EQUALS .)
    NUMBER          reduce using rule 60 (comp -> EQUALS .)
    ID              reduce using rule 60 (comp -> EQUALS .)
    STRINGLIT       reduce using rule 60 (comp -> EQUALS .)
    BSLASH          reduce using rule 60 (comp -> EQUALS .)


state 156

    (61) comp -> NEQUALS .

    COLON           reduce using rule 61 (comp -> NEQUALS .)
    FLOATLIT        reduce using rule 61 (comp -> NEQUALS .)
    BOOL            reduce using rule 61 (comp -> NEQUALS .)
    NUMBER          reduce using rule 61 (comp -> NEQUALS .)
    ID              reduce using rule 61 (comp -> NEQUALS .)
    STRINGLIT       reduce using rule 61 (comp -> NEQUALS .)
    BSLASH          reduce using rule 61 (comp -> NEQUALS .)


state 157

    (62) comp -> LEQUALS .

    COLON           reduce using rule 62 (comp -> LEQUALS .)
    FLOATLIT        reduce using rule 62 (comp -> LEQUALS .)
    BOOL            reduce using rule 62 (comp -> LEQUALS .)
    NUMBER          reduce using rule 62 (comp -> LEQUALS .)
    ID              reduce using rule 62 (comp -> LEQUALS .)
    STRINGLIT       reduce using rule 62 (comp -> LEQUALS .)
    BSLASH          reduce using rule 62 (comp -> LEQUALS .)


state 158

    (63) comp -> MEQUALS .

    COLON           reduce using rule 63 (comp -> MEQUALS .)
    FLOATLIT        reduce using rule 63 (comp -> MEQUALS .)
    BOOL            reduce using rule 63 (comp -> MEQUALS .)
    NUMBER          reduce using rule 63 (comp -> MEQUALS .)
    ID              reduce using rule 63 (comp -> MEQUALS .)
    STRINGLIT       reduce using rule 63 (comp -> MEQUALS .)
    BSLASH          reduce using rule 63 (comp -> MEQUALS .)


state 159

    (53) bool_expr -> relational_exp AND . bool_expr
    (52) bool_expr -> . relational_exp
    (53) bool_expr -> . relational_exp AND bool_expr
    (54) bool_expr -> . relational_exp OR bool_expr
    (55) relational_exp -> . expression comp expression
    (56) relational_exp -> . TRUE
    (57) relational_exp -> . FALSE
    (64) expression -> . term
    (65) expression -> . term PLUS term
    (66) expression -> . term MINUS term
    (67) term -> . factor
    (68) term -> . factor DIVIDE factor
    (69) term -> . factor TIMES factor
    (70) factor -> . constant
    (71) factor -> . COLON LPAREN expression RPAREN
    (73) constant -> . dots
    (74) constant -> . FLOATLIT
    (75) constant -> . BOOL
    (76) constant -> . NUMBER
    (77) constant -> . string
    (78) constant -> . call
    (79) constant -> . call_array
    (80) dots -> . ID
    (81) dots -> . repeat_dots
    (36) string -> . string_expr
    (37) string -> . string_expr string
    (104) call -> . ID LPAREN repeat_call RPAREN
    (72) call_array -> . ID LBRACK expression RBRACK
    (82) repeat_dots -> . ID DOT right_id
    (38) string_expr -> . STRINGLIT
    (39) string_expr -> . BSLASH LPAREN expression RPAREN

    TRUE            shift and go to state 143
    FALSE           shift and go to state 144
    COLON           shift and go to state 27
    FLOATLIT        shift and go to state 29
    BOOL            shift and go to state 30
    NUMBER          shift and go to state 31
    ID              shift and go to state 35
    STRINGLIT       shift and go to state 38
    BSLASH          shift and go to state 39

    relational_exp                 shift and go to state 142
    bool_expr                      shift and go to state 166
    expression                     shift and go to state 149
    term                           shift and go to state 23
    factor                         shift and go to state 25
    constant                       shift and go to state 26
    dots                           shift and go to state 28
    string                         shift and go to state 32
    call                           shift and go to state 33
    call_array                     shift and go to state 34
    repeat_dots                    shift and go to state 36
    string_expr                    shift and go to state 37

state 160

    (54) bool_expr -> relational_exp OR . bool_expr
    (52) bool_expr -> . relational_exp
    (53) bool_expr -> . relational_exp AND bool_expr
    (54) bool_expr -> . relational_exp OR bool_expr
    (55) relational_exp -> . expression comp expression
    (56) relational_exp -> . TRUE
    (57) relational_exp -> . FALSE
    (64) expression -> . term
    (65) expression -> . term PLUS term
    (66) expression -> . term MINUS term
    (67) term -> . factor
    (68) term -> . factor DIVIDE factor
    (69) term -> . factor TIMES factor
    (70) factor -> . constant
    (71) factor -> . COLON LPAREN expression RPAREN
    (73) constant -> . dots
    (74) constant -> . FLOATLIT
    (75) constant -> . BOOL
    (76) constant -> . NUMBER
    (77) constant -> . string
    (78) constant -> . call
    (79) constant -> . call_array
    (80) dots -> . ID
    (81) dots -> . repeat_dots
    (36) string -> . string_expr
    (37) string -> . string_expr string
    (104) call -> . ID LPAREN repeat_call RPAREN
    (72) call_array -> . ID LBRACK expression RBRACK
    (82) repeat_dots -> . ID DOT right_id
    (38) string_expr -> . STRINGLIT
    (39) string_expr -> . BSLASH LPAREN expression RPAREN

    TRUE            shift and go to state 143
    FALSE           shift and go to state 144
    COLON           shift and go to state 27
    FLOATLIT        shift and go to state 29
    BOOL            shift and go to state 30
    NUMBER          shift and go to state 31
    ID              shift and go to state 35
    STRINGLIT       shift and go to state 38
    BSLASH          shift and go to state 39

    relational_exp                 shift and go to state 142
    bool_expr                      shift and go to state 167
    expression                     shift and go to state 149
    term                           shift and go to state 23
    factor                         shift and go to state 25
    constant                       shift and go to state 26
    dots                           shift and go to state 28
    string                         shift and go to state 32
    call                           shift and go to state 33
    call_array                     shift and go to state 34
    repeat_dots                    shift and go to state 36
    string_expr                    shift and go to state 37

state 161

    (93) input -> variable ASSIGN INPUT LPAREN . string RPAREN
    (36) string -> . string_expr
    (37) string -> . string_expr string
    (38) string_expr -> . STRINGLIT
    (39) string_expr -> . BSLASH LPAREN expression RPAREN

    STRINGLIT       shift and go to state 38
    BSLASH          shift and go to state 39

    string                         shift and go to state 168
    string_expr                    shift and go to state 37

state 162

    (94) display -> PRINT LPAREN expression RPAREN .

    NLINE           reduce using rule 94 (display -> PRINT LPAREN expression RPAREN .)


state 163

    (108) if -> IF LPAREN bool_expr RPAREN . block if_content
    (8) block -> . LCURLY NLINE repeat_block RCURLY

    LCURLY          shift and go to state 170

    block                          shift and go to state 169

state 164

    (92) while -> WHILE LPAREN bool_expr RPAREN . block
    (8) block -> . LCURLY NLINE repeat_block RCURLY

    LCURLY          shift and go to state 170

    block                          shift and go to state 171

state 165

    (55) relational_exp -> expression comp expression .

    AND             reduce using rule 55 (relational_exp -> expression comp expression .)
    OR              reduce using rule 55 (relational_exp -> expression comp expression .)
    NLINE           reduce using rule 55 (relational_exp -> expression comp expression .)
    RPAREN          reduce using rule 55 (relational_exp -> expression comp expression .)


state 166

    (53) bool_expr -> relational_exp AND bool_expr .

    NLINE           reduce using rule 53 (bool_expr -> relational_exp AND bool_expr .)
    RPAREN          reduce using rule 53 (bool_expr -> relational_exp AND bool_expr .)


state 167

    (54) bool_expr -> relational_exp OR bool_expr .

    NLINE           reduce using rule 54 (bool_expr -> relational_exp OR bool_expr .)
    RPAREN          reduce using rule 54 (bool_expr -> relational_exp OR bool_expr .)


state 168

    (93) input -> variable ASSIGN INPUT LPAREN string . RPAREN

    RPAREN          shift and go to state 172


state 169

    (108) if -> IF LPAREN bool_expr RPAREN block . if_content
    (109) if_content -> . ELSE if
    (110) if_content -> . ELSE block
    (111) if_content -> .

    ELSE            shift and go to state 174
    NLINE           reduce using rule 111 (if_content -> .)

    if_content                     shift and go to state 173

state 170

    (8) block -> LCURLY . NLINE repeat_block RCURLY

    NLINE           shift and go to state 175


state 171

    (92) while -> WHILE LPAREN bool_expr RPAREN block .

    NLINE           reduce using rule 92 (while -> WHILE LPAREN bool_expr RPAREN block .)


state 172

    (93) input -> variable ASSIGN INPUT LPAREN string RPAREN .

    NLINE           reduce using rule 93 (input -> variable ASSIGN INPUT LPAREN string RPAREN .)


state 173

    (108) if -> IF LPAREN bool_expr RPAREN block if_content .

    NLINE           reduce using rule 108 (if -> IF LPAREN bool_expr RPAREN block if_content .)


state 174

    (109) if_content -> ELSE . if
    (110) if_content -> ELSE . block
    (108) if -> . IF LPAREN bool_expr RPAREN block if_content
    (8) block -> . LCURLY NLINE repeat_block RCURLY

    IF              shift and go to state 122
    LCURLY          shift and go to state 170

    if                             shift and go to state 176
    block                          shift and go to state 177

state 175

    (8) block -> LCURLY NLINE . repeat_block RCURLY
    (9) repeat_block -> . statement NLINE repeat_block
    (10) repeat_block -> .
    (85) statement -> . display
    (86) statement -> . if
    (87) statement -> . while
    (88) statement -> . input
    (89) statement -> . assign
    (90) statement -> . call
    (91) statement -> . return
    (94) display -> . PRINT LPAREN expression RPAREN
    (108) if -> . IF LPAREN bool_expr RPAREN block if_content
    (92) while -> . WHILE LPAREN bool_expr RPAREN block
    (93) input -> . variable ASSIGN INPUT LPAREN string RPAREN
    (98) assign -> . ID some_op expression
    (104) call -> . ID LPAREN repeat_call RPAREN
    (95) return -> . RETURN
    (96) return -> . RETURN bool_expr
    (97) return -> . RETURN expression
    (26) variable -> . VAR ID
    (27) variable -> . VAR ID COLON type

    RCURLY          reduce using rule 10 (repeat_block -> .)
    PRINT           shift and go to state 121
    IF              shift and go to state 122
    WHILE           shift and go to state 123
    ID              shift and go to state 124
    RETURN          shift and go to state 125
    VAR             shift and go to state 10

    repeat_block                   shift and go to state 178
    statement                      shift and go to state 179
    display                        shift and go to state 113
    if                             shift and go to state 114
    while                          shift and go to state 115
    input                          shift and go to state 116
    assign                         shift and go to state 117
    call                           shift and go to state 118
    return                         shift and go to state 119
    variable                       shift and go to state 180

state 176

    (109) if_content -> ELSE if .

    NLINE           reduce using rule 109 (if_content -> ELSE if .)


state 177

    (110) if_content -> ELSE block .

    NLINE           reduce using rule 110 (if_content -> ELSE block .)


state 178

    (8) block -> LCURLY NLINE repeat_block . RCURLY

    RCURLY          shift and go to state 181


state 179

    (9) repeat_block -> statement . NLINE repeat_block

    NLINE           shift and go to state 182


state 180

    (93) input -> variable . ASSIGN INPUT LPAREN string RPAREN

    ASSIGN          shift and go to state 183


state 181

    (8) block -> LCURLY NLINE repeat_block RCURLY .

    ELSE            reduce using rule 8 (block -> LCURLY NLINE repeat_block RCURLY .)
    NLINE           reduce using rule 8 (block -> LCURLY NLINE repeat_block RCURLY .)


state 182

    (9) repeat_block -> statement NLINE . repeat_block
    (9) repeat_block -> . statement NLINE repeat_block
    (10) repeat_block -> .
    (85) statement -> . display
    (86) statement -> . if
    (87) statement -> . while
    (88) statement -> . input
    (89) statement -> . assign
    (90) statement -> . call
    (91) statement -> . return
    (94) display -> . PRINT LPAREN expression RPAREN
    (108) if -> . IF LPAREN bool_expr RPAREN block if_content
    (92) while -> . WHILE LPAREN bool_expr RPAREN block
    (93) input -> . variable ASSIGN INPUT LPAREN string RPAREN
    (98) assign -> . ID some_op expression
    (104) call -> . ID LPAREN repeat_call RPAREN
    (95) return -> . RETURN
    (96) return -> . RETURN bool_expr
    (97) return -> . RETURN expression
    (26) variable -> . VAR ID
    (27) variable -> . VAR ID COLON type

    RCURLY          reduce using rule 10 (repeat_block -> .)
    PRINT           shift and go to state 121
    IF              shift and go to state 122
    WHILE           shift and go to state 123
    ID              shift and go to state 124
    RETURN          shift and go to state 125
    VAR             shift and go to state 10

    statement                      shift and go to state 179
    repeat_block                   shift and go to state 184
    display                        shift and go to state 113
    if                             shift and go to state 114
    while                          shift and go to state 115
    input                          shift and go to state 116
    assign                         shift and go to state 117
    call                           shift and go to state 118
    return                         shift and go to state 119
    variable                       shift and go to state 180

state 183

    (93) input -> variable ASSIGN . INPUT LPAREN string RPAREN

    INPUT           shift and go to state 146


state 184

    (9) repeat_block -> statement NLINE repeat_block .

    RCURLY          reduce using rule 9 (repeat_block -> statement NLINE repeat_block .)

